[{"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\index.js":"1","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\App.js":"2","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\reportWebVitals.js":"3","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Home.js":"5","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js":"6","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"7","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\api.js":"8","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js":"9","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js":"10","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js":"11","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js":"12","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js":"13","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientContext.js":"14","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientReducer.js":"15","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientAction.js":"16","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Mhpss\\pages\\CreateUpdateMHPSS.jsx":"17","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\RecentActivities.jsx":"18"},{"size":753,"mtime":1681313560680,"results":"19","hashOfConfig":"20"},{"size":1187,"mtime":1702051129854,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1681313566498,"results":"22","hashOfConfig":"20"},{"size":9235,"mtime":1681313561390,"results":"23","hashOfConfig":"20"},{"size":1489,"mtime":1702051180978,"results":"24","hashOfConfig":"20"},{"size":2758,"mtime":1702051239324,"results":"25","hashOfConfig":"20"},{"size":3056,"mtime":1681313561390,"results":"26","hashOfConfig":"20"},{"size":419,"mtime":1681313561389,"results":"27","hashOfConfig":"20"},{"size":6438,"mtime":1701703337119,"results":"28","hashOfConfig":"20"},{"size":9591,"mtime":1701768565138,"results":"29","hashOfConfig":"20"},{"size":1078,"mtime":1701883355153,"results":"30","hashOfConfig":"20"},{"size":2007,"mtime":1702399281607,"results":"31","hashOfConfig":"20"},{"size":13687,"mtime":1702051881025,"results":"32","hashOfConfig":"20"},{"size":644,"mtime":1702394094263,"results":"33","hashOfConfig":"20"},{"size":1009,"mtime":1702394432038,"results":"34","hashOfConfig":"20"},{"size":1180,"mtime":1702399791636,"results":"35","hashOfConfig":"20"},{"size":1358,"mtime":1702410195789,"results":"36","hashOfConfig":"20"},{"size":11974,"mtime":1702400344307,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"cyywql",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\index.js",["82"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\App.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\reportWebVitals.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Home.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientDetail.js",["83","84","85","86","87","88"],"import React,{useState, useContext, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n    const { classes } = props;\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'LOAD_PATIENT_OBJECT', payload: history.location && history.location.state ? history.location.state.patientObj : {}});\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}}});\r\n    }, [dispatch]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >MHPSS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail />\r\n            <SubMenu />\r\n            <br/>\r\n\r\n          {activeContent.route==='patient-history' &&( <PatientHistory />)}\r\n          {activeContent.route==='recent-history' &&(<RecentHistory />)}\r\n\r\n          {/* History Pages */}\r\n\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\api.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientCard.js",["89","90","91","92","93","94","95"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\nimport {calculateAge} from \"./../../context/patient/PatientAction\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { toast} from \"react-toastify\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const {patientObject, dispatch} = useContext(PatientContext);\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    const copiedNotification = () => {\r\n        toast(\"Copied!\", {position: toast.POSITION.TOP_RIGHT});\r\n        setIsCopied(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n           <ExpansionPanel >\r\n                    <ExpansionPanelSummary >\r\n                    <Row>\r\n                        <Col md={12}>\r\n                        {patientObject && patientObject!==null ? (<>\r\n                        <Row className={\"mt-1\"}>\r\n                        <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                            {patientObject.firstName + \" \" + patientObject.surname }\r\n                            </b>\r\n                            <Link to={\"/\"} >\r\n                            <ButtonMui\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end ms-2 mr-2 mt-2\"\r\n                                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                                startIcon={<TiArrowBack  />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </ButtonMui>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Patient ID : <b style={{color:'#0B72AA'}}>{patientObject.hospitalNumber}</b>\r\n                            <CopyToClipboard text={patientObject.hospitalNumber}\r\n                              onCopy={() => setIsCopied(true)}>\r\n                              <span style={{ marginLeft: '10px' }}><FontAwesomeIcon icon={faClipboard} size=\"lg\" /></span>\r\n                            </CopyToClipboard>\r\n                            {isCopied && copiedNotification()}\r\n                        </span>\r\n                        </Col>\r\n\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObject.dateOfBirth}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Age : <b style={{color:'#0B72AA'}}>{calculateAge(moment(patientObject.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Gender :{\" \"}\r\n                            <b style={{color:'#0B72AA'}}>{patientObject.gender}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Phone Number : <b style={{color:'#0B72AA'}}>{patientObject.phone}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Address : <b style={{color:'#0B72AA'}}>{patientObject.address} </b>\r\n                        </span>\r\n                        </Col>\r\n\r\n                        </Row>\r\n                        </>)\r\n                        :(\r\n                          <>\r\n                          <p>Loading please wait..</p>\r\n                          </>\r\n                        )\r\n                      }\r\n                        </Col>\r\n                    </Row>\r\n                    </ExpansionPanelSummary>\r\n                    <Divider />\r\n            </ExpansionPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\PatientList.js",["96","97","98","99","100","101"],"import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}mhpss-screening/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden:showPPI\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}mhpss-screening/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.surname,\r\n                                    hospital_number: row.hospitalNumber,\r\n                                    gender:row && row.gender ? row.gender : \"\",\r\n                                    age: row.age,\r\n\r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: props => (\r\n                <div >\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                        <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"                       \r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI===true? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                        />\r\n                        <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                        <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                        </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                </div>\r\n                ),\r\n            }}\r\n    />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Patient\\SubMenu.js",["102","103","104","105"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Menu, Popup } from \"semantic-ui-react\";\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\n\r\nfunction SubMenu() {\r\n\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n    useEffect(() => {\r\n        //Observation();\r\n    }, [patientObject]);\r\n\r\n    const loadPatientHistory = ()=>{\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:'patient-history'}});\r\n    }\r\n    const onClickHome = (row) =>{\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}}});\r\n    }\r\n\r\n    return (\r\n         <div>\r\n\r\n             <Menu size=\"large\" color={\"black\"} inverted >\r\n                 (<>\r\n                     <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\r\n//                     <Menu.Item onClick={() => loadPatientHistory()} >History</Menu.Item>\r\n                 </>)\r\n             </Menu>\r\n\r\n         </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\History\\RecentHistory.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\nimport {Button } from 'semantic-ui-react'\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\nimport CreateUpdateMHPSS from \"./../Mhpss/pages/CreateUpdateMHPSS\";\r\nimport RecentActivities from \"./../RecentActivities\";\r\nimport {GetPatientRecentActivities} from \"./../../context/patient/PatientAction\";\r\n\r\nconst RecentHistory = () => {\r\n  const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n  useEffect(() => {\r\n    GetPatientRecentActivities({dispatch, patientObject});\r\n  }, [patientObject.personUuid]);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n        <div className=\"col-xl-3 col-xxl-3 col-lg-3\">\r\n            <RecentActivities />\r\n        </div>\r\n        <div className=\"col-xl-7 col-xxl-7 col-lg-7\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n                    <h4 className=\"card-title\">Screening</h4>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <CreateUpdateMHPSS />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-xl-2 col-xxl-2 col-lg-2\">\r\n            <RecentActivities />\r\n        </div>\r\n      </div>\r\n    <div className=\"col-xl-2 col-xxl-2 col-lg-2\"></div>\r\n  </Fragment>\r\n);\r\n};\r\n\r\nexport default RecentHistory;\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\History\\PatientHistory.js",["120","121","122","123","124"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n    const toggle = () => setOpen(!open);\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [patientObject.personUuid]);\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}mhpss/general-activities/patients/${patientObject.personUuid}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n               .catch((error) => {\r\n               });\r\n        }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientContext.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientReducer.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\context\\patient\\PatientAction.js",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\Mhpss\\pages\\CreateUpdateMHPSS.jsx",[],"D:\\Documents\\Code\\Java\\LAMISPlus\\MHPSS-Module\\src\\main\\webapp\\jsx\\components\\RecentActivities.jsx",["125","126","127"],"import React, { Fragment, useState, useEffect, useContext } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../api\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport {Button } from 'semantic-ui-react'\r\nimport PatientContext from \"./../context/patient/PatientContext\";\r\nimport {GetPatientRecentActivities} from \"./../context/patient/PatientAction\";\r\n\r\n\r\n\r\nconst RecentActivities = () => {\r\n    const [activeAccordionHeaderShadow,setActiveAccordionHeaderShadow] = useState(0);\r\n    const {recentActivities, activeContent, open, record, saving, patientObject, dispatch} = useContext(PatientContext);\r\n      const toggle = () => dispatch({type: 'SET_OPEN', payload: !open});\r\n\r\n    const ActivityName =(name)=> {\r\n        if(name==='MHPSS Screening'){\r\n          return \"MHPSS\"\r\n        }else {\r\n          return \"Unknown\"\r\n        }\r\n      }\r\n\r\n      const LoadViewPage =(row,action)=>{\r\n        //Load MHPSS Data\r\n      }\r\n\r\n      const LoadModal =(row)=>{\r\n          toggle()\r\n          dispatch({type: 'SET_RECORD', payload: row});\r\n      }\r\n\r\n      const LoadDeletePage =(row)=>{\r\n        if(record.path==='mhpss-screening'){\r\n            dispatch({type: 'SET_SAVING', payload: true});\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}mhpss-screening/${record.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                dispatch({type: 'SET_SAVING', payload: false});\r\n                toast.success(\"Record Deleted Successfully\");\r\n                GetPatientRecentActivities({dispatch, patientObject})\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                dispatch({type: 'SET_SAVING', payload: false});\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something wen0t wrong. Please try again...\");\r\n                  }\r\n            });\r\n          }\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <div className=\"card-header  border-0 pb-0\" >\r\n                  <h4 className=\"card-title\"> Recent Activities</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                        <Accordion\r\n                            className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                            defaultActiveKey=\"0\"\r\n                        >\r\n\r\n                            {recentActivities.map((data, i)=>\r\n                                <div className=\"accordion-item\" key={i}>\r\n                                    <Accordion.Toggle\r\n                                      as={Card.Text}\r\n                                      eventKey={`${i}`}\r\n                                      className={`accordion-header ${\r\n                                        activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                                      } accordion-header-info`}\r\n                                      onClick={() =>\r\n                                        setActiveAccordionHeaderShadow(\r\n                                          activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      <span className=\"accordion-header-icon\"></span>\r\n                                      <span className=\"accordion-header-text\"><Typography variant=\"button\">Encounter Date : <span className=\"\">{data.date}</span></Typography> </span>\r\n                                      <span className=\"accordion-header-indicator\"></span>\r\n                                    </Accordion.Toggle>\r\n                                    <Accordion.Collapse\r\n                                        eventKey={`${i}`}\r\n                                        className=\"accordion__body\"\r\n                                    >\r\n                                        <div className=\"accordion-body-text\">\r\n                                            <ul className=\"timeline\">\r\n                                                {data.activities && data.activities.map((activity,index) => (\r\n                                                    <>\r\n                                                        <li>\r\n                                                            <div className=\"timeline-panel\">\r\n                                                                <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                                                                <div className=\"media-body\">\r\n                                                                    <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                                                    <small className=\"d-block\">\r\n                                                                        {activity.date}\r\n                                                                    </small>\r\n                                                                </div>\r\n                                                                <Dropdown className=\"dropdown\">\r\n                                                                    <Dropdown.Toggle\r\n                                                                        variant=\" light\"\r\n                                                                        className=\"i-false p-0 btn-info sharp\"\r\n                                                                >\r\n                                                                    <svg\r\n                                                                        width=\"18px\"\r\n                                                                        height=\"18px\"\r\n                                                                        viewBox=\"0 0 24 24\"\r\n                                                                        version=\"1.1\"\r\n                                                                    >\r\n                                                                        <g\r\n                                                                            stroke=\"none\"\r\n                                                                            strokeWidth=\"1\"\r\n                                                                            fill=\"none\"\r\n                                                                            fillRule=\"evenodd\"\r\n                                                                        >\r\n                                                                            <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                            <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                                                            <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                            <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                                                       </g>\r\n                                                                    </svg>\r\n                                                                </Dropdown.Toggle>\r\n                                                                    <Dropdown.Menu className=\"dropdown-menu\">\r\n                                                                        <Dropdown.Item\r\n                                                                            className=\"dropdown-item\"\r\n                                                                            onClick={()=>LoadViewPage(activity,'view')}\r\n                                                                        >\r\n                                                                            View\r\n                                                                        </Dropdown.Item>\r\n\r\n                                                                        <Dropdown.Item\r\n                                                                            className=\"dropdown-item\"\r\n                                                                            onClick={()=>LoadViewPage(activity,'update')}\r\n                                                                        >\r\n                                                                            Update\r\n                                                                        </Dropdown.Item>\r\n\r\n                                                                        <Dropdown.Item\r\n                                                                            className=\"dropdown-item\"\r\n                                                                            to=\"/widget-basic\"\r\n                                                                            onClick={()=>LoadModal(activity)}\r\n                                                                        >\r\n                                                                            Delete\r\n                                                                        </Dropdown.Item>\r\n\r\n                                                                    </Dropdown.Menu>\r\n                                                                </Dropdown>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    </>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </Accordion.Collapse>\r\n                                </div>\r\n                            )}\r\n                        </Accordion>\r\n\r\n                    </PerfectScrollbar>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\"\r\n            >\r\n                <Modal.Header >\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Notification!\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={()=>LoadDeletePage()}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n                    <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RecentActivities;",{"ruleId":"128","severity":1,"message":"129","line":4,"column":41,"nodeType":"130","messageId":"131","endLine":4,"endColumn":47},{"ruleId":"128","severity":1,"message":"132","line":1,"column":15,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"133","line":13,"column":8,"nodeType":"130","messageId":"131","endLine":13,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":14,"column":17,"nodeType":"130","messageId":"131","endLine":14,"endColumn":24},{"ruleId":"128","severity":1,"message":"135","line":14,"column":26,"nodeType":"130","messageId":"131","endLine":14,"endColumn":31},{"ruleId":"128","severity":1,"message":"136","line":55,"column":12,"nodeType":"130","messageId":"131","endLine":55,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":61,"column":8,"nodeType":"139","endLine":61,"endColumn":18,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"141","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"142","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":18},{"ruleId":"128","severity":1,"message":"143","line":11,"column":9,"nodeType":"130","messageId":"131","endLine":11,"endColumn":14},{"ruleId":"128","severity":1,"message":"134","line":17,"column":17,"nodeType":"130","messageId":"131","endLine":17,"endColumn":24},{"ruleId":"128","severity":1,"message":"135","line":17,"column":26,"nodeType":"130","messageId":"131","endLine":17,"endColumn":31},{"ruleId":"128","severity":1,"message":"144","line":18,"column":8,"nodeType":"130","messageId":"131","endLine":18,"endColumn":18},{"ruleId":"128","severity":1,"message":"145","line":68,"column":27,"nodeType":"130","messageId":"131","endLine":68,"endColumn":35},{"ruleId":"146","severity":1,"message":"147","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":24,"fix":"150"},{"ruleId":"128","severity":1,"message":"151","line":25,"column":10,"nodeType":"130","messageId":"131","endLine":25,"endColumn":20},{"ruleId":"128","severity":1,"message":"143","line":30,"column":10,"nodeType":"130","messageId":"131","endLine":30,"endColumn":15},{"ruleId":"128","severity":1,"message":"152","line":33,"column":8,"nodeType":"130","messageId":"131","endLine":33,"endColumn":14},{"ruleId":"128","severity":1,"message":"153","line":62,"column":12,"nodeType":"130","messageId":"131","endLine":62,"endColumn":23},{"ruleId":"128","severity":1,"message":"154","line":63,"column":12,"nodeType":"130","messageId":"131","endLine":63,"endColumn":19},{"ruleId":"128","severity":1,"message":"132","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"155","line":2,"column":16,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"156","line":8,"column":27,"nodeType":"130","messageId":"131","endLine":8,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":25,"column":80,"nodeType":"159","messageId":"160","endLine":26,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"161","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":18},{"ruleId":"128","severity":1,"message":"151","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":20},{"ruleId":"128","severity":1,"message":"162","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":24},{"ruleId":"128","severity":1,"message":"133","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":13},{"ruleId":"128","severity":1,"message":"134","line":9,"column":17,"nodeType":"130","messageId":"131","endLine":9,"endColumn":24},{"ruleId":"128","severity":1,"message":"135","line":9,"column":26,"nodeType":"130","messageId":"131","endLine":9,"endColumn":31},{"ruleId":"128","severity":1,"message":"163","line":11,"column":11,"nodeType":"130","messageId":"131","endLine":11,"endColumn":15},{"ruleId":"128","severity":1,"message":"164","line":11,"column":16,"nodeType":"130","messageId":"131","endLine":11,"endColumn":25},{"ruleId":"128","severity":1,"message":"165","line":12,"column":11,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"128","severity":1,"message":"166","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":15},{"ruleId":"128","severity":1,"message":"167","line":15,"column":9,"nodeType":"130","messageId":"131","endLine":15,"endColumn":15},{"ruleId":"128","severity":1,"message":"156","line":22,"column":25,"nodeType":"130","messageId":"131","endLine":22,"endColumn":38},{"ruleId":"137","severity":1,"message":"168","line":25,"column":6,"nodeType":"139","endLine":25,"endColumn":32,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":24,"fix":"170"},{"ruleId":"128","severity":1,"message":"171","line":57,"column":7,"nodeType":"130","messageId":"131","endLine":57,"endColumn":16},{"ruleId":"128","severity":1,"message":"156","line":109,"column":27,"nodeType":"130","messageId":"131","endLine":109,"endColumn":40},{"ruleId":"128","severity":1,"message":"145","line":109,"column":42,"nodeType":"130","messageId":"131","endLine":109,"endColumn":50},{"ruleId":"137","severity":1,"message":"172","line":113,"column":10,"nodeType":"139","endLine":113,"endColumn":36,"suggestions":"173"},{"ruleId":"128","severity":1,"message":"141","line":1,"column":37,"nodeType":"130","messageId":"131","endLine":1,"endColumn":46},{"ruleId":"128","severity":1,"message":"156","line":21,"column":30,"nodeType":"130","messageId":"131","endLine":21,"endColumn":43},{"ruleId":"174","severity":1,"message":"175","line":113,"column":87,"nodeType":"176","messageId":"177","endLine":113,"endColumn":89},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'baseUrl' is defined but never used.","'token' is defined but never used.","'patientObject' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'useEffect' is defined but never used.","'classNames' is defined but never used.","'Label' is defined but never used.","'Typography' is defined but never used.","'dispatch' is assigned a value but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"179","text":"180"},"'makeStyles' is defined but never used.","'moment' is defined but never used.","'patientList' is assigned a value but never used.","'loading' is assigned a value but never used.","'Popup' is defined but never used.","'activeContent' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'Dropdown' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'Modal' is defined but never used.","'toast' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'patientObject'. Either include them or remove the dependency array.",["181"],{"range":"182","text":"180"},"'useStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'PatientHistory'. Either include it or remove the dependency array.",["183"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"184","fix":"185"},[154,168],"token",{"desc":"186","fix":"187"},[196,210],{"desc":"188","fix":"189"},"Update the dependencies array to be: [dispatch, history.location]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, patientObject, patientObject.personUuid]",{"range":"192","text":"193"},"Update the dependencies array to be: [PatientHistory, patientObject.personUuid]",{"range":"194","text":"195"},[1945,1955],"[dispatch, history.location]",[1129,1155],"[dispatch, patientObject, patientObject.personUuid]",[4323,4349],"[PatientHistory, patientObject.personUuid]"]