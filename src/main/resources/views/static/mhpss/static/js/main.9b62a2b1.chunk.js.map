{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Patient/PrepPatients.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/context/patient/PatientReducer.js","main/webapp/jsx/context/patient/PatientContext.js","main/webapp/jsx/context/patient/PatientAction.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","_jsx","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Patients","patientList","setPatientList","useState","loading","setLoading","showPPI","setShowPPI","useEffect","async","axios","concat","baseUrl","headers","then","response","data","catch","error","patients","handleCheckBox","e","target","checked","children","MaterialTable","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","firstName","surname","hospital_number","hospitalNumber","gender","age","actions","Link","to","pathname","state","patientObj","_jsxs","ButtonGroup","variant","style","backgroundColor","height","width","size","Button","color","MdDashboard","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","MTableToolbar","divStyle","Home","key","setKey","Fragment","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","Dashboard","patientReducer","action","patientObject","payload","activeContent","PatientContext","createContext","PatientProvider","_ref","dispatch","useReducer","Provider","calculateAge","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","withStyles","theme","root","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","unit","link","primary","main","textDecoration","classes","useContext","isCopied","setIsCopied","ExpansionPanel","ExpansionPanelSummary","md","_Fragment","root2","ButtonMui","startIcon","TiArrowBack","textTransform","CopyToClipboard","onCopy","marginLeft","toast","position","POSITION","TOP_RIGHT","dateOfBirth","moment","format","phone","address","Divider","SubMenu","Menu","inverted","Item","onClick","route","RecentHistory","makeStyles","card","margin","display","flexDirection","form","submit","cardBottom","Select","button","input","success","PatientnHistory","recentActivities","setRecentActivities","saving","setSaving","open","setOpen","React","record","setRecord","toggle","PatientHistory","personUuid","LoadViewPage","path","setActiveContent","actionType","isLoading","date","Dropdown","item","viewable","Icon","LoadModal","Modal","show","centered","backdrop","Header","Title","Footer","delete","errorMessage","apierror","message","disabled","flexGrow","ClinicVisitPage","PrEPCommencementForm","demo","background","default","inline","PrEPEligibiltyScreeningForm","PrEPVisit","fontFamily","lineHeight","history","useHistory","activeTab","obj","CardContent","PatientCardDetail","library","add","faCheckSquare","faCoffee","faEdit","faTrash","useStyles","UserRegistration","basicInfo","setBasicInfo","active","contact","contactPoint","deceased","deceasedDateTime","genderId","identifier","otherName","maritalStatusId","educationId","employmentStatusId","dateOfRegistration","isDateOfBirthEstimated","phoneNumber","altPhonenumber","countryId","stateId","district","sexId","ninNumber","relatives","setRelatives","email","relationshipId","lastName","middleName","setToday","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","editRelative","setEditRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","errors","setErrors","topLevelUnitCountryOptions","settopLevelUnitCountryOptions","userDetail","user","useLocation","femaleStatus","setfemaleStatus","objValues","setObjValues","dateEnrolled","dateOfLastHivNegativeTest","dateReferredForPrep","extra","hivTestingPoint","prepRiskType","personDto","personId","prepSupporter","uniqueClientId","ancUnique","carePoints","setCarePoints","sourceReferral","setSourceReferral","hivStatus","setHivStatus","enrollSetting","setEnrollSetting","tbStatus","setTbStatus","kP","setKP","pregnancyStatus","setPregnancyStatus","transferIn","setTransferIn","hospitalNumStatus","setHospitalNumStatus","hospitalNumStatus2","setHospitalNumStatus2","locationState","patientId","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","post","uniqueId","getRelationship","relationship","find","handleInputChangeRelatives","handleInputChange","checkPhoneNumberBasic","inputName","slice","ToastContainer","autoClose","hideProgressBar","margingRight","Form","FormGroup","Label","for","Input","min","max","index","defaultChecked","currentDate","setDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","PhoneInput","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","required","getCountryId","console","log","setStateByCountryId","length","handleEditRelative","relative","splice","FontAwesomeIcon","handleDeleteRelative","checkPhoneNumber","MatButton","validateRelatives","temp","Object","values","every","x","handleCancelSaveRelationship","AddIcon","handleAddRelative","code","Spinner","SaveIcon","preventDefault","validate","newConatctsInfo","contactInfo","line","fullName","push","patientForm","landmark","CancelIcon","handleCancel","patientDTO","setPatientDTO","newSex","setNewSex","ovcEnrolled","setOvcEnrolled","hideTargetGroup","setHideTargetGroup","getSex","identifiers","altphone","maritalStatus","employmentStatus","education","city","getStateId","patientAge","calculate_age","sex","getSexId","dateOfRegistration1","maxWidth","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrerId","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","enrollment","getCharacters","floor","random","person","hivEnrollment","put","App","Router","Switch","Route","PatientDetail","RegisterPatientPage","EnrollPatientPage","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","version","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","label","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","colors","openMenuToggle","setDemoTheme","setAttr","themeSettings","ReactDOM","render","StrictMode","SimpleReactLightbox","BrowserRouter","basename","getElementById"],"mappings":"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","file":"static/js/main.9b62a2b1.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n//export const url =  'http://localhost:8383/api/v1/';\r\n//export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjc4NTQyODA4fQ.j4ib4QmjHWN8RMwMbtEkktZ_EMXGCdh6OQZ-Stdgb3A_DVqZuSKUKntcCiakmklziEMza3RWGfvI6vSVe-yQfw'","import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}mhpss/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden:showPPI\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}mhpss/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.surname,\r\n                                    hospital_number: row.hospitalNumber,\r\n                                    gender:row && row.gender ? row.gender : \"\",\r\n                                    age: row.age,\r\n\r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: props => (\r\n                <div >\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                        <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"                       \r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI===true? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                        />\r\n                        <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                        <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                        </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                </div>\r\n                ),\r\n            }}\r\n    />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"PrEP Patients \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden:showPPI\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.filter(x=> x.prepStatus!== \"Not Enrolled\").map((row) => ({\r\n                                    name:row.firstName + \" \" + row.surname,\r\n                                    hospital_number: row.hospitalNumber,\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.gender ? row.gender : \"\",\r\n                                    age: row.age,\r\n                                    \r\n                                    status: (<Label color=\"blue\" size=\"mini\">{row.prepStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: props => (\r\n                <div >\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                        <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"                       \r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI===true? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                        />\r\n                        <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                        <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                        </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                </div>\r\n                ),\r\n            }}\r\n    />\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport PrepPatients from './Patient/PrepPatients'\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item active\"><h4>MHPSS</h4></li>\r\n                </ol>\r\n\t\t    </div>\r\n            <br/><br/>\r\n\r\n            <Row>\r\n                <Col xl={12}>\r\n                  <Card style={divStyle}>\r\n                    <Card.Body>\r\n                      {/* <!-- Nav tabs --> */}\r\n                      <div className=\"custom-tab-1\">\r\n                        <Tabs\r\n                            id=\"controlled-tab-example\"\r\n                            activeKey={key}\r\n                            onSelect={(k) => setKey(k)}\r\n                            className=\"mb-3\"\r\n                        >\r\n\r\n                          <Tab eventKey=\"home\" title=\"Find Patients\">\r\n                            <Dashboard />\r\n                          </Tab>\r\n                        </Tabs>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","const patientReducer = (state, action) => {\r\n    switch(action.type){\r\n\r\n        case 'LOAD_PATIENT_OBJECT':\r\n            return {\r\n                ...state,\r\n                patientObject: action.payload,\r\n            }\r\n        case 'SET_ACTIVE_CONTENT':\r\n            return {\r\n                ...state,\r\n                activeContent: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default patientReducer;","import { createContext, useReducer } from \"react\";\r\nimport patientReducer from \"./PatientReducer\";\r\n\r\nconst PatientContext = createContext();\r\n\r\nexport const PatientProvider = ({children}) => {\r\n    const initialState = {\r\n        patientObject: {},\r\n        activeContent: {},\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(patientReducer, initialState);\r\n\r\n    return <PatientContext.Provider value = {{\r\n        ...state,\r\n        dispatch,\r\n    }}>\r\n        {children}\r\n    </PatientContext.Provider>\r\n}\r\n\r\nexport default PatientContext;","export const calculateAge = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\nimport {calculateAge} from \"./../../context/patient/PatientAction\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { toast} from \"react-toastify\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n    const { classes } = props;\r\n    const {patientObject, dispatch} = useContext(PatientContext);\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    const copiedNotification = () => {\r\n        toast(\"Copied!\", {position: toast.POSITION.TOP_RIGHT});\r\n        setIsCopied(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n           <ExpansionPanel >\r\n                    <ExpansionPanelSummary >\r\n                    <Row>\r\n                        <Col md={12}>\r\n                        {patientObject && patientObject!==null ? (<>\r\n                        <Row className={\"mt-1\"}>\r\n                        <Col md={12} className={classes.root2}>\r\n                        <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                            {patientObject.firstName + \" \" + patientObject.surname }\r\n                            </b>\r\n                            <Link to={\"/\"} >\r\n                            <ButtonMui\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\" float-end ms-2 mr-2 mt-2\"\r\n                                //startIcon={<FaUserPlus size=\"10\"/>}\r\n                                startIcon={<TiArrowBack  />}\r\n                                style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                            </ButtonMui>\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Patient ID : <b style={{color:'#0B72AA'}}>{patientObject.hospitalNumber}</b>\r\n                            <CopyToClipboard text={patientObject.hospitalNumber}\r\n                              onCopy={() => setIsCopied(true)}>\r\n                              <span style={{ marginLeft: '10px' }}><i className=\"fa-solid fa-clipboard fa-lg\"></i></span>\r\n                            </CopyToClipboard>\r\n                            {isCopied && copiedNotification()}\r\n                        </span>\r\n                        </Col>\r\n\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObject.dateOfBirth}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Age : <b style={{color:'#0B72AA'}}>{calculateAge(moment(patientObject.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                        <span>\r\n                            {\" \"}\r\n                            Gender :{\" \"}\r\n                            <b style={{color:'#0B72AA'}}>{patientObject.gender}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            check for nullable\r\n                            Phone Number : <b style={{color:'#0B72AA'}}>{patientObject.phone}</b>\r\n                        </span>\r\n                        </Col>\r\n                        <Col md={4} className={classes.root2}>\r\n                        <span>\r\n                            {\" \"}\r\n                            city line landmark..check for nullable\r\n                            Address : <b style={{color:'#0B72AA'}}>{patientObject.address} </b>\r\n                        </span>\r\n                        </Col>\r\n\r\n                        </Row>\r\n                        </>)\r\n                        :(\r\n                          <>\r\n                          <p>Loading please wait..</p>\r\n                          </>\r\n                        )\r\n                      }\r\n                        </Col>\r\n                    </Row>\r\n                    </ExpansionPanelSummary>\r\n                    <Divider />\r\n            </ExpansionPanel>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Menu, Popup } from \"semantic-ui-react\";\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\n\r\nfunction SubMenu() {\r\n\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n    useEffect(() => {\r\n        //Observation();\r\n    }, [patientObject]);\r\n\r\n    const loadPatientHistory = ()=>{\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:'patient-history'}});\r\n    }\r\n\r\n    const onClickHome = (row) =>{\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:'recent-history'}});\r\n    }\r\n\r\n    return (\r\n         <div>\r\n\r\n             <Menu size=\"large\" color={\"black\"} inverted >\r\n                 (<>\r\n                     <Menu.Item onClick={() => onClickHome()} >Home</Menu.Item>\r\n                     <Menu.Item onClick={() => loadPatientHistory()} >History</Menu.Item>\r\n                 </>)\r\n             </Menu>\r\n\r\n         </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport {Button } from 'semantic-ui-react'\r\n\r\nconst RecentHistory = (props) => {\r\n  //console.log(props.patientObj)\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [summary, setSummary] = useState(null)\r\n  const [saving, setSaving] = useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [record, setRecord] = useState(null)\r\n  const toggle = () => setOpen(!open);\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary()\r\n    RecentActivities();\r\n  }, [props.patientObj.personId]);\r\n\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  const Summary =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setSummary(response.data[0])\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n\r\n\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Prep Clinic'){\r\n        return \"PC\"\r\n      }else if(name==='Prep Enrollment'){\r\n        return \"PE\"\r\n      }else if(name==='Prep Eligibility'){\r\n        return \"PE\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n    const LoadViewPage =(row,action)=>{\r\n          \r\n      if(row.path==='prep-eligibility'){        \r\n          props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-enrollment'){\r\n          props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-clinic'){//prep-commencement \r\n          props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n      }else if(row.path==='prep-commencement'){\r\n          props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n      }else{\r\n\r\n      }\r\n      \r\n  }\r\n  const LoadModal =(row)=>{\r\n    toggle()\r\n    setRecord(row)\r\n  }\r\nconst LoadDeletePage =(row)=>{\r\n  if(row.path==='prep-eligibility'){ \r\n      setSaving(true)       \r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });  \r\n  }else if(row.path==='prep-clinic'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-enrollment'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-commencement'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else{\r\n\r\n  }\r\n  \r\n}\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\" >\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                      {data.activities && data.activities.map((activity,index) => ( \r\n                          \r\n                          <> \r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                               \r\n                               <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                               \r\n                                 <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadModal(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  \r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                            </>\r\n                       ))}                       \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n            <h4 className=\"card-title\">Summary </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n                {summary && summary!==null && (<>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                  \r\n                  <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                    <div className=\"card overflow-hidden\">\r\n                  <div className=\"social-graph-wrapper widget-facebook\">\r\n                    <span className=\"s-icon\">\r\n                      <span style={{fontSize:\"16px\"}}>Total Clinic Visit : {summary.visitCount}</span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 border-right\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\"><b>{summary.encounterDate}</b></span> \r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Last Visit </b></p>\r\n                      </div>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-6\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\"><b>{summary.nextAppointment}</b></span>\r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Next Visit</b></p>\r\n                      </div>\r\n                    </div>\r\n                   \r\n                  </div>\r\n                </div>\r\n                  </div>\r\n                  <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                  <div className=\"widget-stat card\">\r\n                    <div className=\"card-body p-4\" style={{backgroundColor:\"#fff\"}}>\r\n                      <h4 className=\"card-title\" style={{fontSize:\"15px\"}}><b>Current Regimen Given</b></h4>\r\n                      <h4 class=\"text-info \">{summary.regimen}</h4>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card overflow-hidden\">\r\n                  <div className=\"social-graph-wrapper widget-linkedin\">\r\n                    <span className=\"s-icon\">\r\n                    <span style={{fontSize:\"16px\", }}>BMI : {(summary.weight/((summary.height/100) * (summary.height/100))).toFixed(2)} kg/m<sup>2</sup></span>\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"row\">\r\n\r\n                    <div className=\"col-6 border-right\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\">{summary.weight} Kg</span> \r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Weight </b></p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"pt-3 pb-3 ps-0 pe-0 text-center\">\r\n                        <h4 className=\"m-1\">\r\n                          <span className=\"counter\">{summary.height} cm</span>\r\n                        </h4>\r\n                        <p className=\"m-0\"><b>Height </b></p>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>  \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n    const toggle = () => setOpen(!open);\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [patientObject.personUuid]);\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}mhpss/general-activities/patients/${patientObject.personUuid}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, List,Card } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\":{\r\n        color:'#fff',\r\n        fontWeight:'bold'\r\n    },\r\n    \"& .form-control\":{\r\n        borderRadius:'0.25rem',\r\n        height:'41px'\r\n    },\r\n    \"& .card-header:first-child\": {\r\n        borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n        display: \" block !important\"\r\n    },\r\n    \"& select\":{\r\n        \"-webkit-appearance\": \"listbox !important\"\r\n    },\r\n    \"& p\":{\r\n        color:'red'\r\n    },\r\n    \"& label\":{\r\n        fontSize:'14px',\r\n        color:'#014d88',\r\n        fontWeight:'bold'\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  //let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = \r\n            useState({\r\n              weight: \"\",\r\n              diastolic: \"\",\r\n              height: \"\",\r\n              systolic: \"\",\r\n              pulse:\"\",\r\n              temperature:\"\",\r\n              respiratoryRate:\"\" \r\n            })\r\n  //console.log(props.patientObj)\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    dateInitialAdherenceCounseling: \"\",\r\n    datePrepGiven: \"\",\r\n    datePrepStart: \"\",\r\n    dateReferre: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    extra: {},\r\n    height: \"\",\r\n    hepatitis: {},\r\n    nextAppointment: \"\",\r\n    notedSideEffects: \"\",\r\n    otherTestsDone: {},\r\n    personId: props.patientObj.personId,\r\n    pregnant: \"\",\r\n    prepEnrollmentUuid: \"\",\r\n    pulse: \"\",\r\n    referred: \"\",\r\n    regimenId: \"\",\r\n    respiratoryRate: \"\",\r\n    riskReductionServices: \"\",\r\n    stiScreening: \"\",\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: \"\",\r\n    temperature: \"\",\r\n    urinalysis: {},\r\n    urinalysisResult: \"\",\r\n    weight: \"\",\r\n    why: \"\",\r\n    otherDrugs:\"\",\r\n    duration:\"\",\r\n    prepGiven:\"\"\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [otherTest, setOtherTest] = useState({\r\n    otherTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n    name: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    PrepRegimen();\r\n    if(props.activeContent && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n      GetPatientVisit(props.activeContent.id)\r\n      setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n    }\r\n  }, [props.activeContent]);\r\n  console.log(props.activeContent)\r\n  const GetPatientVisit =(id)=>{\r\n    axios\r\n       .get(`${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n            //console.log(response.data.find((x)=> x.id===id));\r\n           setObjValues(response.data);\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });          \r\n}\r\n    const GetPatientDTOObj =()=>{\r\n      axios\r\n        .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPatientDto(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });          \r\n    }\r\n    const PrepEligibilityObj =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          //setPrepStatus(response.data);\r\n          objValues.prepEnrollmentUuid=\"\";\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PrepRegimen =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep-regimen`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_STATUS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setPrepStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_SIDE_EFFECTS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n\r\n    const HTS_RESULT =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const WHY_POOR_FAIR_ADHERENCE =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const SYNDROMIC_STI_SCREENING = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setSti(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n\r\n    }\r\n    ///Level of Adherence\r\n    async function AdherenceLevel() {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setAdherenceLevel(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n    const handleInputChange = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      \r\n    }\r\n    const handleInputChangeUrinalysisTest= e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeOtherTest = e => {\r\n      setOtherTest({ ...otherTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeHepatitisTest = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n    }\r\n    const handleInputChangeSyphilisTest = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n  //Handle CheckBox \r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" })\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" })\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]:\"Yes\" })\r\n    } else {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" })\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckweight =(e)=>{\r\n    if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckRespiratoryRate =(e)=>{\r\n      if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n      const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n      }\r\n  }\r\n  const handleInputValueCheckTemperature =(e)=>{\r\n\r\n      if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n      const message =\"Temperature must not be greater than 47 and less than 35\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n      }\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = objValues.encounterDate ? \"\" : \"This field is required\"\r\n\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n\r\n    //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\r\n    temp.height = objValues.height ? \"\" : \"This field is required\"\r\n    temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n    temp.urinalysisTest = urinalysisTest.urinalysisTest ? \"\" : \"This field is required\"\r\n    temp.testDate = urinalysisTest.testDate ? \"\" : \"This field is required\"\r\n    temp.result = urinalysisTest.result ? \"\" : \"This field is required\"\r\n    temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n    temp.duration = objValues.duration ? \"\" : \"This field is required\"\r\n    //temp.datePrepGiven = objValues.datePrepGiven ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    //objValues.visitDate = vital.encounterDate\r\n    objValues.syphilis = syphilisTest\r\n    objValues.hepatitis = hepatitisTest\r\n    objValues.urinalysis = urinalysisTest\r\n    objValues.otherTestsDone = otherTest\r\n    objValues.prepEnrollmentUuid= patientDto.uuid\r\n    if(props.activeContent && props.activeContent.actionType==='update'){//Perform operation for updation action\r\n      axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n      )\r\n        .then(response => {\r\n          //PatientDetaild();\r\n          setSaving(false);\r\n          toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n          props.setActiveContent({...props.activeContent, route:'consultation', activeTab:\"history\", actionType:\"vview\" })\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          if(error.response && error.response.data){\r\n            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            if(error.response.data.apierror){\r\n              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n            }else{\r\n              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n        }else{\r\n            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        }\r\n          \r\n        });\r\n\r\n    }else{\r\n      axios.post(`${baseUrl}prep/clinic-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        //PatientDetaild();\r\n        setSaving(false);\r\n         setObjValues({\r\n          adherenceLevel: \"\",\r\n          dateInitialAdherenceCounseling: \"\",\r\n          datePrepGiven: \"\",\r\n          datePrepStart: \"\",\r\n          dateReferre: \"\",\r\n          diastolic: \"\",\r\n          encounterDate: \"\",\r\n          extra: {},\r\n          height: \"\",\r\n          hepatitis: {},\r\n          nextAppointment: \"\",\r\n          notedSideEffects: \"\",\r\n          otherTestsDone: {},\r\n          personId: props.patientObj.personId,\r\n          pregnant: \"\",\r\n          prepEnrollmentUuid: \"\",\r\n          pulse: \"\",\r\n          referred: \"\",\r\n          regimenId: \"\",\r\n          respiratoryRate: \"\",\r\n          riskReductionServices: \"\",\r\n          stiScreening: \"\",\r\n          syndromicStiScreening: null,\r\n          syphilis: {},\r\n          systolic: \"\",\r\n          temperature: \"\",\r\n          urinalysis: {},\r\n          urinalysisResult: \"\",\r\n          weight: \"\",\r\n          why: \"\",\r\n          otherDrugs:\"\",\r\n          duration:\"\",\r\n          prepGiven:\"\"\r\n        });\r\n        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        props.setActiveContent({...props.activeContent, route:'consultation', activeTab:\"history\", actionType:\"vview\" })\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        \r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          if(error.response.data.apierror){\r\n            toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else{\r\n            toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }\r\n      }else{\r\n          toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n      }\r\n        \r\n      });\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>      \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={objValues.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChange}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={objValues.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChange}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={objValues.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChange}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={objValues.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                id=\"weight\"\r\n                                onChange={handleInputChange}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={objValues.weight}\r\n                                onKeyUp={handleInputValueCheckweight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.weight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.weight}</span>\r\n                        ) : \"\"}\r\n                        {errors.weight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.weight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                        {objValues.weight!==\"\" && objValues.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                          disabled={disabledField}\r\n                      />\r\n                     \r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          disabled={disabledField}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                      ) : \"\"}\r\n                       {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                 \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={objValues.hivTestResult}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {htsResult.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"notedSideEffects\"\r\n                    id=\"notedSideEffects\"\r\n                    value={objValues.notedSideEffects}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {prepSideEffect.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"true\">Yes </option>\r\n                    <option value=\"false\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening==='true' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syndromic STI Screening  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"syndromicStiScreening\"\r\n                    id=\"syndromicStiScreening\"\r\n                    value={objValues.syndromicStiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {sti.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !==\"\" ? (\r\n                      <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                  ) : \"\" } \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel==='PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Why Poor/Fair Adherence </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whyAdherenceLevelPoor\"\r\n                    id=\"whyAdherenceLevelPoor\"\r\n                    value={objValues.whyAdherenceLevelPoor}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {whyAdherenceLevelPoor.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}              \r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */} \r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n              <FormLabelName for=\"\">PrEP Regimen <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n              >\r\n              <option value=\"\"> Select</option>\r\n              {prepRegimen.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.regimen}\r\n                      </option>\r\n                    ))}\r\n              </Input>\r\n              {errors.regimenId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : \"\" } \r\n              </FormGroup>\r\n              \r\n              </div> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Duration <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    id=\"duration\"\r\n                    value={objValues.duration}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                   \r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.duration !==\"\" ? (\r\n                      <span className={classes.error}>{errors.duration}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>     \r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepGiven !==\"\" ? (\r\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>  */}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                 />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n               \r\n              <br /><br />\r\n              <Label as='a' color='teal'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"urinalysisTest\" value=\"Yes\" onChange={handleCheckBoxUrinalysisTest} checked={urinalysisTest.urinalysisTest=='Yes' ? true : false}/> Urinalysis Test</h4>\r\n              </Label>\r\n              <br /><br />\r\n              {urinalysisTest.urinalysisTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Date <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={urinalysisTest.testDate}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                   {errors.testDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.testDate}</span>\r\n                  ) : \"\" } \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Result <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={urinalysisTest.result}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                 >\r\n                  <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                  {errors.result !==\"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"hepatitisTest\" value=\"Yes\" onChange={handleCheckBoxHepatitisTest} checked={hepatitisTest.hepatitisTest==='Yes' ? true : false}/> Hepatitis  Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {hepatitisTest.hepatitisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={hepatitisTest.testDate}\r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={hepatitisTest.result}\r\n                    \r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='red'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"syphilisTest\" value=\"Yes\" onChange={handleCheckBoxSyphilisTest} checked={syphilisTest.syphilisTest==='Yes' ? true : false}/> Syphilis Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {syphilisTest.syphilisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={syphilisTest.testDate}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={syphilisTest.result}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"otherTest\" value=\"Yes\" onChange={handleCheckBoxOtherTest} checked={otherTest.otherTest==='Yes' ? true : false}/> Other Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {otherTest.otherTest==='Yes' && (<> \r\n                <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Name</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={otherTest.name}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={otherTest.testDate}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"reult\"\r\n                    id=\"result\"\r\n                    value={otherTest.prepGiven}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n            \r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br /><br />\r\n            <div className=\" mb-3 col-md-12\">\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  className=\"col-md-6\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                        <span className={classes.error}>{errors.nextAppointment}</span>\r\n                    ) : \"\" }\r\n              </div>\r\n           </div>\r\n            <br />\r\n            {props.activeContent && props.activeContent.actionType===\"update\"? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n        if(props.activeContent.actionType===\"view\"){\r\n            PatientHistory()\r\n        }\r\n      }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n               \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action, activeTab:'home'})     \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment2'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Clinic Visit History \"\r\n              columns={[\r\n                { title: \"Visit Date\", field: \"date\" },\r\n                {\r\n                  title: \"Regimen Given\",\r\n                  field: \"regimen\",\r\n                },               \r\n                { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   date: row.encounterDate,\r\n                   regimen: row.regimen,\r\n                   nextAppointment: row.nextAppointment,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                               <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\r\n                                <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                               <Dropdown.Item  onClick={()=>LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const [prepRegimen, setprepRegimen] = useState([]);\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        referred:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n        duration:\"\"\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n        PrepRegimen();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientCommercement(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n    }, []);\r\n    const PrepRegimen =()=>{\r\n        axios\r\n        .get(`${baseUrl}prep-regimen`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n      }\r\n    const GetPatientCommercement =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        weight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})  \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.referred = objValues.referred ? \"\" : \"This field is required\"\r\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n           if(props.activeContent && props.activeContent.actionType===\"update\"){//Perform operation for updation action\r\n            axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n             ).then(response => {\r\n                   setSaving(false);\r\n                   patientObj.commencementCount=1\r\n                   toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                  \r\n               })\r\n               .catch(error => {\r\n                   setSaving(false);\r\n                   if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror){\r\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n               });\r\n            }else{\r\n            axios.post(`${baseUrl}prep/commencement`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n             ).then(response => {\r\n                   setSaving(false);\r\n                   patientObj.commencementCount=1\r\n                   props.PatientObject();\r\n                   toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                  \r\n               })\r\n               .catch(error => {\r\n                   setSaving(false);\r\n                   if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror){\r\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n               });\r\n           }\r\n           \r\n            }          \r\n    }\r\n    \r\n\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.datePrepStart}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    disabled={disabledField}\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI :  {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.gender==='Female'  || props.patientObj.gender==='female' || props.patientObj.gender==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}  \r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            disabled={disabledField}\r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            disabled={disabledField}\r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Referred <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"referred\"\r\n                            id=\"referred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.referred}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"true\"> Yes</option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.referred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.referred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        {objValues.referred==='true' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            disabled={disabledField}\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        {prepRegimen.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.regimen}\r\n                                </option>\r\n                                ))}\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        {/* <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP Given</Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"datePrepGiven\"\r\n                                id=\"datePrepGiven\"\r\n                                value={objValues.datePrepGiven}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                disabled={disabledField}\r\n                            />\r\n                                \r\n                            </FormGroup>\r\n                        </div>  */}\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Duration</Label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"duration\"\r\n                                id=\"duration\"\r\n                                value={objValues.duration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    {props.activeContent && props.activeContent.actionType? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n        GetPatientDTOObj();\r\n    }, []);\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues)\r\n         if(validate()){\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.PatientObject();\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror){\r\n                      toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n        }\r\n          \r\n    }\r\n\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Interruption <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"interruptionDate\"\r\n                                id=\"interruptionDate\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.interruptionDate}\r\n                                required\r\n                            />\r\n                            {errors.interruptionDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionDate}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        />\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                    <>\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    {objValues.linkToArt==='true' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                    )}\r\n                    </>)}\r\n                    \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, } from \"@material-ui/core\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const patientID= props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\r\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    useEffect(() => { \r\n        \r\n        CounselingType();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/${id}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                console.log(response.data);\r\n               setObjValues(response.data);\r\n               setRiskAssessment(response.data.personalHivRiskAssessment)\r\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\r\n               setStiScreening(response.data.stiScreening)\r\n               setDrugHistory(response.data.drugUseHistory)\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n            hivTestResultAtvisit:\"\", //\r\n            lastTest:\"\"\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        // if(drugHistory.hivTestedBefore===\"true\"){\r\n        //     drugHistory.lastTest=\"\"\r\n        // } \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\r\n           temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\r\n           temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\r\n           \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            \r\n            if(validate()){\r\n                setSaving(true);\r\n            //objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n                if(props.activeContent && props.activeContent.actionType===\"update\"){//Perform operation for updation action\r\n                    axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        props.PatientObject();\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror){\r\n                              toast.error(error.response.data.apierror.message , {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        //props.setPatientObj(response.data)\r\n                        props.patientObj.hivresultAtVisit = drugHistory.hivTestResultAtvisit\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                              toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }\r\n           \r\n            }else{\r\n                setSaving(false);\r\n                toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n            }   \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartner\"\r\n                                    id=\"sexPartner\"\r\n                                    value={objValues.sexPartner}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartner !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartner}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {/* {props.patientDetail!==null && props.patientDetail.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )} */}\r\n                        {props.patientObj.gender==='Male' || props.patientObj.gender==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>Do you use any of these drugs/substances ?</h4>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {drugHistory.hivTestedBefore===\"true\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last test?    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastTest\"\r\n                                        id=\"lastTest\"\r\n                                        value={drugHistory.lastTest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"1 Month\">{\"<\"}1 Month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6Months\">4-6 Months</option>\r\n                                        <option value=\"6Months\">{\">\"}6 months</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result at visit <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResultAtvisit\"\r\n                                        id=\"hivTestResultAtvisit\"\r\n                                        value={drugHistory.hivTestResultAtvisit}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Positive\">Positive</option>\r\n                                        <option value=\"Negative\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestResultAtvisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.analpain}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            {props.activeContent && props.activeContent.actionType ===\"update\"? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>)}\r\n                           \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2'\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    ///const patientObj = props.patientObj;\r\n    const [entryPoint, setEntryPoint] = useState([]);\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\",\r\n        hivTestingPoint:\"\",\r\n        dateOfLastHivNegativeTest:\"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepRisk, setPrepRisk] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n        PREP_RISK_TYPE();\r\n        EntryPoint();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEnrollment(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n        //GetPatientPrepEnrollment\r\n      }, []);\r\n      const EntryPoint =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEntryPoint(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_RISK_TYPE =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            setPrepRisk(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            //console.log(response.data)\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientPrepEnrollment =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        //temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          console.log(objValues)\r\n          setSaving(true);\r\n          if(props.activeContent && props.activeContent.actionType){\r\n            axios.put(`${baseUrl}prep-enrollment/${props.activeContent.id}`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.prepCount=\"1\"\r\n                    props.PatientObject();\r\n                    toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n            }else{\r\n                \r\n            axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.prepCount=\"1\"\r\n                    toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n            }\r\n            }else{\r\n                toast.error(\"All fields are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n        \r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    disabled={disabledField}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                    <option value=\"\"> Select</option>\r\n                                    {prepRisk.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value=\"\"> Select</option>\r\n                                      {entryPoint.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    {/* <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    /> */}\r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        maxLength={5}\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'supporterPhone')}}\r\n                                        disabled={disabledField}\r\n                                         />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n                {props.activeContent && props.activeContent.actionType===\"update\"? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useContext, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport PatientContext from \"./../../context/patient/PatientContext\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const {patientObject, activeContent, dispatch} = useContext(PatientContext);\r\n    const { classes } = props;\r\n\r\n    useEffect(() => {\r\n        dispatch({type: 'LOAD_PATIENT_OBJECT', payload: history.location && history.location.state ? history.location.state.patientObj : {}});\r\n        dispatch({type: 'SET_ACTIVE_CONTENT', payload: {route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}}});\r\n    }, [dispatch]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >MHPSS /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail />\r\n            <SubMenu />\r\n            <br/>\r\n\r\n          {activeContent.route==='patient-history' &&( <PatientHistory />)}\r\n          {/* History Pages */}\r\n\r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\nimport { PatientProvider } from './main/webapp/jsx/context/patient/PatientContext';\r\n\r\nexport default function App() {\r\n  return (\r\n    <PatientProvider>\r\n        <Router>\r\n          <div>\r\n          <ToastContainer />\r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route path=\"/patient-history\">\r\n                <PatientDetail />\r\n              </Route>\r\n              <Route path=\"/register-patient\">\r\n                <RegisterPatientPage />\r\n              </Route>\r\n              <Route path=\"/enroll-patient\">\r\n                <EnrollPatientPage />\r\n              </Route>\r\n              <Route path=\"/update-patient\">\r\n                <UpdatePatientEnrollment />\r\n              </Route>\r\n\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n\r\n            </Switch>\r\n          </div>\r\n     </Router>\r\n </PatientProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}