{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/CaptureBiometric.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Patient/PatientChart/Bmi.js","main/webapp/jsx/components/Patient/PatientChart/Height.js","main/webapp/jsx/components/Patient/PatientChart/Index.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/TBScreening/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/ViewUpdate/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","calculate_age","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","getHospitalNumber","identifier","hospitalNumber","find","obj","type","value","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","personResponseDto","firstName","surname","hospital_number","clientCode","uniqueId","gender","sex","age","dateOfBirth","undefined","moment","format","count","Label","size","prepEnrollmentCount","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientObjs","setBiometricStatus","setDevices","setHivStatus","PatientCurrentStatus","CheckBiometric","console","log","ExpansionPanel","ExpansionPanelSummary","root2","startIcon","textTransform","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Divider","navItemText","SubMenu","Observation","observation","filter","Menu","inverted","Item","onClick","setActiveContent","activeContent","route","prepEligibilityCount","commenced","uv","pv","amt","Example","aspect","dataKey","stroke","fill","strokeWidth","PureComponent","RechartJs","RecentHistory","setViralLoad","setRefillList","setClinicVisitList","recentActivities","setRecentActivities","history","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","LaboratoryHistory","PharmacyList","ClinicVisitList","RecentActivities","personId","activities","LabObject","forEach","index","array","dataOrders","labOrder","tests","push","LoadViewPage","action","path","actionType","activeTab","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","Dropdown","viewBox","version","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","xmlns","strokeLinecap","strokeLinejoin","d","PatientnHistory","loading","PatientHistory","isLoading","position","item","Icon","LoadDeletePage","ClinicVisit","errors","setErrors","clinicVisitList","temp","saving","setSaving","adherenceLevel","setAdherenceLevel","sti","setSti","prepStatus","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","weight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","encounterDate","extra","hepatitis","nextAppointment","notedSideEffects","otherTestsDone","pregnant","prepEnrollmentUuid","referred","regimenId","riskReductionServices","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","objValues","setObjValues","urinalysisTest","testDate","setUrinalysisTest","syphilisTest","setSyphilisTest","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_STATUS","HTS_RESULT","PREP_SIDE_EFFECTS","WHY_POOR_FAIR_ADHERENCE","handleInputChange","e","target","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","Grid","Column","Segment","ribbon","length","visit","visitDate","List","celled","vitalSignDto","paddingBottom","paddingTop","borderTop","Math","round","Alert","FormGroup","Input","border","onChange","max","required","InputGroup","min","onKeyUp","InputGroupText","addonType","toFixed","hivTestResult","code","sideEffect","prepGiven","for","checked","disabled","preventDefault","Object","values","every","post","POSITION","BOTTOM_CENTER","subErrors","RelativeList","relative","removeRelativeLocation","adr","adrOnsetDate","IconButton","ADR","PrepSideEffect","handAdrleInputChange","setAdrObj","adrObj","adrList","splice","setAdrList","enableUpdate","artStartDate","Table","striped","InfectionList","removeInfection","illnessInfection","ondateInfection","handleInfectionInputChange","setInfection","infection","infectionList","setInfectionList","TBScreeningForm","tbStatus","setTbStatus","TBForms","setTBForms","TBStatus","tbObj","antiTBDrug","setTbObj","currentOnIpt","coughing","nightSweat","fever","contactWithTBCase","lethergy","tbStatusId","dropdownOpen","setDropdownOpen","toggleDropDown","visitId","setVisitId","enableUpdateButton","setEnableUpdateButton","setEnableUpdate","getPatientObj","setGetPatientObj","clinicalStage","setClinicalStage","functionalStatus","setFunctionalStatus","setcurrentVitalSigns","setShowCurrentVitalSigns","bodyWeight","adheres","adrScreened","adverseDrugReactions","artStatusId","cd4","cd4Percentage","clinicalNote","clinicalStageId","facilityId","functionalStatusId","hivEnrollmentId","lmpDate","oiScreened","opportunisticInfections","tbScreen","stiIds","stiTreated","uuid","whoStagingId","serviceTypeId","vital","setVitalSignDto","isCommencement","FunctionalStatus","WhoStaging","VitalSigns","GetPatientObj","ClinicVisitListHistory","GetVisitById","lastVitalSigns","patObJ","handleInputChangeVitalSignDto","visitID","content","label","basic","pointing","isOpen","toggle","labTestGroupId","artCommence","enrollment","put","hidden","ClinicVisitHistory","ConsultationPage","ClinicVisitPage","ClinicHistory","flexGrow","PrEPCommencementForm","prepClientId","prepId","prepEligibilityUuid","drugAllergies","reffered","datereferred","setpregnant","patientDto","setPatientDto","PREGANACY_STATUS","GetPatientDTOObj","GetPatientCommercement","dateEnrolled","dateOfRegistration","breastFeeding","Spinner","validate","demo","background","default","inline","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","linkToArt","dateLinkToArt","BasicInfo","patientID","clientId","counselingType","setCounselingType","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","CounselingType","GetPatientPrepEligibility","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","setRiskAssessment","handleInputChangeRiskAssessment","riskCount","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","setRiskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","setStiScreening","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","hivNegative","hivPositive","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","drugHistory","setDrugHistory","handleInputChangeDrugHistory","sexPartners","maritalStatus","moreThanOneSexPartnerLastThreeMonths","Message","warning","labelPosition","htsClientId","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PrEPRegistrationForm","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","prepRisk","setPrepRisk","relatives","setRelatives","RELATIONSHIP","PREP_RISK_TYPE","GetPatientPrepEnrollment","ancUniqueArtNo","dateHivPositive","dateOfLastHivNegativeTest","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","inputName","slice","checkPhoneNumberBasic","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","horizontal","Header","paddingLeft","Content","capturedObj","biometricStatus","art","setArt","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateReferredForPrep","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","setCarePoints","setSourceReferral","setEnrollSetting","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","patientForm","landmark","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","setStateByCountryId","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","show","centered","backdrop","Title","Footer","setOvcEnrolled","getSex","identifiers","altphone","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","TOP_RIGHT","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","kP","pregnancyStatus","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","getCharacters","person","hivEnrollment","handleCheckBox","floor","random","htmlFor","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.1d7bd1e7.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjcxMTg4NzkyfQ.TTxb6PJ2Ig-7gbafdwiibiOWluO_Ef7Y4H4FFJewXJdlUi5bt77NIrRbdj4X2zovsuXodm_hwW8ijHpEIvg46w';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Count\", field: \"count\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.personResponseDto.firstName + \" \" + row.personResponseDto.surname,\r\n                                    hospital_number: getHospitalNumber(row.personResponseDto.identifier),\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.personResponseDto.sex ? row.personResponseDto.sex : \"\",\r\n                                    age: (row.personResponseDto.dateOfBirth === 0 ||\r\n                                        row.personResponseDto.dateOfBirth === undefined ||\r\n                                        row.personResponseDto.dateOfBirth === null ||\r\n                                        row.personResponseDto.dateOfBirth === \"\" )\r\n                                            ? 0\r\n                                            : calculate_age(moment(row.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\")),\r\n                                    \r\n                                    count: (<Label color=\"blue\" size=\"mini\">{row.prepEnrollmentCount}</Label>),\r\n                                \r\n                                actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n        Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n        } from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nconst CaptureBiometric = (props) => {\r\n    const classes = useStyles()\r\n    const biometricDevices = props.biometricDevices\r\n    const patientID= props && props.patientId ? props.patientId : \"\"\r\n    \r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:patientID, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState(props.biometricDevices);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n   // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([])\r\n     console.log(biometricDevices)\r\n    const buttonSx = {\r\n      ...(success && {\r\n        bgcolor: green[500],\r\n        '&:hover': {\r\n          bgcolor: green[700],\r\n        },\r\n      }),\r\n    };\r\n\r\n\r\n    useEffect(() => {      \r\n        TemplateType();\r\n        if(objValues.device===\"\"){\r\n            setshowCapture(false)\r\n        }\r\n        \r\n      }, []);\r\n     //Get list of Finger index\r\n     const TemplateType =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setFingerType(response.data);\r\n           })\r\n           .catch((error) => {\r\n           });\r\n       \r\n     }\r\n\r\n     //check if device is plugged or not \r\n     const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        console.log(checkUrl)\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n           .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            if(response.data.errorType ===\"ERROR\"){\r\n                toast.error(response.data.errorName + \" is not plug\");\r\n                //setshowCapture(true)\r\n            }else{\r\n                setshowCapture(true)\r\n            }\r\n           })\r\n           .catch((error) => {\r\n           });\r\n     }\r\n     // handle the input changes \r\n\r\n     const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to capture  selected index finger \r\n    const captureFinger = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                  setLoading(true);\r\n                  if(response.data.type ===\"ERROR\"){                   \r\n                    setLoading(false);\r\n                    setTryAgain(true);\r\n                    window.setTimeout(() => {\r\n                        setTryAgain(false);\r\n                      }, 5000);\r\n                    toast.error(response.data.message.ERROR);\r\n                  }else{\r\n                    const templateType= response.data.templateType\r\n                    setTryAgain(false);\r\n                    setSuccess(true)\r\n                    window.setTimeout(() => {\r\n                        setSuccess(false)\r\n                        setLoading(false);                        \r\n                      }, 5000);\r\n                                        \r\n                    setCapturedFingered([...capturedFingered, response.data])\r\n                    fingerType.splice(templateType, 1);\r\n                    setFingerType([...fingerType]);\r\n                  }\r\n                  //toast.success(\"Record save successful\");\r\n              })\r\n              .catch(error => {                 \r\n              });\r\n        }\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {        \r\n        e.preventDefault();\r\n        if(capturedFingered.length > 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1]\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},           \r\n            )\r\n              .then(response => {\r\n                toast.success(\"Biometric save successful\");\r\n                setCapturedFingered([])\r\n                props.setPatientBiometricStatus(true)\r\n                props.togglestatus()\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Something went wrong\");\r\n            });\r\n        }else{\r\n            \r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n  }  \r\n    \r\n // console.log(capturedFingered)\r\n\r\n    return (\r\n        <div >\r\n            <Card >\r\n                <CardBody>\r\n                    <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n                        <Form >\r\n                            <ModalHeader toggle={props.togglestatus}>capture Biometric</ModalHeader>\r\n                            <ModalBody>\r\n                                <Card>\r\n                                {/* <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader> */}\r\n                                    <CardBody>\r\n                                    <Row form>\r\n                                    <ToastContainer />\r\n                                        <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Device </Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"device\"\r\n                                                    id=\"device\"\r\n                                                    onChange={checkDevice}\r\n                                                    value={objValues.device}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Device </option>\r\n                                                {biometricDevices.map(({ id, name }) => (\r\n                                                    <option key={id} value={name}>\r\n                                                        {name}\r\n                                                    </option>\r\n                                                ))}\r\n                                              \r\n                                            </Input>\r\n                                            {errors.device !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.device}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                            <FormGroup>\r\n                                                <Label for='device'>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                <option value=\"\">Select Finger </option>\r\n\r\n                                                {fingerType.map((value) => (\r\n                                                    <option key={value.id} value={value.display}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.templateType !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.templateType}</span>\r\n                                            ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                        \r\n\r\n                                        <Col md={4}>\r\n                                        \r\n                                        <MatButton\r\n                                            type='button'\r\n                                            variant='contained'\r\n                                            color='primary'\r\n                                            onClick={captureFinger}\r\n                                            className={'mt-4'}\r\n                                            startIcon={<FingerprintIcon />}\r\n                                        >\r\n                                            Capture Finger\r\n                                        </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n                                        \r\n                                        </>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                        }\r\n                                        {/* <img width='500' height='200' src={responseImage}/> */}\r\n                                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                                       \r\n                                     {loading && (\r\n                                        <>\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                </Fab>\r\n                                                {loading && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: green[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {tryAgain && (\r\n                                        <>\r\n                                        \r\n\r\n                                         <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                            <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                <Fab\r\n                                                aria-label=\"save\"\r\n                                                color=\"secondary\"\r\n                                                sx={buttonSx}\r\n                                                \r\n                                                >\r\n                                                 <FingerprintIcon />\r\n                                                </Fab>\r\n                                                {tryAgain && (\r\n                                                <CircularProgress\r\n                                                    size={68}\r\n                                                    sx={{\r\n                                                    color: red[500],\r\n                                                    position: 'absolute',\r\n                                                    top: -6,\r\n                                                    left: -6,\r\n                                                    zIndex: 1,\r\n                                                    }}\r\n                                                />\r\n                                                )}\r\n                                            </Box>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                            Click to Recapture Again\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        </>\r\n                                        )\r\n                                        } \r\n                                        {/*  */}\r\n                                        </Col>\r\n                                       \r\n                                            \r\n                                        </Row>\r\n\r\n                                    <Row>\r\n                                 {capturedFingered.length >=1 ? (  \r\n                                     <>                               \r\n                                    <Col md={12} >\r\n                                        <h3>Captured Fingerprints</h3>\r\n                                    </Col>\r\n                                    <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {capturedFingered.map((x) => (\r\n                                                <List.Item>\r\n                                                    {/* <List.Header><Icon name='cancel'  color='red' /> </List.Header> */}\r\n                                                    <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                    {/* <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col> */}\r\n                                    <br/><br/><br/><br/><br/><br/>\r\n                                        <Col md={12} >\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={saveBiometrics}\r\n                                                // className={classes.button}\r\n                                                startIcon={<SaveIcon/>}\r\n                                            >\r\n                                                Save Capture\r\n                                            </MatButton>\r\n                                        </Col>\r\n                                    </> \r\n                                    )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                    </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </ModalBody>\r\n                        </Form>\r\n\r\n                    </Modal>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CaptureBiometric;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  const patientObjs = props.patientObj ? props.patientObj.personResponseDto : {}\r\n  const [patientObj, setpatientObj] = useState(patientObjs)\r\n  const [biometricStatus, setBiometricStatus] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const [biometricModal, setBiometricModal] = useState(false);\r\n  const BiometricModalToggle = () => setBiometricModal(!biometricModal);\r\n  const [hivStatus, setHivStatus] = useState();\r\n\r\n  useEffect(() => {\r\n    PatientCurrentStatus();\r\n    CheckBiometric();\r\n  }, [props.patientObj]);\r\n\r\n  //Get list of KP\r\n  const CheckBiometric =()=>{\r\n      axios\r\n        .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setBiometricStatus(response.data);\r\n            if(response.data===true){\r\n              axios\r\n                  .get(`${baseUrl}biometrics/devices`,\r\n                      { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                  )\r\n                  .then((response) => {\r\n                      setDevices(response.data);\r\n                      \r\n                  })\r\n                  .catch((error) => {\r\n                      console.log(error)\r\n                  });\r\n            \r\n              }\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n  }\r\n    ///GET LIST OF Patients\r\n    async function PatientCurrentStatus() {\r\n        axios\r\n            .get(`${baseUrl}hiv/status/patient-current/${patientObj.id}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n\r\n              setHivStatus(response.data);\r\n            })\r\n            .catch((error) => {    \r\n            });        \r\n    }\r\n    const get_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now ;\r\n    }\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const loadChildEvaluation =(row)=> {\r\n      props.setActiveContent('child-evaluation')\r\n    }\r\n    const capturePatientBiometric =(row)=> {\r\n      //props.setActiveContent('biometrics')\r\n      props.setActiveContent({...props.activeContent, route:'biometrics', obj:row})\r\n    }\r\n    \r\n    const CurrentStatus = ()=>{\r\n\r\n          return (  <Label color=\"blue\" size=\"mini\">{hivStatus}</Label>);\r\n  }\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type == 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.firstName + \" \" + patientObj.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.sex && patientObj.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    </Row>\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Dropdown, Menu } from \"semantic-ui-react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navItemText: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction SubMenu(props) {\r\n    const classes = useStyles();\r\n    let gender=\"\"\r\n    const patientObjs = props.patientObj ? props.patientObj : {}\r\n    //const patientCurrentStatus=props.patientObj && props.patientObj.currentStatus===\"Died (Confirmed)\" ? true : false ;\r\n    const [patientObj, setpatientObj] = useState(patientObjs)\r\n    const [genderType, setGenderType] = useState()\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n        Observation();\r\n    }, [props.patientObj]);\r\n     //Get list of RegimenLine\r\n     const Observation =()=>{\r\n        axios\r\n            .get(`${baseUrl}observation/person/${props.patientObj.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                const observation = response.data\r\n                const mental= observation.filter((x)=> x.type==='mental health')\r\n                const evaluation= observation.filter((x)=> x.type==='initial evaluation')\r\n                \r\n\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });\r\n        \r\n        }\r\n\r\n    const loadEAC =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'counseling'})\r\n    }\r\n    const loadStatusUpdate =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'status-update'})\r\n    }\r\n    const loadPharmacyModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy'})\r\n    }\r\n    const loadLaboratoryModal =(row)=> {\r\n        props.setActiveContent({...props.activeContent, route:'laboratory'})\r\n    }\r\n    const loadCervicalCancer = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'cervical-cancer'})\r\n    }\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n    const loadPrEPVisitForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-visit'})\r\n    }\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                {patientObj.prepEligibilityCount<=0 || patientObj.prepEnrollmentCount<=0 || patientObj.commenced!==true ? \r\n                (<>\r\n                    {patientObj.prepEligibilityCount <=0 && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibilty Screening Form</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount<=0 && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount>0 && patientObj.commenced!==true && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                </>)\r\n                :\r\n                (<>  \r\n                    <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                    <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                    \r\n            </Menu>             \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 1000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 1000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport PageTitle from \"../../../layouts/PageTitle\";\r\n\r\nimport Bmi from \"./Bmi\";\r\nimport Height from \"./Height\";\r\n//import ViccinationStatus from \"./ViccinationStatus\";\r\n//import LegendEffectOpacity from \"./LegendEffectOpacity\";\r\n\r\nfunction RechartJs() {\r\n  return (\r\n    <>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={6}>\r\n          <Card>            \r\n            <Card.Body>\r\n                <p>Weight                    \r\n                    <span className=\"float-end text-success\">Normal</span>\r\n                </p>\r\n                <p><h5>45Kg</h5></p>                \r\n              <Bmi />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={6} lg={6}>\r\n          <Card>           \r\n            <Card.Body>\r\n            <p>Height                    \r\n                    <span className=\"float-end text-success\">Normal</span>\r\n                </p>\r\n                <p><h5>140cm</h5></p>\r\n              <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={12} lg={12}>\r\n          <Card>            \r\n            <Card.Body>\r\n            <p>BMI                   \r\n                    <span className=\"float-end text-danger\">Below Normal</span>\r\n                </p>\r\n                <p><h5>5.6 kg/m<sup>2</sup></h5></p>\r\n                <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>        \r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RechartJs;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\nimport PatientChart from './../Patient/PatientChart/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  const classes = useStyles();\r\n  const [vitaLoad, setViralLoad]=useState([])\r\n  const [refillList, setRefillList] = useState([])\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    LaboratoryHistory();\r\n    PharmacyList();\r\n    ClinicVisitList();\r\n    RecentActivities();\r\n  }, [props.patientObj.id]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data[0].activities)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  //Get list of LaboratoryHistory\r\n  const LaboratoryHistory =()=>{\r\n    axios\r\n       .get(`${baseUrl}laboratory/orders/patients/${props.patientObj.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n           let LabObject= []\r\n                response.data.forEach(function(value, index, array) {\r\n                    const dataOrders = value.labOrder.tests                    \r\n                    if(dataOrders[index]) {\r\n                        dataOrders.forEach(function(value, index, array) {\r\n                            LabObject.push(value)\r\n                        })                       \r\n                    }                   \r\n                });\r\n              setViralLoad(LabObject)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function PharmacyList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/pharmacy/patient?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setRefillList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n   //GET LIST Drug Refill\r\n   async function ClinicVisitList() {\r\n    setLoading(true)\r\n    axios\r\n        .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n        { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setLoading(false)\r\n            setClinicVisitList(response.data);                \r\n        })\r\n        .catch((error) => {  \r\n            setLoading(false)  \r\n        });        \r\n  }\r\n  const labStatus =(status)=> {\r\n      if(status===0){\r\n        return \"timeline-badge info\"\r\n      }else if(status===1){\r\n        return \"timeline-badge warning\"\r\n      }else if(status===2){\r\n        return \"timeline-badge success\"\r\n      }else if(status===3){\r\n        return \"timeline-badge danger\"\r\n      }else if(status===4){\r\n        return \"timeline-badge primary\"\r\n      }else if(status===5){\r\n        return \"timeline-badge info\"\r\n      }else {\r\n        return \"timeline-badge secondary\"\r\n      }\r\n  }\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='Mental-health'){        \r\n        props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Art-commence'){\r\n        props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='Clinical-evaluation'){\r\n        props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='eac1'){\r\n        props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac2'){\r\n        props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id, actionType:action})\r\n    }\r\n    else if(row.path==='eac3'){\r\n        props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id, actionType:action})\r\n    }else if(row.path==='hiv-enrollment'){\r\n        history.push({\r\n            pathname: '/update-patient',\r\n            state: { id: row.id, patientObj:props.patientObj, actionType:action }\r\n        });\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n    }else if(row.path==='pharmacy'){\r\n        //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        props.setActiveContent({...props.activeContent, route:'pharmacy-update', id:row.id, activeTab:\"history\", actionType:action, obj:row})\r\n\r\n    }else if(row.path==='Laboratory'){\r\n        props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='clinic-visit'){\r\n      props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, activeTab:\"history\",actionType:action, })\r\n\r\n  }else{\r\n\r\n    }\r\n    \r\n  }\r\n  const LoadDeletePage =(row)=>{\r\n      \r\n      if(row.path==='Mental-health'){        \r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }else if(row.path==='Art-commence'){\r\n          //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });\r\n\r\n      }else if(row.path==='Clinical-evaluation'){\r\n          //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });\r\n\r\n      }else if(row.path==='eac1'){\r\n          //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }\r\n      else if(row.path==='eac2'){\r\n          //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }\r\n      else if(row.path==='eac3'){\r\n          //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/eac/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }else if(row.path==='hiv-enrollment'){\r\n          axios\r\n          .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n      }else if(row.path==='pharmacy'){\r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n          //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n          axios\r\n          .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          }); \r\n\r\n      }else if(row.path==='clinic-visit'){\r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          }); \r\n      }else{\r\n\r\n      }\r\n      \r\n  }\r\n  const redirectLink=()=>{\r\n    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  }\r\n  const index= 1\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\" >\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{data.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {data.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {data.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(data)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                                                   \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n            <h4 className=\"card-title\">Summary </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n              <div className=\"widget-stat card\">\r\n                <div className=\"card-body p-4\" style={{backgroundColor:\"#E8F0FD\"}}>\r\n                  <h4 className=\"card-title\">Current Regimen Given</h4>\r\n                  <h3 class=\"text-info \">TDF(300mg)+3TC(150mg)</h3>\r\n                  <div className=\"progress mb-2\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-primary\"\r\n                      style={{ width: \"100%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <p class=\"text-success \">Next Appointment Date : 03/03/2023</p>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                <div className=\"widget-stat card\">\r\n                  <div className=\"card-body p-4\" >\r\n                  <div className=\"media ai-icon\">\r\n                    <span className=\"me-3 bgl-primary text-primary\">\r\n                      <svg\r\n                        id=\"icon-customers\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        className=\"feather feather-user\"\r\n                      >\r\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"media-body\">\r\n                      <p className=\"mb-1\" ><span style={{fontSize:\"14px\"}} >Total Visit :</span> <span className=\"badge badge-primary\">4</span></p>\r\n                      <p><span style={{fontSize:\"10px\", fontWeight:\"bolder\"}} >Last Visit Date : </span><span className=\"badge badge-dark\">04/011/2022</span></p>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"card-body\">\r\n                <PatientChart />\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    let history = useHistory();\r\n    let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='Clinical-evaluation'){\r\n            //props.setActiveContent({...props.activeContent, route:'adult-clinic-eveluation-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='eac1'){\r\n            //props.setActiveContent({...props.activeContent, route:'first-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac2'){\r\n            //props.setActiveContent({...props.activeContent, route:'second-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }\r\n        else if(row.path==='eac3'){\r\n            //props.setActiveContent({...props.activeContent, route:'completed-eac-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/eac/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='hiv-enrollment'){\r\n            axios\r\n            .delete(`${baseUrl}hiv/enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n        }else if(row.path==='pharmacy'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            //props.setActiveContent({...props.activeContent, route:'pharmacy', id:row.id, activeTab:\"home\", actionType:\"update\", obj:row})\r\n            axios\r\n            .delete(`${baseUrl}art/pharmacy/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n\r\n        }else if(row.path==='clinic-visit'){\r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-history', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/clinic-visit/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            }); \r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, List, Feed,Card } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  //let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  //const [riskReductionService, setRiskReductionService] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = \r\n            useState({\r\n              weight: \"\",\r\n              diastolic: \"\",\r\n              height: \"\",\r\n              systolic: \"\",\r\n              pulse:\"\",\r\n              temperature:\"\",\r\n              respiratoryRate:\"\" \r\n            })\r\n  //console.log(props.patientObj)\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    dateInitialAdherenceCounseling: \"\",\r\n    datePrepGiven: \"\",\r\n    datePrepStart: \"\",\r\n    dateReferre: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    extra: {},\r\n    height: \"\",\r\n    hepatitis: {},\r\n    nextAppointment: \"\",\r\n    notedSideEffects: \"\",\r\n    otherTestsDone: {},\r\n    personId: props.patientObj.personId,\r\n    pregnant: \"\",\r\n    prepEnrollmentUuid: \"\",\r\n    pulse: \"\",\r\n    referred: \"\",\r\n    regimenId: \"\",\r\n    respiratoryRate: \"\",\r\n    riskReductionServices: \"\",\r\n    stiScreening: \"\",\r\n    syndromicStiScreening: \"\",\r\n    syphilis: {},\r\n    systolic: \"\",\r\n    temperature: \"\",\r\n    urinalysis: {},\r\n    urinalysisResult: \"\",\r\n    weight: \"\",\r\n    why: \"\",\r\n    otherDrugs:\"\",\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [otherTest, setOtherTest] = useState({\r\n    otherTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    //PrEP_RISK_REDUCTION_PLAN();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    //hiv/patient/3\r\n  }, []);\r\n    const PREP_STATUS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setPrepStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_SIDE_EFFECTS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n\r\n    const HTS_RESULT =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const WHY_POOR_FAIR_ADHERENCE =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const SYNDROMIC_STI_SCREENING = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setSti(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n\r\n    }\r\n    ///Level of Adherence\r\n    async function AdherenceLevel() {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setAdherenceLevel(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n    const handleInputChange = e => {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      \r\n    }\r\n    const handleInputChangeUrinalysisTest= e => {\r\n      setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeOtherTest = e => {\r\n      setOtherTest({ ...otherTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeHepatitisTest = e => {\r\n      setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n    }\r\n    const handleInputChangeSyphilisTest = e => {\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n  //Handle CheckBox \r\n  const handleCheckBoxSyphilisTest = e => {\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" })\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" })\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxOtherTest = e => {\r\n    if (e.target.checked) {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]: \"Yes\" })\r\n    } else {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" })\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckweight =(e)=>{\r\n    if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckRespiratoryRate =(e)=>{\r\n      if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n      const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n      }\r\n  }\r\n  const handleInputValueCheckTemperature =(e)=>{\r\n      if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n      const message =\"Temperature must not be greater than 47 and less than 35\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n      }\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = objValues.encounterDate ? \"\" : \"This field is required\"\r\n\r\n    //temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n\r\n    temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\r\n    temp.height = objValues.height ? \"\" : \"This field is required\"\r\n    temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    //objValues.visitDate = vital.encounterDate\r\n    objValues.syphilis = syphilisTest\r\n    objValues.hepatitis = hepatitisTest\r\n    objValues.urinalysis = urinalysisTest\r\n    objValues.otherTestsDone = otherTest\r\n    axios.post(`${baseUrl}prep/clinic-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        //PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n              toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else{\r\n              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }\r\n\r\n      }\r\n      else{\r\n          toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n      }\r\n        \r\n      });\r\n    }\r\n  }\r\n//console.log(objValues)\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>      \r\n      </div>\r\n      <Grid columns='equal'>\r\n       <Grid.Column width={5}>\r\n          \r\n            <Segment>\r\n              <Label as='a' color='blue' style={{width:'110%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>Vital Signs</h4>\r\n              </Label>\r\n              <br />\r\n\r\n               <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <br/>\r\n                    <ul className=\"timeline\">\r\n                    { clinicVisitList.length > 0 ?(\r\n                      \r\n                    <Accordion\r\n                        className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                        defaultActiveKey=\"0\"\r\n                        \r\n                      >\r\n                        <>\r\n                        {clinicVisitList.map((visit, i)=>\r\n                            <div className=\"accordion-item\" key={i} >\r\n                              <Accordion.Toggle\r\n                                  as={Card.Text}\r\n                                  eventKey={`${i}`}\r\n                                  className={`accordion-header ${\r\n                                    activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                                  } accordion-header-info`}\r\n                                  onClick={() =>\r\n                                    setActiveAccordionHeaderShadow(\r\n                                      activeAccordionHeaderShadow === 1 ? -1 : i\r\n                                    )\r\n                                  }\r\n                                  style={{width:'100%'}}\r\n                              >\r\n                              <span className=\"accordion-header-icon\"></span>\r\n                              <span className=\"accordion-header-text float-start\">Visit Date : <span className=\"\">{visit.visitDate}</span> </span>\r\n                              <span className=\"accordion-header-indicator\"></span>\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse\r\n                              eventKey={`${i}`}\r\n                              className=\"accordion__body\"\r\n                            >\r\n                              <div className=\"accordion-body-text\">\r\n                            \r\n                                  <List celled style={{width:'100%'}}>\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.pulse!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px',borderTop:'1px solid #fff', marginTop:'-5px' }}>Pulse <span style={{color:'rgb(153, 46, 98)'}} className=\"float-end\"><b>{visit.vitalSignDto.pulse} bpm</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.respiratoryRate!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Respiratory Rate <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.respiratoryRate} bpm</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.temperature!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Temperature <span className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.temperature} <sup>0</sup>C</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.systolic!==null && visit.vitalSignDto.diastolic!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Blood Pressure <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.systolic}/{visit.vitalSignDto.diastolic}</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Height <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.height} cm</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.weight!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>Weight <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{visit.vitalSignDto.weight} kg</b></span></List.Item>)}\r\n                                      {visit.vitalSignDto && visit.vitalSignDto.weight!==null && visit.vitalSignDto.height!==null && (<List.Item style={{paddingBottom:'10px', paddingTop:'10px'}}>BMI <span  className=\"float-end\"><b style={{color:'rgb(153, 46, 98)'}}>{Math.round(visit.vitalSignDto.weight/(visit.vitalSignDto.height/100))} kg</b></span></List.Item>)}\r\n                                  </List>\r\n                                \r\n                              </div>\r\n                            </Accordion.Collapse>\r\n                          </div>\r\n                        )}\r\n                        </>\r\n                    </Accordion>             \r\n\r\n                ):\r\n                (\r\n                  <>\r\n                  <br/>\r\n                  <Alert\r\n                      variant=\"info\"\r\n                      className=\"alert-dismissible solid fade show\"\r\n                    >\r\n                      <p>No Vital Signs</p>\r\n                    </Alert>\r\n                  </>\r\n                )}\r\n                    </ul>\r\n               \r\n                </PerfectScrollbar>\r\n            </Segment>\r\n           \r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={objValues.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientObj && props.patientObj.artCommence ? props.patientObj.artCommence.visitDate : null}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChange}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={objValues.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChange}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={objValues.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChange}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={objValues.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                id=\"weight\"\r\n                                onChange={handleInputChange}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={objValues.weight}\r\n                                onKeyUp={handleInputValueCheckweight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.weight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.weight}</span>\r\n                        ) : \"\"}\r\n                        {errors.weight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.weight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                        {objValues.weight!==\"\" && objValues.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={objValues.hivTestResult}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {htsResult.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"sideEffect\"\r\n                    id=\"sideEffect\"\r\n                    value={objValues.sideEffect}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {prepSideEffect.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"true\">Yes </option>\r\n                    <option value=\"false\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening==='true' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syndromic STI Screening  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"syndromicStiScreening\"\r\n                    id=\"syndromicStiScreening\"\r\n                    value={objValues.syndromicStiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {sti.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel==='PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Why Poor/Fair Adherence </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whyAdherenceLevelPoor\"\r\n                    id=\"whyAdherenceLevelPoor\"\r\n                    value={objValues.whyAdherenceLevelPoor}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {whyAdherenceLevelPoor.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepGiven==='Yes' && (<> \r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n              <Label for=\"\">PrEP Regimen</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  \r\n              >\r\n              <option value=\"\"> Select</option>\r\n              <option value=\"30\"> TDF(300mg)+3TC(150mg)</option>\r\n\r\n  \r\n              </Input>\r\n              {errors.regimenId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : \"\" } \r\n              </FormGroup>\r\n              \r\n              </div>     \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div> \r\n              </>)}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                 />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               \r\n              <br /><br />\r\n              <Label as='a' color='teal'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"urinalysisTest\" value=\"Yes\" onChange={handleCheckBoxUrinalysisTest} checked={urinalysisTest.urinalysisTest=='Yes' ? true : false}/> Urinalysis Test</h4>\r\n              </Label>\r\n              <br /><br />\r\n              {urinalysisTest.urinalysisTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={urinalysisTest.testDate}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Result</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={urinalysisTest.result}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                 />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"hepatitisTest\" value=\"Yes\" onChange={handleCheckBoxHepatitisTest} checked={hepatitisTest.hepatitisTest==='Yes' ? true : false}/> Hepatitis  Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {hepatitisTest.hepatitisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={hepatitisTest.testDate}\r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={hepatitisTest.result}\r\n                    \r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='red'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"syphilisTest\" value=\"Yes\" onChange={handleCheckBoxSyphilisTest} checked={syphilisTest.syphilisTest==='Yes' ? true : false}/> Syphilis Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {syphilisTest.syphilisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={syphilisTest.testDate}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={syphilisTest.result}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"otherTest\" value=\"Yes\" onChange={handleCheckBoxOtherTest} checked={otherTest.otherTest==='Yes' ? true : false}/> Other Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {otherTest.otherTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={otherTest.testDate}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"reult\"\r\n                    id=\"result\"\r\n                    value={otherTest.prepGiven}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n            \r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br /><br />\r\n            <div className=\" mb-3 col-md-12\">\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  className=\"col-md-6\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  // min={vital.encounterDate}\r\n                  \r\n                />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                        <span className={classes.error}>{errors.nextAppointment}</span>\r\n                    ) : \"\" }\r\n              </div>\r\n           </div>\r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Label, FormGroup} from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { token, url as baseUrl } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst TBScreeningForm = (props) => {\r\n  const [tbStatus, setTbStatus] = useState([]); \r\n  const [TBForms, setTBForms] = useState(false) \r\n\r\n  useEffect(() => {\r\n    TBStatus();\r\n    if(props.tbObj.antiTBDrug ==='NO'){\r\n      setTBForms(true)\r\n    }else{\r\n      setTBForms(false)\r\n    }\r\n    }, [props.tbObj]);\r\n\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const TBStatus =()=>{\r\n    axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n      props.setTbObj ({...props.tbObj,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"antiTBDrug\" ){\r\n          if(e.target.value===\"NO\"){\r\n              setTBForms(true)\r\n          }else{\r\n              setTBForms(false)\r\n          }\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n          \r\n          <div className=\"form-group mb-3 col-md-6\">\r\n          <FormGroup>\r\n              <Label >Patient on Anti TB Drugs?</Label>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"antiTBDrug\"\r\n                  id=\"antiTBDrug\"\r\n                  value={props.tbObj.antiTBDrug}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  disabled={!props.enableUpdate}\r\n                  required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n\r\n              </Input>\r\n              \r\n            </FormGroup>\r\n          </div>\r\n          {TBForms===true ? (\r\n            <>\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n                <Label >Patient Currently on IPT?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"currentOnIpt\"\r\n                    id=\"currentOnIpt\"\r\n                    value={props.tbObj.currentOnIpt}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                        <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >coughing?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"coughing\"\r\n                    id=\"coughing\"\r\n                    value={props.tbObj.coughing}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Night Sweat?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"nightSweat\"\r\n                    id=\"nightSweat\"\r\n                    value={props.tbObj.nightSweat}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Fever</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"fever\"\r\n                    id=\"fever\"\r\n                    value={props.tbObj.fever}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Contact with TB Case?</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"contactWithTBCase\"\r\n                    id=\"contactWithTBCase\"\r\n                    value={props.tbObj.contactWithTBCase}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\"> Select</option>\r\n                      <option value=\"YES\"> YES</option>\r\n                      <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >Lethergy</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"lethergy\"\r\n                    id=\"lethergy\"\r\n                    value={props.tbObj.lethergy}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n                      <option value=\"YES\"> YES</option>\r\n                    <option value=\"NO\">NO </option>\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n              {/* <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    required\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {tbStatus.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div> */}\r\n              {(props.tbObj.currentOnIpt===\"NO\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on INH prophylaxis'  && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='TB suspected and referred for evaluation' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"YES\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"YES\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"YES\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"YES\" && props.tbObj.lethergy===\"NO\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n              {(props.tbObj.currentOnIpt===\"YES\" && props.tbObj.coughing===\"NO\" && props.tbObj.nightSweat ===\"NO\" && props.tbObj.fever===\"NO\" && props.tbObj.contactWithTBCase===\"NO\" && props.tbObj.lethergy===\"YES\") &&\r\n                (<>\r\n                  <div className=\"form-group mb-3 col-md-4\">\r\n              <FormGroup>\r\n                <Label >TB Status</Label>\r\n                <Input\r\n                    type=\"select\"\r\n                    name=\"tbStatusId\"\r\n                    id=\"tbStatusId\"\r\n                    value={props.tbObj.tbStatusId}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={!props.enableUpdate}\r\n                    >\r\n                      <option value=\"\">Select </option>\r\n\r\n                        {(tbStatus.filter((x)=> x.display!=='No sign or symptoms of TB' && x.display!=='Currently on TB treatment')).map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                </Input>\r\n              </FormGroup>\r\n              </div>\r\n                </>\r\n                )\r\n              }\r\n          </>\r\n          )\r\n          :\r\n          \"\"\r\n          }\r\n        </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TBScreeningForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"@reach/menu-button/styles.css\";\r\nimport ConsultationPage from './History/ConsultationPage'\r\n\r\n\r\nconst ClinicVisitHistory = (props) => {    \r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n\r\n  return (\r\n    <div>\r\n         <div className=\"row\">\r\n            \r\n                <ConsultationPage patientObj={patientObj} activeContent={props.activeContent} />  \r\n\r\n        </div>   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClinicVisitHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    console.log(props)\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        reffered:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientCommercement(props.activeContent.id)\r\n        }\r\n    }, []);\r\n    const GetPatientCommercement =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    // const GetPatientPrepEligibility =(id)=>{\r\n    //     axios\r\n    //        .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n    //            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //        )\r\n    //        .then((response) => {\r\n    //             //console.log(response.data.find((x)=> x.id===id));\r\n    //            //setObjValues(response.data.find((x)=> x.id===id));\r\n    //        })\r\n    //        .catch((error) => {\r\n    //        //console.log(error);\r\n    //        });          \r\n    // } \r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        bodyWeight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n          \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.reffered = objValues.reffered ? \"\" : \"This field is required\"\r\n        temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n          axios.post(`${baseUrl}prep/commencement`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                 \r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n            }          \r\n    }\r\n    \r\n\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started *</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateOfRegistration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI :  {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.sex==='Female'  || props.patientObj.personResponseDto.sex==='female' || props.patientObj.personResponseDto.sex==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}  \r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            \r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            \r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            \r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">referred</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"reffered\"\r\n                            id=\"reffered\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.reffered}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.reffered !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reffered}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"30\"> TDF(300mg)+3TC(150mg)</option>\r\n\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n    }, []);\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues)\r\n         if(validate()){\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    \r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n        }\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions </Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Interruption </Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"interruptionDate\"\r\n                                id=\"interruptionDate\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.interruptionDate}\r\n                                required\r\n                            />\r\n                            {errors.interruptionDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionDate}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        />\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                    <>\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>)}\r\n                    \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //let patientAge=\"\"\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    useEffect(() => { \r\n        \r\n        //console.log(props.extra.riskAssessment)\r\n        CounselingType();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               //setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleItemClick =(page, completedMenu)=>{        \r\n        if(props.completed.includes(completedMenu)) {\r\n        }else{\r\n            props.setCompleted([...props.completed, completedMenu])\r\n        }\r\n        props.handleItemClick(page)\r\n    }\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            hivNegative:\"\",\r\n            hivPositive:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n        //    temp.previousTestedHIVNegative = knowledgeAssessment.previousTestedHIVNegative ? \"\" : \"This field is required.\"\r\n        //    {knowledgeAssessment.previousTestedHIVNegative==='true' && ( temp.timeLastHIVNegativeTestResult = knowledgeAssessment.timeLastHIVNegativeTestResult ? \"\" : \"This field is required.\")}\r\n        //    temp.clientPregnant = knowledgeAssessment.clientPregnant ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformHivTransRoutes = knowledgeAssessment.clientInformHivTransRoutes ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformRiskkHivTrans = knowledgeAssessment.clientInformRiskkHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPreventingsHivTrans = knowledgeAssessment.clientInformPreventingsHivTrans ? \"\" : \"This field is required.\"\r\n        //    temp.clientInformPossibleTestResult = knowledgeAssessment.clientInformPossibleTestResult ? \"\" : \"This field is required.\"\r\n        //    temp.informConsentHivTest = knowledgeAssessment.informConsentHivTest ? \"\" : \"This field is required.\"  \r\n\r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n            axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.prepEligibilityCount=1\r\n                //props.setPatientObj(response.data)\r\n                toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date *</Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientObj.personResponseDto.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartners\"\r\n                                    id=\"sexPartners\"\r\n                                    value={objValues.sexPartners}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartners !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartners}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        {props.patientObj.personResponseDto.sex==='Male' || props.patientObj.personResponseDto.sex==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy *</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>Do you use any of these drugs/substances ?</h4>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before & When was your last test? {\"<\"}1mth 1-3mths 4-6mths {\">\"}6mths </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                            <h3>HIV test result at visit</h3>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Negative</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivNegative\"\r\n                                        id=\"hivNegative\"\r\n                                        value={drugHistory.hivNegative}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Positive</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivPositive\"\r\n                                        id=\"hivPositive\"\r\n                                        value={drugHistory.hivPositive}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                           \r\n                            <Button content='Save' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2'\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepRisk, setPrepRisk] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n        PREP_RISK_TYPE();\r\n        //console.log(props)\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEnrollment(props.activeContent.id)\r\n        }\r\n        //GetPatientPrepEnrollment\r\n      }, []);\r\n    const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_RISK_TYPE =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            setPrepRisk(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //const patientDTO= response.data.enrollment\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientPrepEnrollment =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.prepEnrollmentCount=1\r\n                  toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n        }\r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    required\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> Select</option>\r\n                                    {prepRisk.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                {props.patientObj.hivPositive===true && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={\"Positive\"}\r\n                                    disabled\r\n                                />\r\n                               \r\n                                </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                {props.patientObj.dateHivPositive!==null && (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={props.patientObj.dateHivPositive}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    {/* <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    /> */}\r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        maxLength={5}\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'supporterPhone')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={props.toggle}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [art, setArt] = useState(false);\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n\r\n     }, [patientObj]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj} setArt={setArt} setActiveContent={setActiveContent}/>            \r\n            <SubMenu patientObj={patientObj} art={art} setActiveContent={setActiveContent}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}