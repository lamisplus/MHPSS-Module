{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtBySex.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Visualisation/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Patient/PatientChart/Bmi.js","main/webapp/jsx/components/Patient/PatientChart/Height.js","main/webapp/jsx/components/Patient/PatientChart/Index.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ViewUpdate/ADR/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/OpportunisticInfection/Index.js","main/webapp/jsx/components/Consultation/ViewUpdate/History/ConsultationPage.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","makeStyles","theme","card","margin","spacing","display","flexDirection","alignItems","form","width","marginTop","submit","cardBottom","marginBottom","Select","height","button","root","input","error","color","fontSize","success","useState","setPatientList","setLoading","axios","baseUrl","headers","then","response","data","catch","useEffect","patients","icons","title","columns","field","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","size","prepStatus","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","Button","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","ReceivingArtByAge","chart","plotBackgroundColor","plotBorderWidth","plotShadow","type","text","tooltip","pointFormat","accessibility","point","valueSuffix","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","format","connectorColor","showInLegend","series","sliced","y","ReceivingArtBySex","align","verticalAlign","distance","startAngle","endAngle","center","innerSize","useStyles","SummaryView","activeItem","React","anchorEl","Boolean","padding","md","lg","sm","xs","className","CardBody","highcharts","subtitle","legend","layout","xAxis","categories","labels","x","yAxis","allowDecimals","responsive","rules","condition","maxWidth","chartOptions","credits","options2","Widget","class","divStyle","borderRadius","Home","key","setKey","Row","Col","xl","Card","Body","Tabs","id","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","secondary","icon","details","column","flexBasis","helper","borderLeft","divider","unit","link","primary","main","textDecoration","classes","patientDetail","setpatientObj","ExpansionPanel","ExpansionPanelSummary","root2","personResponseDto","startIcon","textTransform","identifier","find","obj","value","getHospitalNumber","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","personResponseDtodateOfBirth","personResponseDtosex","sex","phoneNumber","contactPoint","getPhoneNumber","address","city","getAddress","Typography","Divider","SubMenu","loadPrEPEligibiltyScreeningForm","setActiveContent","activeContent","route","Menu","inverted","Item","onClick","prepEligibilityCount","prepEnrollmentCount","commenced","uv","pv","amt","Example","aspect","dataKey","stroke","fill","strokeWidth","PureComponent","RechartJs","RecentHistory","recentActivities","setRecentActivities","useHistory","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","RecentActivities","personId","activities","LoadViewPage","action","path","actionType","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","Dropdown","viewBox","version","fillRule","viewable","deletable","delete","toast","errorMessage","apierror","message","xmlns","strokeLinecap","strokeLinejoin","d","PatientnHistory","loading","PatientHistory","isLoading","position","item","Icon","LoadDeletePage","flexGrow","ClinicVisit","errors","setErrors","patientDto","setPatientDto","temp","saving","setSaving","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","weight","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","encounterDate","extra","hepatitis","nextAppointment","notedSideEffects","otherTestsDone","pregnant","prepEnrollmentUuid","referred","regimenId","riskReductionServices","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","objValues","setObjValues","urinalysisTest","testDate","setUrinalysisTest","syphilisTest","setSyphilisTest","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_STATUS","HTS_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","PrepRegimen","handleInputChange","e","target","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","Grid","Column","Segment","ribbon","FormGroup","Input","border","onChange","min","dateEnrolled","max","required","InputGroup","onKeyUp","InputGroupText","addonType","toFixed","hivTestResult","code","sideEffect","prepGiven","for","composition","checked","disabled","preventDefault","Object","values","every","uuid","post","POSITION","BOTTOM_CENTER","subErrors","ADR","ClinicVisitPage","activeTab","PrEPCommencementForm","prepClientId","prepId","prepEligibilityUuid","drugAllergies","reffered","datereferred","setpregnant","PREGANACY_STATUS","GetPatientCommercement","bodyWeight","breastFeeding","Spinner","validate","toggle","demo","background","default","inline","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","dateSeroconverted","linkToArt","dateLinkToArt","BasicInfo","patientID","clientId","counselingType","setCounselingType","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","visitDate","CounselingType","GetPatientPrepEligibility","console","log","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","handleInputChangeRiskAssessment","riskCount","filter","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","hivNegative","hivPositive","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","drugHistory","handleInputChangeDrugHistory","dateOfRegistration","sexPartners","maritalStatus","moreThanOneSexPartnerLastThreeMonths","Message","warning","length","fever","content","labelPosition","htsClientId","PrEPVisit","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","prepRisk","setPrepRisk","relatives","setRelatives","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","ancUniqueArtNo","dateOfLastHivNegativeTest","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","inputName","slice","checkPhoneNumberBasic","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","index","lastModifiedDate","drop","borderColor","marginRight","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","Header","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","PatientObject","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateReferredForPrep","hivTestingPoint","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","setCarePoints","setSourceReferral","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","open","setOpen","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","handleSubmit","newConatctsInfo","contactInfo","line","fullName","push","patientForm","landmark","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","setStateByCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","Modal","show","centered","backdrop","Title","Footer","setOvcEnrolled","getSex","identifiers","altphone","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","TOP_RIGHT","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","person","hivEnrollment","put","handleCheckBox","floor","random","htmlFor","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.cd65f456.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8282/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjc0NjE3NDE5fQ.nsHdfW5j6IZ8epTpkCD5a2YLe2RPoiBMg0KZVkhQ6wh18i0ScW5fhHxQsn3Ebq-JAg2y6jrDyKq_29VJKPlTfg';\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\n\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\nimport {TiArrowForward} from 'react-icons/ti'\r\n\r\n\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now + \" year(s)\";\r\n        };\r\n    \r\n    const getHospitalNumber = (identifier) => {     \r\n        const identifiers = identifier;\r\n        const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');       \r\n        return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.surname,\r\n                                    hospital_number: row.hospitalNumber,\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.gender ? row.gender : \"\",\r\n                                    age: row.age,\r\n                                    \r\n                                    status: (<Label color=\"blue\" size=\"mini\">{row.prepStatus}</Label>),\r\n                                \r\n                                actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","export const ReceivingArtBySex = {\r\n    chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: 0,\r\n        plotShadow: false\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children newly enrolled on ART by Sex',\r\n        align: 'center',\r\n        verticalAlign: 'middle',\r\n        y: -160\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            \r\n            dataLabels: {\r\n                enabled: true,\r\n                distance: -50,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                style: {\r\n                    fontWeight: 'bold',\r\n                    color: 'white'\r\n                }\r\n            },\r\n            startAngle: -90,\r\n            endAngle: 90,\r\n            center: ['50%', '75%'],\r\n            size: '110%',\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        type: 'pie',\r\n        name: 'Newly Enrolled on ART ',\r\n        innerSize: '50%',\r\n        data: [\r\n            ['Male', 58.9],\r\n            ['Female', 13.29],\r\n            \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, { Fragment } from \"react\";\r\n// BS\r\nimport { Dropdown, Nav, Tab } from \"react-bootstrap\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport SummaryView from './DashboardAnalytics/SummaryView/Index';\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport {NewlyEnrolledArtBySex} from './DashboardAnalytics/SummaryView/Highcharts/NewlyEnrolledArtBySex';\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among new patients eligible after 6 months'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [20, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [200, 45, 30,20]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 10, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst options2 = {\r\n  chart: {\r\n    type: 'column'\r\n},\r\n\r\ntitle: {\r\n    text: 'Viral Load Cascade among patients currently on ART eligible after 12 months of last VL result'\r\n},\r\n\r\nsubtitle: {\r\n    text: ''\r\n},\r\n\r\nlegend: {\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    layout: 'vertical'\r\n},\r\n\r\nxAxis: {\r\n    categories: ['Number Eligble', 'Number of Sample Collected', 'Number Tested', 'Number Suppressed'],\r\n    labels: {\r\n        x: -10\r\n    }\r\n},\r\n\r\nyAxis: {\r\n    allowDecimals: false,\r\n    title: {\r\n        text: 'Amount'\r\n    }\r\n},\r\n\r\nseries: [{\r\n    name: 'Number Eligble',\r\n    data: [200, 40, 30, 3]\r\n}, {\r\n    name: 'Number of Sample Collected',\r\n    data: [62, 41, 22, 22]\r\n}, {\r\n    name: 'Number Tested',\r\n    data: [2000, 450, 300,200]\r\n}, {\r\n  name: 'Number Suppressed',\r\n  data: [40, 40, 100, 90]\r\n}],\r\n\r\nresponsive: {\r\n    rules: [{\r\n        condition: {\r\n            maxWidth: 500\r\n        },\r\n        chartOptions: {\r\n            legend: {\r\n                align: 'center',\r\n                verticalAlign: 'bottom',\r\n                layout: 'horizontal'\r\n            },\r\n            yAxis: {\r\n                labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                },\r\n                title: {\r\n                    text: null\r\n                }\r\n            },\r\n            subtitle: {\r\n                text: null\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            }\r\n        }\r\n    }]\r\n}\r\n}\r\nconst Widget = () => {\r\n  return (\r\n    <Fragment>     \r\n      <div className=\"row\">\r\n       <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-primary text-danger\">\r\n                <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">NEWLY DIAGNOSED HIV+</p>\r\n                  <h4 className=\"mb-0\">3280</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-warning text-warning\">\r\n                <i class=\"fa fa-heartbeat\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENT ON ART</p>\r\n                  <h4 className=\"mb-0\">2570</h4>\r\n                  {/* <span className=\"badge badge-warning\">+3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body  p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-danger text-danger\">\r\n                <i class=\"fa fa-compress\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">VIRALLY SUPPRESSED</p>\r\n                  <h4 className=\"mb-0\">50</h4>\r\n                  {/* <span className=\"badge badge-danger\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-3 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <div className=\"widget-stat card\">\r\n            <div className=\"card-body p-4\">\r\n              <div className=\"media ai-icon\">\r\n                <span className=\"me-3 bgl-success text-success\">\r\n                <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                </span>\r\n                <div className=\"media-body\">\r\n                  <p className=\"mb-1\">CURRENTLY ACTIVE</p>\r\n                  <h4 className=\"mb-0\">2340</h4>\r\n                  {/* <span className=\"badge badge-success\">-3.5%</span> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <SummaryView />\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"col-xl-6 col-xxl-4 col-lg-6 col-sm-6\">\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={options2}\r\n          />\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                 \r\n                  <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                    \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [patientObj, setpatientObj] = useState(props.patientDetail)\r\n\r\n  useEffect(() => {\r\n    setpatientObj(props.patientDetail);\r\n  }, [props.patientDetail]);\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type === 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city);      \r\n      return address ? address.city : '';\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    {patientObj && patientObj!==null ? (<>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.personResponseDto.firstName + \" \" + patientObj.personResponseDto.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.personResponseDto.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.personResponseDtodateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.personResponseDtosex && patientObj.personResponseDto.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.personResponseDto.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.personResponseDto.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n                    {patientObj.prepStatus!==null && (\r\n                    <Col md={12}>\r\n                       <div >\r\n                            <Typography variant=\"caption\">\r\n                                <Label color={patientObj && patientObj.prepStatus===true ? \"red\" : \"teal\"} size={\"mini\"}>\r\n                                   STATUS : {patientObj && patientObj.prepStatus===true ? \"Positive\" : \"Negative\"}    \r\n                                </Label>\r\n                              \r\n                            </Typography>\r\n                       </div>                 \r\n                    </Col> \r\n                    )}\r\n                    </Row>\r\n                    </>)\r\n                    :(\r\n                      <>\r\n                      <p>Loading please wait..</p>\r\n                      </>\r\n                    )\r\n                  }\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\n\r\n\r\n\r\nfunction SubMenu(props) {\r\n\r\n    const patientObj = props.patientDetail \r\n    useEffect(() => {\r\n        //Observation();\r\n    }, [props.patientObj]);\r\n\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n\r\n    return (\r\n         <div>\r\n            {patientObj && patientObj!==null ? (<>\r\n                <Menu size=\"mini\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} > Home</Menu.Item>                  \r\n                {patientObj.prepEligibilityCount<=0 || patientObj.prepEnrollmentCount<=0 || patientObj.commenced!==true ? \r\n                (<>\r\n                    {patientObj.prepEligibilityCount <=0 && (<Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening </Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount<=0 && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                    {patientObj.prepEligibilityCount >0 && patientObj.prepEnrollmentCount>0 && patientObj.commenced!==true && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                </>)\r\n                :\r\n                (<>\r\n                    <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} > PrEP Eligibility Screening </Menu.Item>\r\n                    <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                    <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                    \r\n                </Menu>\r\n            </>)\r\n            :\r\n            (\r\n            <>\r\n            </>\r\n            )\r\n            }\r\n                         \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 1000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 1000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport PageTitle from \"../../../layouts/PageTitle\";\r\n\r\nimport Bmi from \"./Bmi\";\r\nimport Height from \"./Height\";\r\n//import ViccinationStatus from \"./ViccinationStatus\";\r\n//import LegendEffectOpacity from \"./LegendEffectOpacity\";\r\n\r\nfunction RechartJs() {\r\n  return (\r\n    <>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={6}>\r\n          <Card>            \r\n            <Card.Body>\r\n                <p>Weight                    \r\n                    <span className=\"float-end text-success\">Normal</span>\r\n                </p>\r\n                <p><h5>45Kg</h5></p>                \r\n              <Bmi />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={6} lg={6}>\r\n          <Card>           \r\n            <Card.Body>\r\n            <p>Height                    \r\n                    <span className=\"float-end text-success\">Normal</span>\r\n                </p>\r\n                <p><h5>140cm</h5></p>\r\n              <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={12} lg={12}>\r\n          <Card>            \r\n            <Card.Body>\r\n            <p>BMI                   \r\n                    <span className=\"float-end text-danger\">Below Normal</span>\r\n                </p>\r\n                <p><h5>5.6 kg/m<sup>2</sup></h5></p>\r\n                <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>        \r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RechartJs;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\nimport PatientChart from './../Patient/PatientChart/Index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n  },\r\n  heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: 'bolder',\r\n  },\r\n}));\r\nconst RecentHistory = (props) => {\r\n  //console.log(props.patientObj)\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  //const [loading, setLoading] = useState(true)\r\n  let history = useHistory();\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    RecentActivities();\r\n  }, [props.patientObj.personId]);\r\n\r\n  //Get list of LaboratoryHistory\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data[0].activities)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n\r\n\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Pharmacy refill'){\r\n        return \"PR\"\r\n      }else if(name==='Clinical evaluation'){\r\n        return \"CE\"\r\n      }else if(name==='Clinic visit follow up'){\r\n        return \"CV\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='prep-eligibility'){        \r\n        props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-enrollment'){\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-clinic'){//prep-commencement \r\n        props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-commencement'){\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n    }else{\r\n\r\n    }\r\n    \r\n}\r\n  const LoadDeletePage =(row)=>{\r\n      \r\n      if(row.path==='Mental-health'){        \r\n          //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n          axios\r\n          .delete(`${baseUrl}observation/${row.id}`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              toast.success(\"Record Deleted Successfully\");\r\n              RecentActivities()\r\n          })\r\n          .catch((error) => {\r\n              if(error.response && error.response.data){\r\n                  let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                  toast.error(errorMessage);\r\n                }\r\n                else{\r\n                  toast.error(\"Something went wrong. Please try again...\");\r\n                }\r\n          });  \r\n      }else{\r\n\r\n      }\r\n      \r\n  }\r\n  const redirectLink=()=>{\r\n    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  }\r\n  const index= 1\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\" >\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n\r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{data.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {data.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                {data.viewable && ( <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(data,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                                )}\r\n                                  {data.deletable && (<Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadDeletePage(data)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  )}\r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                                                   \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n            <h4 className=\"card-title\">Summary </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n              <div className=\"widget-stat card\">\r\n                <div className=\"card-body p-4\" style={{backgroundColor:\"#E8F0FD\"}}>\r\n                  <h4 className=\"card-title\">Current Regimen Given</h4>\r\n                  <h3 class=\"text-info \">TDF(300mg)+3TC(150mg)</h3>\r\n                  <div className=\"progress mb-2\">\r\n                    <div\r\n                      className=\"progress-bar progress-animated bg-primary\"\r\n                      style={{ width: \"100%\" }}\r\n                    ></div>\r\n                  </div>\r\n                  <p class=\"text-success \">Next Appointment Date : 03/03/2023</p>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                <div className=\"widget-stat card\">\r\n                  <div className=\"card-body p-4\" >\r\n                  <div className=\"media ai-icon\">\r\n                    <span className=\"me-3 bgl-primary text-primary\">\r\n                      <svg\r\n                        id=\"icon-customers\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        className=\"feather feather-user\"\r\n                      >\r\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"media-body\">\r\n                      <p className=\"mb-1\" ><span style={{fontSize:\"14px\"}} >Total Visit :</span> <span className=\"badge badge-primary\">4</span></p>\r\n                      <p><span style={{fontSize:\"10px\", fontWeight:\"bolder\"}} >Last Visit Date : </span><span className=\"badge badge-dark\">04/011/2022</span></p>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"card-body\">\r\n                <PatientChart />\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n </div>\r\n      \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    // let history = useHistory();\r\n    // let patientHistoryObject = []\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data[0].activities)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='Mental-health'){        \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}observation/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='Art-commence'){\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}hiv/art/commencement/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n            })\r\n            .catch((error) => {\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadDeletePage(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>)} \r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n         \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, List,Card } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\":{\r\n        color:'#fff',\r\n        fontWeight:'bold'\r\n    },\r\n    \"& .form-control\":{\r\n        borderRadius:'0.25rem',\r\n        height:'41px'\r\n    },\r\n    \"& .card-header:first-child\": {\r\n        borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n        display: \" block !important\"\r\n    },\r\n    \"& select\":{\r\n        \"-webkit-appearance\": \"listbox !important\"\r\n    },\r\n    \"& p\":{\r\n        color:'red'\r\n    },\r\n    \"& label\":{\r\n        fontSize:'14px',\r\n        color:'#014d88',\r\n        fontWeight:'bold'\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  //let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  //const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = \r\n            useState({\r\n              weight: \"\",\r\n              diastolic: \"\",\r\n              height: \"\",\r\n              systolic: \"\",\r\n              pulse:\"\",\r\n              temperature:\"\",\r\n              respiratoryRate:\"\" \r\n            })\r\n  //console.log(props.patientObj)\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    dateInitialAdherenceCounseling: \"\",\r\n    datePrepGiven: \"\",\r\n    datePrepStart: \"\",\r\n    dateReferre: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    extra: {},\r\n    height: \"\",\r\n    hepatitis: {},\r\n    nextAppointment: \"\",\r\n    notedSideEffects: \"\",\r\n    otherTestsDone: {},\r\n    personId: props.patientObj.personId,\r\n    pregnant: \"\",\r\n    prepEnrollmentUuid: \"\",\r\n    pulse: \"\",\r\n    referred: \"\",\r\n    regimenId: \"\",\r\n    respiratoryRate: \"\",\r\n    riskReductionServices: \"\",\r\n    stiScreening: \"\",\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: \"\",\r\n    temperature: \"\",\r\n    urinalysis: {},\r\n    urinalysisResult: \"\",\r\n    weight: \"\",\r\n    why: \"\",\r\n    otherDrugs:\"\",\r\n    duration:\"\"\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [otherTest, setOtherTest] = useState({\r\n    otherTest: \"No\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    PrepRegimen();\r\n    //hiv/patient/3\r\n  }, []);\r\n    const GetPatientDTOObj =()=>{\r\n      axios\r\n        .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPatientDto(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });          \r\n    }\r\n    const PrepEligibilityObj =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          //setPrepStatus(response.data);\r\n          objValues.prepEnrollmentUuid=\"\";\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PrepRegimen =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep-regimen`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_STATUS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setPrepStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_SIDE_EFFECTS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n\r\n    const HTS_RESULT =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const WHY_POOR_FAIR_ADHERENCE =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const SYNDROMIC_STI_SCREENING = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setSti(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n\r\n    }\r\n    ///Level of Adherence\r\n    async function AdherenceLevel() {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setAdherenceLevel(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n    const handleInputChange = e => {\r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      \r\n    }\r\n    const handleInputChangeUrinalysisTest= e => {\r\n      setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeOtherTest = e => {\r\n      setOtherTest({ ...otherTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeHepatitisTest = e => {\r\n      setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n    }\r\n    const handleInputChangeSyphilisTest = e => {\r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n  //Handle CheckBox \r\n  const handleCheckBoxSyphilisTest = e => {\r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" })\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" })\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxOtherTest = e => {\r\n    if (e.target.checked) {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]:\"Yes\" })\r\n    } else {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" })\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckweight =(e)=>{\r\n    if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckRespiratoryRate =(e)=>{\r\n      if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n      const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n      }\r\n  }\r\n  const handleInputValueCheckTemperature =(e)=>{\r\n      if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n      const message =\"Temperature must not be greater than 47 and less than 35\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n      }\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = objValues.encounterDate ? \"\" : \"This field is required\"\r\n\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n\r\n    //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\r\n    temp.height = objValues.height ? \"\" : \"This field is required\"\r\n    temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    //objValues.visitDate = vital.encounterDate\r\n    objValues.syphilis = syphilisTest\r\n    objValues.hepatitis = hepatitisTest\r\n    objValues.urinalysis = urinalysisTest\r\n    objValues.otherTestsDone = otherTest\r\n    objValues.prepEnrollmentUuid= patientDto.uuid\r\n    axios.post(`${baseUrl}prep/clinic-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        //PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        \r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          if(error.response.data.apierror && error.response.data.apierror.message!==\"\"){\r\n              toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n            toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else{\r\n              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }\r\n\r\n      }else{\r\n          toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n      }\r\n        \r\n      });\r\n    }\r\n  }\r\n//console.log(objValues)\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>      \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit *</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={objValues.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChange}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChange}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={objValues.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChange}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={objValues.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChange}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={objValues.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight *</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                id=\"weight\"\r\n                                onChange={handleInputChange}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={objValues.weight}\r\n                                onKeyUp={handleInputValueCheckweight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.weight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.weight}</span>\r\n                        ) : \"\"}\r\n                        {errors.weight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.weight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height *</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                        {objValues.weight!==\"\" && objValues.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-12\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={objValues.hivTestResult}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {htsResult.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"sideEffect\"\r\n                    id=\"sideEffect\"\r\n                    value={objValues.sideEffect}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {prepSideEffect.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"true\">Yes </option>\r\n                    <option value=\"false\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening==='true' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syndromic STI Screening  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"syndromicStiScreening\"\r\n                    id=\"syndromicStiScreening\"\r\n                    value={objValues.syndromicStiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {sti.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence *</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !==\"\" ? (\r\n                      <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                  ) : \"\" } \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel==='PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Why Poor/Fair Adherence </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whyAdherenceLevelPoor\"\r\n                    id=\"whyAdherenceLevelPoor\"\r\n                    value={objValues.whyAdherenceLevelPoor}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {whyAdherenceLevelPoor.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              \r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.prepGiven==='Yes' && (<> \r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n              <FormLabelName for=\"\">PrEP Regimen</FormLabelName>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  \r\n              >\r\n              <option value=\"\"> Select</option>\r\n              {prepRegimen.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.composition}\r\n                      </option>\r\n                    ))}\r\n              </Input>\r\n              {errors.regimenId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : \"\" } \r\n              </FormGroup>\r\n              \r\n              </div> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Duration </FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    id=\"duration\"\r\n                    value={objValues.duration}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>     \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div> \r\n              </>)}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                 />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               \r\n              <br /><br />\r\n              <Label as='a' color='teal'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"urinalysisTest\" value=\"Yes\" onChange={handleCheckBoxUrinalysisTest} checked={urinalysisTest.urinalysisTest=='Yes' ? true : false}/> Urinalysis Test</h4>\r\n              </Label>\r\n              <br /><br />\r\n              {urinalysisTest.urinalysisTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={urinalysisTest.testDate}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Result</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={urinalysisTest.result}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                 />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"hepatitisTest\" value=\"Yes\" onChange={handleCheckBoxHepatitisTest} checked={hepatitisTest.hepatitisTest==='Yes' ? true : false}/> Hepatitis  Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {hepatitisTest.hepatitisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={hepatitisTest.testDate}\r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={hepatitisTest.result}\r\n                    \r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='red'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"syphilisTest\" value=\"Yes\" onChange={handleCheckBoxSyphilisTest} checked={syphilisTest.syphilisTest==='Yes' ? true : false}/> Syphilis Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {syphilisTest.syphilisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={syphilisTest.testDate}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={syphilisTest.result}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"otherTest\" value=\"Yes\" onChange={handleCheckBoxOtherTest} checked={otherTest.otherTest==='Yes' ? true : false}/> Other Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {otherTest.otherTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={otherTest.testDate}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"reult\"\r\n                    id=\"result\"\r\n                    value={otherTest.prepGiven}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n            \r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br /><br />\r\n            <div className=\" mb-3 col-md-12\">\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  className=\"col-md-6\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  // min={vital.encounterDate}\r\n                  \r\n                />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                        <span className={classes.error}>{errors.nextAppointment}</span>\r\n                    ) : \"\" }\r\n              </div>\r\n           </div>\r\n            <br />\r\n            <MatButton\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={saving}\r\n              startIcon={<SaveIcon />}\r\n              style={{backgroundColor:\"#014d88\"}}\r\n              onClick={handleSubmit}\r\n            >\r\n              {!saving ? (\r\n                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n              ) : (\r\n                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n              )}\r\n            </MatButton>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, useEffect } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { url as baseUrl,token } from \"./../../../../../api\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    PrepSideEffect();\r\n  }, []);\r\n       //Get list of PrepSideEffect\r\n       const PrepSideEffect =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               //console.log(response.data);\r\n               setPrepSideEffect(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });\r\n       \r\n        }\r\n  const handAdrleInputChange = e => {\r\n    props.setAdrObj ({...props.adrObj,  [e.target.name]: e.target.value});\r\n  }\r\n   //Validations of the forms\r\n   const validate = () => {        \r\n    temp.adr = props.adrObj.adr ? \"\" : \"This field is required\"\r\n    temp.adrOnsetDate = props.adrObj.adrOnsetDate ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  const addADR = e => { \r\n    if(validate()){\r\n        props.setAdrList([...props.adrList, props.adrObj])\r\n    }else{\r\n      toast.error(\" Field are required \");\r\n    }\r\n  }\r\n  /* Remove ADR  function **/\r\n  const removeRelativeLocation = index => {       \r\n      props.adrList.splice(index, 1);\r\n      props.setAdrList([...props.adrList]);\r\n     \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n        {props.enableUpdate && (\r\n        <>\r\n        <div className=\"form-group mb-3 col-md-5\">\r\n\r\n            <FormGroup>\r\n            <Label >ADR </Label>\r\n            \r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"adr\"\r\n                  id=\"adr\"\r\n                  value={props.adrObj.adr}\r\n                  onChange={handAdrleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  >\r\n                    <option value=\"\"> Select</option>\r\n                      {prepSideEffect.map((value) => (\r\n                          <option key={value.id} value={value.display}>\r\n                              {value.display}\r\n                          </option>\r\n                      ))}\r\n              </Input>\r\n                {errors.adr !==\"\" ? (\r\n                    <span className={classes.error}>{errors.adr}</span>\r\n                ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        <div className=\"form-group mb-3 col-md-5\">        \r\n        <FormGroup>\r\n            <Label > Onset Date</Label>\r\n            <Input\r\n                type=\"date\"\r\n                name=\"adrOnsetDate\"\r\n                id=\"adrOnsetDate\"\r\n                value={props.adrObj.adrOnsetDate}\r\n                min={props.artStartDate}\r\n                onChange={handAdrleInputChange}\r\n                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                required\r\n                > \r\n            </Input>\r\n            {errors.adrOnsetDate !==\"\" ? (\r\n                <span className={classes.error}>{errors.adrOnsetDate}</span>\r\n            ) : \"\" }\r\n            </FormGroup>\r\n        </div>\r\n        \r\n        <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addADR}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n        </div>\r\n        </>)}\r\n        {props.adrList.length >0 \r\n          ?\r\n            <List>\r\n            <Table  striped responsive>\r\n                  <thead >\r\n                      <tr>\r\n                          <th>ADR</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.adrList.map((relative, index) => (\r\n\r\n                  <RelativeList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeRelativeLocation={removeRelativeLocation}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n            </List>\r\n            :\r\n            \"\"\r\n        }       \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction RelativeList({\r\n  relative,\r\n  index,\r\n  removeRelativeLocation,\r\n}) {\r\n\r\n\r\n  return (\r\n          <tr>\r\n              <th>{relative.adr}</th>\r\n              <th>{relative.adrOnsetDate}</th>\r\n              <th></th>\r\n              <th >\r\n                  <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeRelativeLocation(index)}>\r\n                      <DeleteIcon fontSize=\"inherit\" />\r\n                  </IconButton>\r\n                  \r\n              </th>\r\n          </tr> \r\n  );\r\n}\r\n\r\n\r\nexport default ADR;\r\n","import React, { useState } from \"react\";\r\nimport {  Table  } from \"react-bootstrap\";\r\nimport { Input, Label, FormGroup, } from \"reactstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from \"moment\";\r\nimport {Icon, List, Label as LabelSui} from 'semantic-ui-react'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ADR = (props) => {\r\n  const [errors, setErrors] = useState({});\r\n  const classes = useStyles()\r\n  let temp = { ...errors }\r\n  const handleInfectionInputChange = e => {\r\n  props.setInfection ({...props.infection,  [e.target.name]: e.target.value});\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.ondateInfection = props.infection.ondateInfection ? \"\" : \"This field is required\"\r\n    temp.illnessInfection = props.infection.illnessInfection ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n    const addInfection = e => { \r\n      if(validate()){\r\n        props.setInfectionList([...props.infectionList, props.infection])\r\n      }else{\r\n        toast.error(\" Field are required \");\r\n      }\r\n    \r\n    }\r\n    /* Remove ADR  function **/\r\n    const removeInfection = index => {       \r\n    props.infectionList.splice(index, 1);\r\n    props.setInfectionList([...props.infectionList]);\r\n        \r\n    };\r\n                                            \r\n\r\n  return (\r\n    <div>\r\n       <div className=\"row\">\r\n       {props.enableUpdate && (\r\n        <>\r\n          <div className=\"form-group mb-3 col-md-5\">\r\n              <FormGroup>\r\n              <Label >Onset Date </Label>\r\n              <Input\r\n                  type=\"date\"\r\n                  name=\"ondateInfection\"\r\n                  id=\"ondateInfection\"\r\n                  value={props.infection.ondateInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.ondateInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.ondateInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-5\">        \r\n          <FormGroup>\r\n              <Label > Illness</Label>\r\n              <Input\r\n                  type=\"text\"\r\n                  name=\"illnessInfection\"\r\n                  id=\"illnessInfection\"\r\n                  value={props.infection.illnessInfection}\r\n                  onChange={handleInfectionInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  required\r\n                  > \r\n              </Input>\r\n              {errors.illnessInfection !==\"\" ? (\r\n                  <span className={classes.error}>{errors.illnessInfection}</span>\r\n              ) : \"\" }\r\n              </FormGroup>\r\n          </div>\r\n          <div className=\"form-group mb-3 col-md-2\">\r\n          <LabelSui as='a' color='black'  onClick={addInfection}  size='tiny' style={{ marginTop:35}}>\r\n              <Icon name='plus' /> Add\r\n          </LabelSui>\r\n          </div>\r\n        </>\r\n        )}\r\n        {props.infectionList.length >0 \r\n          ?\r\n            <List>\r\n            <div style={{padding:'3px 0px'}} >\r\n            <Table  striped responsive size=\"sm\" >\r\n                  <thead  >\r\n                      <tr >\r\n                          <th>Illness</th>\r\n                          <th>OnSetDate</th>\r\n                          <th ></th>\r\n                      </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                {props.infectionList.map((relative, index) => (\r\n\r\n                  <InfectionList\r\n                      key={index}\r\n                      index={index}\r\n                      relative={relative}\r\n                      removeInfection={removeInfection}\r\n                  />\r\n                  ))}\r\n                  </tbody>\r\n                  </Table>\r\n                  </div>\r\n                </List>\r\n                :\r\n                \"\"\r\n            } \r\n    </div>\r\n    </div>\r\n     \r\n  );\r\n};\r\n\r\nfunction InfectionList({\r\n    relative,\r\n    index,\r\n    removeInfection,\r\n  }) {\r\n  \r\n   \r\n    return (\r\n            <tr>\r\n  \r\n                <th>{relative.illnessInfection}</th>\r\n                <th>{relative.ondateInfection}</th>\r\n                <th></th>\r\n                <th >\r\n                    <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" onClick={() =>removeInfection(index)}>\r\n                        <DeleteIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                    \r\n                </th>\r\n            </tr> \r\n    );\r\n  }\r\n\r\nexport default ADR;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label,} from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          InputGroupButtonDropdown,\r\n          Input,\r\n          DropdownToggle,\r\n          DropdownMenu,\r\n          DropdownItem\r\n        } from \"reactstrap\";\r\nimport ADR from './../ADR/Index'\r\nimport OpportunisticInfection from './../OpportunisticInfection/Index'\r\nimport TBScreening from './../TBScreening/Index'\r\nimport { url as baseUrl, token } from \"../../../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Row, Col,   } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Button as ButtonSMUI, Icon} from 'semantic-ui-react'\r\nimport {Link} from 'react-router-dom';\r\n//import { objectValues } from \"react-toastify/dist/utils\";\r\n\r\n\r\nlet adherenceLevelObj = []\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst ClinicVisit = (props) => {\r\n  const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\r\n  const [splitButtonOpen, setSplitButtonOpen] = React.useState(false);\r\n  const toggleDropDown = () => setDropdownOpen(!dropdownOpen);\r\n  const toggleSplit = () => setSplitButtonOpen(!splitButtonOpen);\r\n  const [visitId, setVisitId]= useState()\r\n  const [enableUpdateButton, setEnableUpdateButton]=useState(false)\r\n  const [heightValue, setHeightValue]= useState(\"cm\")\r\n  const [enableUpdate, setEnableUpdate]= useState(false) //Enable update for all input field if the user have permission\r\n  const [errors, setErrors] = useState({});\r\n  const [clinicVisitList, setClinicVisitList] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  // the visit date history \r\n  //end of the visit date history\r\n  const [getPatientObj, setGetPatientObj] = useState({});\r\n  const [saving, setSaving] = useState(false);\r\n  const [clinicalStage, setClinicalStage] = useState([]);\r\n  const [functionalStatus, setFunctionalStatus] = useState([]);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [tbStatus, setTbStatus] = useState([]);\r\n  const [TBForms, setTBForms] = useState(false)\r\n  const [currentVitalSigns, setcurrentVitalSigns] = useState({})\r\n  const [showCurrentVitalSigns, setShowCurrentVitalSigns] = useState(false)\r\n  //opportunistic infection Object\r\n  const [infection, setInfection] = useState({ illnessInfection: \"\", ondateInfection: \"\" });\r\n  const [infectionList, setInfectionList] = useState([]);\r\n  //ADR array Object \r\n  const [adrObj, setAdrObj] = useState({ adr: \"\", adrOnsetDate: \"\" });\r\n  const [adrList, setAdrList] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n                                                                    bodyWeight: \"\",\r\n                                                                    diastolic: \"\",\r\n                                                                    height: \"\",\r\n                                                                    systolic: \"\",\r\n                                                                    pulse:\"\",\r\n                                                                    temperature:\"\",\r\n                                                                    respiratoryRate:\"\" \r\n                                                                  })\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    adheres: {},\r\n    adrScreened: \"\",\r\n    adverseDrugReactions: {},\r\n    artStatusId: \"\" ,\r\n    cd4: \"\",\r\n    cd4Percentage: \"\",\r\n    clinicalNote: \"\",\r\n    clinicalStageId: \"\",\r\n    facilityId: 0,\r\n    functionalStatusId: \"\",\r\n    hivEnrollmentId: \"\",\r\n    nextAppointment: \"\",\r\n    lmpDate: \"\",\r\n    oiScreened: \"\",\r\n    opportunisticInfections: {},\r\n    personId: patientObj.id,\r\n    tbScreen: {},\r\n    stiIds: \"\",\r\n    stiTreated: \"\",\r\n    uuid: \"\",\r\n    visitDate: \"\",\r\n    whoStagingId: \"\"\r\n  });\r\n  const [vital, setVitalSignDto] = useState({\r\n    bodyWeight: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    facilityId: 1,\r\n    height: \"\",\r\n    personId: props.patientObj.id,\r\n    serviceTypeId: 1,\r\n    systolic: \"\",\r\n    pulse:\"\",\r\n    temperature:\"\",\r\n    respiratoryRate:\"\" \r\n  })\r\n  const [tbObj, setTbObj] = useState({\r\n    currentOnIpt: \"\",\r\n    coughing: \"\",\r\n    antiTBDrug: \"\",\r\n    nightSweat: \"\",\r\n    fever: \"\",\r\n    contactWithTBCase: \"\",\r\n    lethergy: \"\",\r\n    tbStatusId: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    FunctionalStatus();\r\n    WhoStaging();\r\n    AdherenceLevel();\r\n    TBStatus();\r\n    VitalSigns()\r\n    GetPatientObj();\r\n    ClinicVisitListHistory();\r\n    if(props.activeContent.id!==null){\r\n     \r\n      GetVisitById(props.activeContent.id)\r\n      setVisitId(props.activeContent.id)\r\n    }\r\n  }, []);\r\n     //GET LIST Drug Refill\r\n     async function ClinicVisitListHistory() {\r\n      setLoading(true)\r\n      axios\r\n          .get(`${baseUrl}hiv/art/clinic-visit/person?pageNo=0&pageSize=10&personId=${props.patientObj.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n              setLoading(false)\r\n              setClinicVisitList(response.data.filter((x)=> x.isCommencement!==true));              \r\n          })\r\n          .catch((error) => {  \r\n              setLoading(false)  \r\n          });        \r\n    }\r\n  //Check for the last Vital Signs\r\n  const VitalSigns = () => {\r\n    axios\r\n      .get(`${baseUrl}patient/vital-sign/person/${props.patientObj.id}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        const lastVitalSigns = response.data[response.data.length - 1]\r\n        if (lastVitalSigns.encounterDate === moment(new Date()).format(\"YYYY-MM-DD\") === true) {\r\n          setcurrentVitalSigns(lastVitalSigns)\r\n          setShowCurrentVitalSigns(true)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  }\r\n    //Get The updated patient objeect\r\n    const GetPatientObj = () => {\r\n      axios\r\n        .get(`${baseUrl}hiv/patients`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          const patObJ= response.data.filter((x)=> x.id===props.patientObj.id)\r\n\r\n          setGetPatientObj(patObJ[0])\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n    }\r\n\r\n  //Get list of WhoStaging\r\n  const WhoStaging = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/CLINICAL_STAGE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setClinicalStage(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n  ///GET LIST OF FUNCTIONAL%20_STATUS\r\n  // TB STATUS\r\n  const TBStatus = () => {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setTbStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  async function FunctionalStatus() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/FUNCTIONAL%20_STATUS`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n\r\n        setFunctionalStatus(response.data);\r\n        //setValues(response.data)\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  ///Level of Adherence\r\n  async function AdherenceLevel() {\r\n    axios\r\n      .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n        setAdherenceLevel(response.data);\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const handleInputChange = e => {\r\n    setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n    if (e.target.name === \"whoStagingId\") {\r\n      if (e.target.value === \"NO\") {\r\n        setTBForms(true)\r\n      } else {\r\n        setTBForms(false)\r\n      }\r\n    }\r\n  }\r\n  const handleInputChangeVitalSignDto = e => {\r\n    setVitalSignDto({ ...vital, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Handle CheckBox \r\n  const handleCheckBox = e => {\r\n    if (e.target.checked) {\r\n      //currentVitalSigns.personId === null ? props.patientObj.id : currentVitalSigns.personId\r\n      setVitalSignDto({ ...currentVitalSigns })\r\n    } else {\r\n      setVitalSignDto({\r\n        bodyWeight: \"\",\r\n        diastolic: \"\",\r\n        encounterDate: \"\",\r\n        facilityId: \"\",\r\n        height: \"\",\r\n        personId: props.patientObj.id,\r\n        serviceTypeId: \"\",\r\n        systolic: \"\",\r\n        pulse:\"\",\r\n        temperature:\"\",\r\n        respiratoryRate:\"\" \r\n      })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckBodyWeight =(e)=>{\r\n    if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckRespiratoryRate =(e)=>{\r\n    if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n    const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n    }\r\n}\r\nconst handleInputValueCheckTemperature =(e)=>{\r\n    if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n    const message =\"Temperature must not be greater than 47 and less than 35\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n    }\r\n}\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = vital.encounterDate ? \"\" : \"This field is required\"\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.whoStagingId = objValues.whoStagingId ? \"\" : \"This field is required\"\r\n    temp.clinicalNote = objValues.clinicalNote ? \"\" : \"This field is required\"\r\n    temp.functionalStatusId = objValues.functionalStatusId ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n    temp.labTestGroupId = vital.diastolic ? \"\" : \"This field is required\"\r\n    temp.systolic = vital.systolic ? \"\" : \"This field is required\"\r\n    temp.height = vital.height ? \"\" : \"This field is required\"\r\n    temp.bodyWeight = vital.bodyWeight ? \"\" : \"This field is required\"\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n\r\n  const  heightFunction =(e)=>{\r\n    if(e==='cm'){\r\n        setHeightValue('cm')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height * 100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n    }else if(e==='m'){\r\n        setHeightValue('m')\r\n        if(vital.height!==\"\"){\r\n            const newHeightValue= (vital.height/100)\r\n            setVitalSignDto ({...vital,  height: newHeightValue});\r\n        }\r\n        \r\n    }\r\n\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    objValues.visitDate = vital.encounterDate\r\n    objValues.adverseDrugReactions = adrList\r\n    objValues.artStatusId = getPatientObj.artCommence.id\r\n    objValues.hivEnrollmentId = getPatientObj.enrollment.id\r\n    objValues.opportunisticInfections = infectionList\r\n    objValues.tbScreen = tbObj\r\n    objValues['vitalSignDto'] = vital\r\n    axios.put(`${baseUrl}hiv/art/clinic-visit/${visitId}`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit updated successful\");\r\n        //GetVisitById(visitId)\r\n        //props.setActiveContent({...props.activeContent, route:'consultation', id:\"\", activeTab:\"history\", actionType:\"view\", obj:{}})\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          toast.error(errorMessage);\r\n        }\r\n        else{\r\n          toast.error(\"Something went wrong. Please try again...\");\r\n        }\r\n       \r\n      });\r\n    }\r\n  }\r\n  //Get visit by ID\r\n  async function GetVisitById(visitID) {\r\n    axios\r\n      .get(`${baseUrl}hiv/art/clinic-visit/${visitID}`,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } }\r\n      )\r\n      .then((response) => {\r\n          const e = response.data\r\n          setVitalSignDto({ ...e.vitalSignDto })\r\n          objValues.clinicalNote = e.clinicalNote\r\n          objValues.functionalStatusId= e.functionalStatusId\r\n          objValues.whoStagingId= e.whoStagingId \r\n          objValues.nextAppointment= e.nextAppointment\r\n          objValues.adherenceLevel = e.adherenceLevel\r\n          setTbObj({...e.tbScreen})\r\n          setAdrList([...e.adverseDrugReactions])\r\n          setInfectionList([...e.opportunisticInfections])\r\n\r\n      })\r\n      .catch((error) => {\r\n      });\r\n  }\r\n  const getVisitDetail=(e)=>{\r\n      setEnableUpdateButton(true)\r\n      setVisitId(e.id)\r\n      GetVisitById(e.id)      \r\n  }\r\n  const EnableUpdateAction =()=>{\r\n\r\n      setEnableUpdate(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-3 col-xxl-3 col-lg-3\" >\r\n                <div className=\"card\" style={{ height: \"500px\" }}>\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> Clinic Visits</h4>\r\n                    </div>\r\n                    <div className=\"card-body\" >\r\n                    <PerfectScrollbar\r\n                        style={{ height: \"370px\" }}\r\n                        id=\"DZ_W_Todo1\"\r\n                        className=\"widget-media dz-scroll ps ps--active-y\"\r\n                    >\r\n                    {clinicVisitList.map((visit,index)=>(\t\r\n                    <div className=\"media pb-3 border-bottom mb-0 align-items-center\" key={index}>\t\t\t\t\t\t\t\t\r\n                      <div className=\"media-body\">\r\n                            <ButtonSMUI\r\n                                color='black'\r\n                                content='Visit Date'\r\n                                icon='calendar alternate'\r\n                                onClick={()=>getVisitDetail(visit)}\r\n                                label={{ basic: true, color: 'grey', pointing: 'left', content: `${visit.visitDate}` }}\r\n                            />\r\n                      </div>\r\n                    </div>\r\n\t\t\t\t\t\t))}\r\n                    </PerfectScrollbar>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-xl-9 col-xxl-9 col-lg-9\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header  border-0 pb-2\" style={{backgroundColor:\"#014D88\"}}>\r\n                    <h4 className=\"card-title\" style={{color:\"#fff\"}}> </h4>\r\n                    {enableUpdateButton && (\r\n                    <ButtonSMUI color='facebook' onClick={()=>EnableUpdateAction()} >\r\n                      <Icon name='edit' /> Edit Visit \r\n                    </ButtonSMUI>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                    <Grid columns='equal'>\r\n                    <Grid.Column >\r\n                    <Segment>\r\n                    <Label as='a' color='black' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}> Visit Date - {vital.encounterDate}</h4>\r\n                        </Label>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Date of Visit *</FormLabelName>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"encounterDate\"\r\n                                id=\"encounterDate\"\r\n                                value={vital.encounterDate}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                            {errors.encounterDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.encounterDate}</span>\r\n                            ) : \"\" }\r\n\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n\r\n                        </div>\r\n                        <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={vital.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={vital.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={vital.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"bodyWeight\"\r\n                                id=\"bodyWeight\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={vital.bodyWeight}\r\n                                onKeyUp={handleInputValueCheckBodyWeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                        ) : \"\"}\r\n                        {errors.bodyWeight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.bodyWeight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height</FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChangeVitalSignDto}\r\n                                value={vital.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                isOpen={dropdownOpen}\r\n                                toggle={toggleDropDown}\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {vital.height!=='' ? (vital.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                        {vital.bodyWeight!==\"\" && vital.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {Math.round(vital.bodyWeight/((vital.height * vital.height)/100))}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                      />\r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChangeVitalSignDto}\r\n                          value={vital.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n                        </div>\r\n                        <Label as='a' color='grey' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>CONSULTATION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n\r\n                        <div className=\" mb-3\">\r\n                        <FormLabelName >Clinical Notes</FormLabelName>\r\n                        <textarea\r\n                            name=\"clinicalNote\"\r\n                            className=\"form-control\"\r\n                            value={objValues.clinicalNote}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                            disabled={!enableUpdate}\r\n                        ></textarea>\r\n                        {errors.clinicalNote !==\"\" ? (\r\n                                <span className={classes.error}>{errors.clinicalNote}</span>\r\n                            ) : \"\" }\r\n                        </div>\r\n                        <div className=\"row\">\r\n\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >WHO Staging *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"whoStagingId\"\r\n                                id=\"whoStagingId\"\r\n                                value={objValues.whoStagingId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {clinicalStage.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.whoStagingId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.whoStagingId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Functional Status *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"functionalStatusId\"\r\n                                id=\"functionalStatusId\"\r\n                                value={objValues.functionalStatusId}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"select\">Select </option>\r\n\r\n                                {functionalStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.functionalStatusId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.functionalStatusId}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <FormLabelName >Level of Adherence *</FormLabelName>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"adherenceLevel\"\r\n                                id=\"adherenceLevel\"\r\n                                value={objValues.adherenceLevel}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n\r\n                                {adherenceLevel.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                                ))}\r\n                            </Input>\r\n                            {errors.adherenceLevel !==\"\" ? (\r\n                                <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n\r\n                        </div>\r\n                        <br />\r\n                        <Label as='a' color='red' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>OPPORTUNISTIC INFECTION</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <OpportunisticInfection setInfection={setInfection} infection={infection} setInfectionList={setInfectionList} infectionList={infectionList} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='pink' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>ADR</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        <ADR setAdrObj={setAdrObj} adrObj={adrObj} setAdrList={setAdrList} adrList={adrList}  enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='teal' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>TB SCREENING</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <TBScreening tbObj={tbObj} setTbObj={setTbObj} enableUpdate={enableUpdate}/>\r\n                        <br />\r\n                        <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n                        <h4 style={{color:'#fff'}}>NEXT CLINICAL APPOINTMENT DATE</h4>\r\n                        </Label>\r\n                        <br /><br />\r\n                        {/* TB Screening Form */}\r\n                        <Input\r\n                                type=\"date\"\r\n                                name=\"nextAppointment\"\r\n                                id=\"nextAppointment\"\r\n                                className=\"col-md-6\"\r\n                                value={objValues.nextAppointment}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                disabled={!enableUpdate}\r\n                                required\r\n                            />\r\n                        {errors.nextAppointment !==\"\" ? (\r\n                                <span className={classes.error}>{errors.nextAppointment}</span>\r\n                            ) : \"\" }\r\n                        <br />\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        disabled={saving}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        hidden={!enableUpdate}\r\n                        >\r\n                        {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                        ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                        )}\r\n                        </MatButton>\r\n                    </Segment>\r\n                    </Grid.Column>\r\n\r\n                </Grid>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>    \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ViewUpdate/ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent.id]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent}/>\r\n                  </Tab>  \r\n                  {/* <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                    */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //console.log(props)\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [prepRegimen, setprepRegimen] = useState([]);\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        reffered:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n        PrepRegimen();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientCommercement(props.activeContent.id)\r\n        }\r\n    }, []);\r\n    const PrepRegimen =()=>{\r\n        axios\r\n        .get(`${baseUrl}prep-regimen`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n      }\r\n    const GetPatientCommercement =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    // const GetPatientPrepEligibility =(id)=>{\r\n    //     axios\r\n    //        .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n    //            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n    //        )\r\n    //        .then((response) => {\r\n    //             //console.log(response.data.find((x)=> x.id===id));\r\n    //            //setObjValues(response.data.find((x)=> x.id===id));\r\n    //        })\r\n    //        .catch((error) => {\r\n    //        //console.log(error);\r\n    //        });          \r\n    // } \r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        bodyWeight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n          \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.reffered = objValues.reffered ? \"\" : \"This field is required\"\r\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        if(e.target.name===\"bodyWeight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, bodyWeight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n          axios.post(`${baseUrl}prep/commencement`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.commenced=true\r\n                  toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                 \r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n            }          \r\n    }\r\n    \r\n\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling </Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started *</Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.datePrepStart}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight</Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI :  {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.sex==='Female'  || props.patientObj.personResponseDto.sex==='female' || props.patientObj.personResponseDto.sex==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}  \r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            \r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            \r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            \r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Referred</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"reffered\"\r\n                            id=\"reffered\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.reffered}\r\n                            \r\n                        >\r\n                        <option value=\"\"> </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        {errors.reffered !==\"\" ? (\r\n                                <span className={classes.error}>{errors.reffered}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        {objValues.reffered==='Yes' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        {prepRegimen.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.composition}\r\n                                </option>\r\n                                ))}\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n    }, []);\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues)\r\n         if(validate()){\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    \r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n        }\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions </Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Interruption </Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"interruptionDate\"\r\n                                id=\"interruptionDate\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.interruptionDate}\r\n                                required\r\n                            />\r\n                            {errors.interruptionDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionDate}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        />\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                    <>\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>)}\r\n                    \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\n// import AddIcon from \"@material-ui/icons/Add\";\r\n// import CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    //let patientAge=\"\"\r\n    const patientID= props.patientObj && props.patientObj.personResponseDto ? props.patientObj.personResponseDto.id : \"\";\r\n    const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    useEffect(() => { \r\n\r\n        CounselingType();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/${id}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                console.log(response.data);\r\n               setObjValues(response.data);\r\n               setRiskAssessment(response.data.personalHivRiskAssessment)\r\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\r\n               setStiScreening(response.data.stiScreening)\r\n               setDrugHistory(response.data.drugUseHistory)\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const handleInputChange = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            hivNegative:\"\",\r\n            hivPositive:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\r\n           temp.sexPartners = objValues.sexPartners ? \"\" : \"This field is required.\"\r\n           \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            setSaving(true);\r\n            if(validate()){\r\n            objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n            axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n            .then(response => {\r\n                setSaving(false);\r\n                props.patientObj.prepEligibilityCount=1\r\n                //props.setPatientObj(response.data)\r\n                toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n            })\r\n            .catch(error => {\r\n                setSaving(false);\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                      toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }else{\r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                    }\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n            });\r\n        }else{\r\n            setSaving(false);\r\n            toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n        }   \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date *</Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientObj.personResponseDto.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartners\"\r\n                                    id=\"sexPartners\"\r\n                                    value={objValues.sexPartners}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartners !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartners}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {props.patientObj.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        {props.patientObj.personResponseDto.sex==='Male' || props.patientObj.personResponseDto.sex==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling *</Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>Do you use any of these drugs/substances ?</h4>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before & When was your last test? {\"<\"}1mth 1-3mths 4-6mths {\">\"}6mths </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n                            <h3>HIV test result at visit</h3>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Negative</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivNegative\"\r\n                                        id=\"hivNegative\"\r\n                                        value={drugHistory.hivNegative}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivNegative !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivNegative}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Positive</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivPositive\"\r\n                                        id=\"hivPositive\"\r\n                                        value={drugHistory.hivPositive}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientObj.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                           \r\n                            <Button content='Save' icon='right arrow' labelPosition='right' style={{backgroundColor:\"#014d88\", color:'#fff'}} onClick={handleSubmit}/>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2'\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    const [entryPoint, setEntryPoint] = useState([]);\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\",\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepRisk, setPrepRisk] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n        PREP_RISK_TYPE();\r\n        EntryPoint();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEnrollment(props.activeContent.id)\r\n        }\r\n        //GetPatientPrepEnrollment\r\n      }, []);\r\n      const EntryPoint =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEntryPoint(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_RISK_TYPE =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            setPrepRisk(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            console.log(response.data)\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientPrepEnrollment =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  props.patientObj.prepEnrollmentCount=1\r\n                  toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n        }\r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    required\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> Select</option>\r\n                                    {prepRisk.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.dateOfLastHivNegativeTest}\r\n                                    \r\n                                >\r\n                                      {entryPoint.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        \r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship *</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    {/* <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    /> */}\r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        maxLength={5}\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'supporterPhone')}}\r\n                                        //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n            <MatButton\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                startIcon={<CancelIcon />}\r\n                onClick={props.toggle}\r\n                \r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n            </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [patientDetail, setPatientDetail] = useState(null)\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObj = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n      PatientObject()\r\n     }, [patientObj]);\r\n     async function PatientObject() {\r\n      axios\r\n          .get(`${baseUrl}prep/persons/${patientObj.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n            setPatientDetail(response.data);\r\n          })\r\n          .catch((error) => {    \r\n          });        \r\n    }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientObj}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>            \r\n            <SubMenu patientObj={patientObj}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientDetail} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientDetail} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObj} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}