{"version":3,"sources":["main/webapp/api.js","main/webapp/jsx/components/Patient/PatientList.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Highcharts/ReceivingArtByAge.js","main/webapp/jsx/components/Visualisation/DashboardAnalytics/SummaryView/Index.js","main/webapp/jsx/components/Home.js","main/webapp/jsx/components/Patient/PatientCard.js","main/webapp/jsx/components/Patient/SubMenu.js","main/webapp/jsx/components/Patient/PatientChart/Bmi.js","main/webapp/jsx/components/Patient/PatientChart/Height.js","main/webapp/jsx/components/Patient/PatientChart/Index.js","main/webapp/jsx/components/History/RecentHistory.js","main/webapp/jsx/components/History/PatientHistory.js","main/webapp/jsx/components/Consultation/Home.js","main/webapp/jsx/components/Consultation/ClinicHistory.js","main/webapp/jsx/components/Consultation/Index.js","main/webapp/jsx/components/PrepServices/PrEPCommencementForm.js","main/webapp/jsx/components/PrepServices/PrEPDiscontinuationsInterruptions.js","main/webapp/jsx/components/PrepServices/PrEPEligibiltyScreeningForm.js","main/webapp/jsx/components/PrepServices/PrEPVisit.js","main/webapp/jsx/components/PrepServices/PrEPRegistrationForm.js","main/webapp/jsx/images/fingerprintimage.png","main/webapp/jsx/components/Patient/Biometric.js","main/webapp/jsx/components/Patient/PatientDetail.js","main/webapp/jsx/components/Patient/RegisterPatient.js","main/webapp/jsx/components/Patient/EnrollPatient.js","main/webapp/jsx/components/Patient/UpdatePatientEnrollment.js","App.js","main/webapp/reportWebVitals.js","main/webapp/context/ThemeDemo.js","main/webapp/context/ThemeContext.js","index.js"],"names":["token","URLSearchParams","window","location","search","get","url","Moment","locale","momentLocalizer","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Patients","useState","setPatientList","setLoading","showPPI","setShowPPI","axios","baseUrl","headers","then","response","data","catch","error","useEffect","patients","handleCheckBox","e","target","checked","icons","title","columns","field","hidden","filtering","query","Promise","resolve","reject","pageSize","page","result","records","map","row","name","firstName","surname","hospital_number","hospitalNumber","clientCode","uniqueId","gender","age","status","Label","color","size","prepStatus","actions","to","pathname","state","patientObj","ButtonGroup","variant","style","backgroundColor","height","width","Button","fontSize","fontWeight","totalCount","totalRecords","options","headerStyle","searchFieldStyle","margingLeft","exportButton","searchFieldAlignment","pageSizeOptions","debounceInterval","components","Toolbar","className","type","id","value","onChange","border","borderRadius","htmlFor","Highcharts","setOptions","colors","getOptions","radialGradient","cx","cy","r","stops","brighten","makeStyles","theme","root","margin","spacing","card","display","flexDirection","alignItems","divStyle","Home","key","setKey","marginTop","marginBottom","Row","Col","xl","Card","Body","Tabs","activeKey","onSelect","k","Tab","eventKey","withStyles","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","icon","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","padding","unit","link","primary","main","textDecoration","classes","patientDetail","setpatientObj","ExpansionPanel","ExpansionPanelSummary","md","root2","personResponseDto","startIcon","textTransform","identifier","find","obj","getHospitalNumber","dateOfBirth","dob","today","Date","dateParts","split","dateObject","birthDate","age_now","getFullYear","m","getMonth","getDate","calculate_age","moment","format","personResponseDtosex","sex","phoneNumber","contactPoint","getPhoneNumber","address","city","houseAddress","line","landMark","getAddress","Typography","Divider","SubMenu","loadPrEPRegistrationForm","setActiveContent","activeContent","route","loadPrEPCommencementForm","loadPrEPEligibiltyScreeningForm","Menu","inverted","Item","onClick","eligibilityCount","prepCount","commencementCount","uv","pv","amt","Example","aspect","dataKey","stroke","fill","strokeWidth","PureComponent","RechartJs","lg","summary","weight","toFixed","RecentHistory","recentActivities","setRecentActivities","setSummary","saving","setSaving","React","open","setOpen","record","setRecord","toggle","activeAccordionHeaderShadow","setActiveAccordionHeaderShadow","Summary","RecentActivities","personId","LoadViewPage","action","path","actionType","Accordion","defaultActiveKey","i","Toggle","as","Text","date","Collapse","activities","activity","index","Dropdown","viewBox","version","fillRule","x","y","class","regimen","nextAppointment","xmlns","strokeLinecap","strokeLinejoin","d","visitCount","encounterDate","Modal","show","centered","backdrop","Header","Title","Footer","delete","toast","success","errorMessage","apierror","message","disabled","PatientnHistory","form","submit","cardBottom","Select","button","input","loading","PatientHistory","isLoading","position","item","viewable","Icon","LoadModal","useStyles","flexGrow","ClinicVisit","errors","setErrors","disabledField","setSisabledField","patientDto","setPatientDto","temp","adherenceLevel","setAdherenceLevel","sti","setSti","setPrepStatus","prepSideEffect","setPrepSideEffect","htsResult","setHtsResult","prepRegimen","setprepRegimen","whyAdherenceLevelPoor","setWhyAdherenceLevelPoor","diastolic","systolic","pulse","temperature","respiratoryRate","vitalClinicalSupport","setVitalClinicalSupport","dateInitialAdherenceCounseling","datePrepGiven","datePrepStart","dateReferre","extra","hepatitis","notedSideEffects","otherTestsDone","pregnant","prepEnrollmentUuid","referred","regimenId","riskReductionServices","stiScreening","syndromicStiScreening","syphilis","urinalysis","urinalysisResult","why","otherDrugs","duration","prepGiven","objValues","setObjValues","urinalysisTest","testDate","setUrinalysisTest","syphilisTest","setSyphilisTest","hepatitisTest","setHepatitisTest","otherTest","setOtherTest","AdherenceLevel","SYNDROMIC_STI_SCREENING","PREP_STATUS","HTS_RESULT","PREP_SIDE_EFFECTS","GetPatientDTOObj","WHY_POOR_FAIR_ADHERENCE","PrepEligibilityObj","PrepRegimen","GetPatientVisit","console","log","handleInputChange","handleInputChangeUrinalysisTest","handleInputChangeOtherTest","handleInputChangeHepatitisTest","handleInputChangeSyphilisTest","handleSubmit","preventDefault","Object","values","every","uuid","put","POSITION","BOTTOM_CENTER","activeTab","subErrors","post","Grid","Column","Segment","ribbon","FormGroup","Input","min","dateEnrolled","max","InputGroup","onKeyUp","InputGroupText","addonType","hivTestResult","code","for","ClinicVisitPage","ClinicHistory","PrEPCommencementForm","prepClientId","prepId","prepEligibilityUuid","drugAllergies","datereferred","setpregnant","PREGANACY_STATUS","GetPatientCommercement","validate","CardBody","bodyWeight","breastFeeding","Spinner","demo","background","default","inline","PrEPEligibiltyScreeningForm","dateInterruption","interruptionType","dateRestartPlacedBackMedication","causeOfDeath","dateClientDied","dateClientReferredOut","facilityReferredTo","interruptionDate","interruptionReason","sourceOfDeathInfo","required","dateSeroconverted","linkToArt","dateLinkToArt","PatientObject","BasicInfo","patientID","counselingType","setCounselingType","drugUseHistory","firstTimeVisit","hivRisk","numChildrenLessThanFive","numWives","personalHivRiskAssessment","sexPartner","sexPartnerRisk","targetGroup","visitDate","CounselingType","GetPatientPrepEligibility","setRiskAssessment","setRiskAssessmentPartner","setStiScreening","setDrugHistory","unprotectedVaginalSexCasual","unprotectedVaginalSexRegular","uprotectedAnalSexWithCasual","uprotectedAnalSexWithRegular","stiHistory","sharedNeedles","moreThan1SexPartner","analSexWithPartner","unprotectedAnalSexWithPartner","haveYouPaidForSex","haveSexWithoutCondom","experienceCondomBreakage","takenPartInSexualOrgy","riskAssessment","handleInputChangeRiskAssessment","riskCount","filter","haveSexWithHIVPositive","haveSexWithPartnerInjectDrug","haveSexWithPartnerWhoHasSexWithMen","haveSexWithPartnerTransgender","sexWithPartnersWithoutCondoms","riskAssessmentPartner","handleInputChangeRiskAssessmentPartner","sexPartRiskCount","vaginalDischarge","lowerAbdominalPains","urethralDischarge","complaintsOfScrotal","complaintsGenitalSore","analDischarge","analItching","analpain","swollenIguinal","genitalScore","handleInputChangeStiScreening","stiCount","useAnyOfTheseDrugs","inject","sniff","smoke","Snort","useDrugSexualPerformance","hivTestedBefore","recommendHivRetest","clinicalSetting","reportHivRisk","hivExposure","hivTestResultAtvisit","lastTest","drugHistory","handleInputChangeDrugHistory","dateHivPositive","dateOfRegistration","moreThanOneSexPartnerLastThreeMonths","Message","warning","length","fever","PrEPVisit","useHistory","entryPointId","facilityName","statusAtRegistrationId","dateConfirmedHiv","sourceOfReferrer","enrollmentSettingId","pregnancyStatusId","dateOfLpm","tbStatusId","targetGroupId","ovc_enrolled","ovcNumber","carePoints","hivStatus","setTransferIn","enrolled","PatientCurrentStatus","PrEPRegistrationForm","entryPoint","setEntryPoint","dateReferred","riskType","supporterName","supporterPhone","supporterRelationshipType","hivTestingPoint","dateOfLastHivNegativeTest","prepRisk","setPrepRisk","relatives","setRelatives","RELATIONSHIP","PREP_RISK_TYPE","EntryPoint","GetPatientPrepEnrollment","ancUniqueArtNo","containerStyle","inputStyle","country","placeholder","maxLength","masks","ng","at","inputName","slice","checkPhoneNumberBasic","fontFamily","marginLeft","lineHeight","checkUrl","Biometrics","history","permissions","biometricDevices","setbiometricDevices","biometricType","patientId","templateType","device","fingerType","setFingerType","setDevices","pageLoading","setPageLoading","showCapture","setshowCapture","setTryAgain","setSuccess","storedBiometrics","setStoredBiometrics","capturedFingered","setCapturedFingered","setSelectedFingers","getPersonBiometrics","bgcolor","green","fingersCodeset","personCapturedFingers","_","uniq","biometricItems","extend","captured","includes","clear_storelist","TemplateType","flex","boxShadow","minHeight","flexWrap","biometric","lastModifiedDate","drop","borderColor","marginRight","xmlnsXlink","alignRight","finger","newStoredBiometrics","updatePatientBiometricStatus","justifyContent","src","fingerprintimage","alt","Badge","iso","Alert","severity","AlertTitle","deviceName","selectedDevice","errorType","errorName","setTimeout","ERROR","biometricsEnrollments","capturedBiometricsList","uniqBy","paddingBottom","List","celled","horizontal","paddingLeft","Content","capturedObj","biometricStatus","setPatientDetail","patientObjLocation","CardContent","Biometric","PrEPDiscontinuationsInterruptions","library","add","faCheckSquare","faCoffee","faEdit","faTrash","UserRegistration","active","contact","deceased","deceasedDateTime","genderId","otherName","maritalStatusId","educationId","employmentStatusId","isDateOfBirthEstimated","altPhonenumber","countryId","stateId","district","sexId","ninNumber","basicInfo","setBasicInfo","phone","email","relationshipId","lastName","middleName","toISOString","substr","replace","contacts","setContacts","disabledAgeBaseOnAge","setDisabledAgeBaseOnAge","ageDisabled","setAgeDisabled","showRelative","setShowRelative","genders","setGenders","maritalStatusOptions","setMaritalStatusOptions","educationOptions","setEducationOptions","occupationOptions","setOccupationOptions","relationshipOptions","setRelationshipOptions","countries","setCountries","states","setStates","provinces","setProvinces","settopLevelUnitCountryOptions","userDetail","user","useLocation","setfemaleStatus","dateReferredForPrep","prepRiskType","personDto","prepSupporter","uniqueClientId","ancUnique","setCarePoints","setSourceReferral","setHivStatus","setEnrollSetting","setTbStatus","setKP","setPregnancyStatus","hospitalNumStatus","setHospitalNumStatus","setHospitalNumStatus2","locationState","loadGenders","loadMaritalStatus","loadEducation","loadOccupation","loadRelationships","loadTopLevelCountry","CareEntryPoint","SourceReferral","HivStatus","EnrollmentSetting","TBStatus","KP","PregnancyStatus","GetCountry","alert","useCallback","handleDateOfBirthChange","handleInputChangeBasic","alphabetOnly","ninNumberValue","checkNINLimit","getHosiptalNumber","hosiptalNumber","getRelationship","relationship","handleInputChangeRelatives","newConatctsInfo","contactInfo","fullName","push","patientForm","landmark","autoClose","hideProgressBar","margingRight","Form","defaultChecked","currentDate","setDate","setMonth","dobNew","Math","abs","maritalStatusOption","occupationOption","educationOption","getCountryId","setStateByCountryId","relative","splice","handleEditRelative","handleDeleteRelative","checkPhoneNumber","validateRelatives","setOvcEnrolled","getSex","identifiers","altphone","maritalStatus","employmentStatus","education","getStateId","patientAge","getSexId","dateOfRegistration1","TOP_RIGHT","maxWidth","patientDTO","femaleStatus","sourceOfReferrerId","householdNumber","referredToOVCPartner","dateReferredToOVCPartner","referredFromOVCPartner","dateReferredFromOVCPartner","careEntryPointOther","sourceReferral","enrollSetting","tbStatus","kP","pregnancyStatus","transferIn","ovcEnrolled","hideTargetGroup","hospitalNumStatus2","enrollment","getCharacters","person","hivEnrollment","floor","random","App","PatientDetail","RegisterPatient","EnrollPatient","UpdatePatientEnrollment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","direction","dezThemeSet","layout","headerBg","navheaderBg","sidebarBg","sidebarStyle","sidebarPosition","headerPosition","containerLayout","ThemeContext","createContext","ThemeContextProvider","label","sideBarStyle","setSideBarStyle","sidebarposition","setSidebarposition","headerposition","setHeaderposition","sidebarLayout","setSidebarLayout","setDirection","primaryColor","setPrimaryColor","navigationHader","setNavigationHader","haderColor","setHaderColor","sidebarColor","setSidebarColor","iconHover","setIconHover","menuToggle","setMenuToggle","setBackground","containerPosition_","setcontainerPosition_","body","document","querySelector","windowWidth","setWindowWidth","windowHeight","setWindowHeight","changePrimaryColor","setAttribute","changeNavigationHader","chnageHaderColor","chnageSidebarColor","changeSideBarPostion","changeDirectionLayout","html","changeSideBarLayout","changeSideBarStyle","changeHeaderPostion","changeBackground","changeContainerPosition","resizeWindow","innerWidth","innerHeight","addEventListener","removeEventListener","Provider","sideBarOption","layoutOption","backgroundOption","headerPositions","containerPosition","directionPosition","sidebarpositions","openMenuToggle","setDemoTheme","setAttr","themeSettings","children","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.8ade70a3.chunk.js","sourcesContent":["export const  token = (new URLSearchParams(window.location.search)).get(\"jwt\")\r\nexport const url = '/api/v1/'\r\n// export const url =  'http://localhost:8383/api/v1/';\r\n// export const  token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6Ikd1ZXN0IEd1ZXN0IiwiZXhwIjoxNjc1ODQ5ODc4fQ.o5tz7EwpGdwVSoL7a1PKg5aa5S9LVfGi3WS6dbDfkY_0bVpB_lp4AmWyx46N9NhTO1Va_UxZZNlkrcnaD-t1RA'","import React, { useEffect, useState } from 'react'\r\nimport axios from \"axios\";\r\nimport MaterialTable, { MTableToolbar }  from 'material-table';\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { MdDashboard } from \"react-icons/md\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport { Label } from 'semantic-ui-react'\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\n\r\n\r\nconst Patients = (props) => {    \r\n    const [patientList, setPatientList] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [showPPI, setShowPPI] = useState(true)\r\n    useEffect(() => {\r\n        patients()\r\n      }, []);\r\n        ///GET LIST OF Patients\r\n        async function patients() {\r\n            setLoading(true)\r\n            axios\r\n                .get(`${baseUrl}prep/persons`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    setLoading(false)\r\n                    setPatientList(response.data);\r\n                   \r\n                })\r\n                .catch((error) => {  \r\n                    setLoading(false)  \r\n                });        \r\n        }\r\n    \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setShowPPI(false)\r\n        }else{\r\n            setShowPPI(true)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <MaterialTable\r\n        icons={tableIcons}\r\n            title=\"Find Patient \"\r\n            columns={[\r\n            // { title: \" ID\", field: \"Id\" },\r\n            {\r\n                title: \"Patient Name\",\r\n                field: \"name\",\r\n                hidden:showPPI\r\n            },\r\n            { title: \"Hospital Number\", field: \"hospital_number\", filtering: false },\r\n            { title: \"PrEP Code\", field: \"clientCode\", filtering: false },\r\n            { title: \"Sex\", field: \"gender\", filtering: false },\r\n            { title: \"Age\", field: \"age\", filtering: false },\r\n            \r\n            //{ title: \"ART Number\", field: \"v_status\", filtering: false },\r\n            { title: \"PrEP Status\", field: \"status\", filtering: false },\r\n            { title: \"Actions\", field: \"actions\", filtering: false }, \r\n            ]}\r\n            //isLoading={loading}\r\n            data={query =>\r\n                new Promise((resolve, reject) =>\r\n                    axios.get(`${baseUrl}prep/persons?pageSize=${query.pageSize}&pageNo=${query.page}&searchValue=${query.search}`, { headers: {\"Authorization\" : `Bearer ${token}`} })\r\n                        .then(response => response)\r\n                        .then(result => {\r\n                            \r\n                            resolve({\r\n                                data: result.data.records.map((row) => ({\r\n                                    name:row.firstName + \" \" + row.surname,\r\n                                    hospital_number: row.hospitalNumber,\r\n                                    clientCode: row.uniqueId,\r\n                                    //phone_number:  row.phone,\r\n                                    gender:row && row.gender ? row.gender : \"\",\r\n                                    age: row.age,\r\n                                    \r\n                                    status: (<Label color=\"blue\" size=\"mini\">{row.prepStatus}</Label>),\r\n                                \r\n                                    actions:\r\n                                        <div>\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: \"/patient-history\",\r\n                                                    state: {patientObj: row}\r\n                                                }}\r\n                                                \r\n                                            >\r\n                                                <ButtonGroup variant=\"contained\" \r\n                                                    aria-label=\"split button\"\r\n                                                    style={{backgroundColor:'rgb(153, 46, 98)', height:'30px',width:'215px'}}\r\n                                                    size=\"large\"\r\n                                                >\r\n                                                <Button\r\n                                                color=\"primary\"\r\n                                                size=\"small\"\r\n                                                aria-label=\"select merge strategy\"\r\n                                                aria-haspopup=\"menu\"\r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <MdDashboard />\r\n                                                </Button>\r\n                                                <Button \r\n                                                style={{backgroundColor:'rgb(153, 46, 98)'}}\r\n                                                >\r\n                                                    <span style={{fontSize:'12px', color:'#fff', fontWeight:'bolder'}}>Patient Dashboard</span>\r\n                                                </Button>\r\n                                                \r\n                                                </ButtonGroup>\r\n                                            </Link> \r\n                                        </div>\r\n                                    })),\r\n                                page: query.page,\r\n                                totalCount: result.data.totalRecords,\r\n                                \r\n                            })\r\n                        })\r\n                        \r\n            )}\r\n            options={{\r\n                headerStyle: {\r\n                    backgroundColor: \"#014d88\",\r\n                    color: \"#fff\",\r\n                },\r\n                searchFieldStyle: {\r\n                    width : '200%',\r\n                    margingLeft: '250px',\r\n                },\r\n                filtering: false,\r\n                exportButton: false,\r\n                searchFieldAlignment: 'left',\r\n                pageSizeOptions:[10,20,100],\r\n                pageSize:10,\r\n                debounceInterval: 400\r\n            }}\r\n            components={{\r\n                Toolbar: props => (\r\n                <div >\r\n                    <div className=\"form-check custom-checkbox  float-left mt-4 ml-3 \">\r\n                        <input\r\n                        type=\"checkbox\"\r\n                        className=\"form-check-input\"                       \r\n                        name=\"showPP!\"\r\n                        id=\"showPP\"\r\n                        value=\"showPP\"\r\n                        checked={showPPI===true? false : true}\r\n                        onChange={handleCheckBox}\r\n                        style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                        />\r\n                        <label\r\n                        className=\"form-check-label\"\r\n                        htmlFor=\"basic_checkbox_1\"\r\n                        >\r\n                        <b style={{color:'#014d88',fontWeight:'bold'}}>SHOW PII</b>\r\n                        </label>\r\n                    </div>\r\n                    <MTableToolbar {...props} />\r\n                </div>\r\n                ),\r\n            }}\r\n    />\r\n        />\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patients;\r\n\r\n\r\n","import Highcharts from 'highcharts';\r\n\r\n// Radialize the colors\r\nHighcharts.setOptions({\r\n    colors: Highcharts.map(Highcharts.getOptions().colors, function (color) {\r\n        return {\r\n            radialGradient: {\r\n                cx: 0.5,\r\n                cy: 0.3,\r\n                r: 0.7\r\n            },\r\n            stops: [\r\n                [0, color],\r\n                [1, Highcharts.color(color).brighten(-0.3).get('rgb')] // darken\r\n            ]\r\n        };\r\n    })\r\n});\r\n\r\nexport const ReceivingArtByAge = {\r\n    chart: {\r\n        \r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie'\r\n    },\r\n    title: {\r\n        text: 'Number of Adults and Children currently receiving ART by Age'\r\n    },\r\n    tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    },\r\n    accessibility: {\r\n        point: {\r\n            valueSuffix: '%'\r\n        }\r\n    },\r\n    plotOptions: {\r\n        pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n                enabled: true,\r\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                connectorColor: 'black'\r\n            },\r\n            showInLegend: true\r\n        }\r\n    },\r\n    series: [{\r\n        name: 'Currently Receiving ART By Age',\r\n        data: [\r\n            { name: '25 + ',  sliced: true, y: 61.41 },\r\n            { name: '20-24 ', y: 11.84 },\r\n            { name: '10-19 ', y: 10.85 },\r\n            { name: '≤ 9 ', y: 4.67 },\r\n           \r\n        ]\r\n    }]\r\n};","import React, { useState } from 'react';\r\n\r\nimport { Col, Form,CardBody,  Row,CardTitle, CardText,\r\n   } from \"reactstrap\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Highcharts from 'highcharts';\r\n import HighchartsReact from 'highcharts-react-official';\r\nimport {NewlyEnrolledArtBySex} from './Highcharts/NewlyEnrolledArtBySex';\r\nimport {NewlyEnrolledArtByAge} from './Highcharts/NewlyEnrolledArtByAge';\r\nimport {ReceivingArtByAge}  from './Highcharts/ReceivingArtByAge';\r\nimport {ReceivingArtBySex} from './Highcharts/ReceivingArtBySex';\r\nimport { Progress } from 'reactstrap';\r\n\r\n\r\n// Load Highcharts modules\r\n//require(\"highcharts/modules/exporting\")(Highcharts);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n        margin: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n},\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst SummaryView = (props) => {\r\n  const classes = useStyles();\r\n  const [chartValue, setChartValue] = useState(\"\");\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen(!dropdownOpen);\r\n  const [state, setState] = useState({ activeItem: 'gamepad' })\r\n\r\n  const handleItemClick = (e, { name }) => setState({ activeItem: name })\r\n  const { activeItem } = state\r\n  const chartPage  = e => {\r\n\r\n    setChartValue(e)\r\n  }\r\n\r\n  //Menu Icon \r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div  spacing={5} style={{ padding: 20 }} >\r\n      <Row>\r\n        <Col md={12}>\r\n          {/* The second Column Card Layout  */}\r\n        <Row>\r\n                 \r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtBySex} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n                  <Col  lg={6} md={6} sm={12} xs={12} className=\"mb-4\">\r\n                  <Card><CardBody>\r\n                    <HighchartsReact highcharts={Highcharts} options={ReceivingArtByAge} />\r\n                  </CardBody></Card>\r\n                  </Col>\r\n              </Row>\r\n\r\n           \r\n        </Col>\r\n      </Row>\r\n\r\n      \r\n\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React, {useState, Fragment } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport Dashboard from './Patient/PatientList'\r\nimport VisualisationHome from './Visualisation/Index'\r\nimport { Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\nimport { FaUserPlus } from \"react-icons/fa\";\r\n//import PageTitle from \"./../layouts/PageTitle\";\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst Home = () => {\r\n    const [key, setKey] = useState('home');\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4>PrEP</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      {/* <Link to={\"register-patient\"}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\" float-end mb-10\"\r\n                startIcon={<FaUserPlus size=\"10\"/>}\r\n                style={{backgroundColor:'#014d88'}}\r\n            >\r\n                <span style={{ textTransform: \"capitalize\" }}>New Patient</span>\r\n            </Button>\r\n        </Link> */}\r\n        <br/><br/>\r\n\r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n                  \r\n                  <Tab eventKey=\"home\" title=\"Find Patients\">                   \r\n                    <Dashboard />\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"visualization\" title=\"Data Visualisation\">                   \r\n                    <VisualisationHome />\r\n                  </Tab>                     */}\r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMui from \"@material-ui/core/Button\";\r\nimport { TiArrowBack } from 'react-icons/ti'\r\n//import Chip from '@material-ui/core/Chip';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Label,} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\nimport Typography from '@material-ui/core/Typography';\r\n// import CaptureBiometric from './CaptureBiometric';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const { classes } = props;\r\n  //const patientObj = props.patientObj ? props.patientObj : {}\r\n  const [patientObj, setpatientObj] = useState(props.patientDetail)\r\n\r\n  useEffect(() => {\r\n    setpatientObj(props.patientDetail);\r\n  }, [props.patientDetail]);\r\n\r\n    const calculate_age = dob => {\r\n      var today = new Date();\r\n      var dateParts = dob.split(\"-\");\r\n      var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n      var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n      var age_now = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n          if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                  age_now--;\r\n              }\r\n          if (age_now === 0) {\r\n                  return m + \" month(s)\";\r\n              }\r\n              return age_now + \" year(s)\";\r\n    };\r\n\r\n    const getHospitalNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');       \r\n      return hospitalNumber ? hospitalNumber.value : '';\r\n    };\r\n    const getPhoneNumber = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const phoneNumber = identifiers.contactPoint.find(obj => obj.type === 'phone');       \r\n      return phoneNumber ? phoneNumber.value : '';\r\n    };\r\n    const getAddress = (identifier) => {     \r\n      const identifiers = identifier;\r\n      const address = identifiers.address.find(obj => obj.city); \r\n      const houseAddress=address && address.line[0]!==null ? address.line[0] :\"\"      \r\n      const landMark=address && address.city && address.city!==null ? address.city :\"\"    \r\n      return address ? houseAddress + \" \" + landMark : '';\r\n    };\r\n\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n       <ExpansionPanel >\r\n                <ExpansionPanelSummary >                \r\n                <Row>                \r\n                    <Col md={12}>\r\n                    {patientObj && patientObj!==null ? (<>\r\n                    <Row className={\"mt-1\"}>\r\n                    <Col md={12} className={classes.root2}>\r\n                    <b style={{fontSize: \"25px\", color:'rgb(153, 46, 98)'}}>\r\n                        {patientObj.personResponseDto.firstName + \" \" + patientObj.personResponseDto.surname }\r\n                        </b>\r\n                        <Link to={\"/\"} >\r\n                        <ButtonMui\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-2 mr-2 mt-2\"\r\n                            //startIcon={<FaUserPlus size=\"10\"/>}\r\n                            startIcon={<TiArrowBack  />}\r\n                            style={{backgroundColor:\"rgb(153, 46, 98)\", color:'#fff', height:'35px'}}\r\n\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\" }}>Back</span>\r\n                        </ButtonMui>\r\n                      </Link>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Patient ID : <b style={{color:'#0B72AA'}}>{getHospitalNumber(patientObj.personResponseDto.identifier) }</b>\r\n                    </span>\r\n                    </Col>\r\n\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        Date Of Birth : <b style={{color:'#0B72AA'}}>{patientObj.personResponseDto.dateOfBirth }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Age : <b style={{color:'#0B72AA'}}>{calculate_age(moment(patientObj.personResponseDto.dateOfBirth).format(\"DD-MM-YYYY\"))}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Gender :{\" \"}\r\n                        <b style={{color:'#0B72AA'}}>{patientObj.personResponseDtosex && patientObj.personResponseDto.sex!==null ?  patientObj.sex : '' }</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Phone Number : <b style={{color:'#0B72AA'}}>{getPhoneNumber(patientObj.personResponseDto.contactPoint)}</b>\r\n                    </span>\r\n                    </Col>\r\n                    <Col md={4} className={classes.root2}>\r\n                    <span>\r\n                        {\" \"}\r\n                        Address : <b style={{color:'#0B72AA'}}>{getAddress(patientObj.personResponseDto.address)} </b>\r\n                    </span>\r\n                    </Col>\r\n                    {patientObj.prepStatus!==null && (\r\n                    <Col md={12}>\r\n                       <div >\r\n                            <Typography variant=\"caption\">\r\n                                <Label color={ \"teal\"} size={\"mini\"}>\r\n                                   STATUS : {patientObj && patientObj.prepStatus}    \r\n                                </Label>\r\n                              \r\n                            </Typography>\r\n                       </div>                 \r\n                    </Col> \r\n                    )}\r\n                    </Row>\r\n                    </>)\r\n                    :(\r\n                      <>\r\n                      <p>Loading please wait..</p>\r\n                      </>\r\n                    )\r\n                  }\r\n                    </Col>\r\n                </Row>\r\n                </ExpansionPanelSummary>\r\n                <Divider />\r\n        </ExpansionPanel>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Popup } from \"semantic-ui-react\";\r\n\r\n\r\n\r\n\r\nfunction SubMenu(props) {\r\n\r\n    const patientObj = props.patientObj \r\n    useEffect(() => {\r\n        //Observation();\r\n    }, [props.patientObj]);\r\n\r\n    const loadPrEPDiscontinuationsInterruptions = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-interruptions'})\r\n    }\r\n    const loadPrEPRegistrationForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration'})\r\n    }\r\n    const loadPrEPCommencementForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement'})\r\n    }\r\n    const loadPrEPEligibiltyScreeningForm = (row) =>{\r\n        props.setActiveContent({...props.activeContent, route:'prep-screening'})\r\n    }\r\n\r\n    const onClickConsultation = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'consultation'})\r\n    }\r\n    const onClickHome = (row) =>{        \r\n        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n    }\r\n    const loadPatientHistory = ()=>{\r\n        props.setActiveContent({...props.activeContent, route:'patient-history'})\r\n    }\r\n\r\n    return (\r\n         <div>\r\n\r\n                <Menu size=\"large\" color={\"black\"} inverted >\r\n                <Menu.Item onClick={() => onClickHome()} >Home\r\n                </Menu.Item>                  \r\n                { patientObj.eligibilityCount<=0 || patientObj.eligibilityCount===null ?\r\n                (<>\r\n                    <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} >PrEP Eligibility Screening</Menu.Item>\r\n                   \r\n                </>)\r\n                :\r\n                (<>\r\n                    {patientObj.prepCount==='0' || patientObj.commencementCount===null ? \r\n                    (<>\r\n                        {patientObj.prepCount==='0'  && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                        {(patientObj.commencementCount===null || patientObj.commencementCount<=0) && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                        \r\n                    </>) \r\n                    : (<>\r\n                       \r\n                        <Menu.Item onClick={() => loadPrEPEligibiltyScreeningForm()} > PrEP Eligibility Screening </Menu.Item>\r\n                        {patientObj.prepCount===null || patientObj.prepCount<0 && (<Menu.Item onClick={() => loadPrEPRegistrationForm()} >PrEP Enrollment</Menu.Item>)}\r\n                        {patientObj.commencementCount===null || patientObj.commencementCount<=0 && (<Menu.Item onClick={() => loadPrEPCommencementForm()} >PrEP Commencement</Menu.Item>)}\r\n                        <Menu.Item onClick={() => onClickConsultation()} > PrEP Visit</Menu.Item>\r\n                        <Menu.Item onClick={() => loadPrEPDiscontinuationsInterruptions()} >PrEP Discontinuations & Interruptions</Menu.Item>\r\n                    </>)\r\n                    }\r\n                    \r\n                </>)}\r\n                <Menu.Item onClick={() => loadPatientHistory(patientObj)} >History</Menu.Item>                    \r\n                </Menu>\r\n                   \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default SubMenu;\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 1000,\r\n    pv: 2400,\r\n    amt: 2400,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 2290,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 2000,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 2500,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { AreaChart, Area, ResponsiveContainer, Tooltip } from \"recharts\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Page A\",\r\n    uv: 0,\r\n    pv: 2400,\r\n    amt: 0,\r\n  },\r\n  {\r\n    name: \"Page B\",\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 0,\r\n  },\r\n  {\r\n    name: \"Page C\",\r\n    uv: 2000,\r\n    pv: 9800,\r\n    amt: 0,\r\n  },\r\n  {\r\n    name: \"Page D\",\r\n    uv: 2780,\r\n    pv: 3908,\r\n    amt: 0,\r\n  },\r\n  {\r\n    name: \"Page E\",\r\n    uv: 1890,\r\n    pv: 4800,\r\n    amt: 2181,\r\n  },\r\n  {\r\n    name: \"Page F\",\r\n    uv: 2390,\r\n    pv: 3800,\r\n    amt: 0,\r\n  },\r\n  {\r\n    name: \"Page G\",\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 0,\r\n  },\r\n];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0}>\r\n        <AreaChart data={data}>\r\n          {/* <Tooltip /> */}\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"uv\"\r\n            stroke=\"#0E8A74\"\r\n            fill=\"#0E8A74\"\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport Bmi from \"./Bmi\";\r\nimport Height from \"./Height\";\r\n//import ViccinationStatus from \"./ViccinationStatus\";\r\n//import LegendEffectOpacity from \"./LegendEffectOpacity\";\r\n\r\nfunction RechartJs(props) {\r\n\r\n  return (\r\n    <>\r\n\r\n      <Row>\r\n        <Col xl={6} lg={6}>\r\n          <Card>            \r\n            <Card.Body>\r\n                <p><b>Weight</b>                    \r\n                    <span className=\"float-end text-success\"></span>\r\n                </p>\r\n                <p><h5>{props.summary.weight}Kg</h5></p>                \r\n              <Bmi />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={6} lg={6}>\r\n          <Card>           \r\n            <Card.Body>\r\n            <p><b>Height</b>                    \r\n                    <span className=\"float-end text-success\"></span>\r\n                </p>\r\n                <p><h5>{props.summary.height}cm</h5></p>\r\n              <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col xl={12} lg={12}>\r\n          <Card>            \r\n            <Card.Body>\r\n            <p><b>BMI</b>                   \r\n                    <span className=\"float-end text-danger\"></span>\r\n                </p>\r\n                <p><h5>{(props.summary.weight/((props.summary.height/100) * (props.summary.height/100))).toFixed(2)} kg/m<sup>2</sup></h5></p>\r\n                <Height />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>        \r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RechartJs;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n// BS\r\nimport { Dropdown,} from \"react-bootstrap\";\r\n/// Scroll\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\n//import { Alert } from \"react-bootstrap\";\r\nimport {  Card,Accordion } from \"react-bootstrap\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\nimport PatientChart from './../Patient/PatientChart/Index'\r\nimport {Button } from 'semantic-ui-react'\r\n\r\nconst RecentHistory = (props) => {\r\n  //console.log(props.patientObj)\r\n  const [recentActivities, setRecentActivities] = useState([])\r\n  const [summary, setSummary] = useState(null)\r\n  const [saving, setSaving] = useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n  const [record, setRecord] = useState(null)\r\n  const toggle = () => setOpen(!open);\r\n  const [\r\n    activeAccordionHeaderShadow,\r\n    setActiveAccordionHeaderShadow,\r\n  ] = useState(0);\r\n\r\n  useEffect(() => {\r\n    Summary()\r\n    RecentActivities();\r\n  }, [props.patientObj.personId]);\r\n\r\n\r\n  const RecentActivities =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep/activities/patients/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setRecentActivities(response.data)\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n  const Summary =()=>{\r\n    axios\r\n       .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?full=true`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n          setSummary(response.data[0])\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });\r\n   \r\n  }\r\n\r\n\r\n  const ActivityName =(name)=> {\r\n      if(name==='HIV Enrollment'){\r\n        return \"HE\"\r\n      }else if(name==='Prep Clinic'){\r\n        return \"PC\"\r\n      }else if(name==='Prep Enrollment'){\r\n        return \"PE\"\r\n      }else if(name==='Prep Eligibility'){\r\n        return \"PE\"\r\n      }else if(name==='ART Commencement'){\r\n        return \"AC\"\r\n      }else {\r\n        return \"RA\"\r\n      }\r\n  }\r\n\r\n  const LoadViewPage =(row,action)=>{\r\n        \r\n    if(row.path==='prep-eligibility'){        \r\n        props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-enrollment'){\r\n        props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-clinic'){//prep-commencement \r\n        props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n    }else if(row.path==='prep-commencement'){\r\n        props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n    }else{\r\n\r\n    }\r\n    \r\n}\r\nconst LoadModal =(row)=>{\r\n  toggle()\r\n  setRecord(row)\r\n}\r\nconst LoadDeletePage =(row)=>{\r\n  \r\n  if(row.path==='prep-eligibility'){ \r\n      setSaving(true)       \r\n      //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });  \r\n  }else if(row.path==='prep-clinic'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-enrollment'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else if(row.path==='prep-enrollment2'){\r\n      setSaving(true)\r\n      //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n      axios\r\n      .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setSaving(false)\r\n          toast.success(\"Record Deleted Successfully\");\r\n          RecentActivities()\r\n          toggle()\r\n      })\r\n      .catch((error) => {\r\n          setSaving(false)\r\n          if(error.response && error.response.data){\r\n              let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n              toast.error(errorMessage);\r\n            }\r\n            else{\r\n              toast.error(\"Something went wrong. Please try again...\");\r\n            }\r\n      });\r\n\r\n  }else{\r\n\r\n  }\r\n  \r\n}\r\n  // const redirectLink=()=>{\r\n  //   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n  // }\r\n  //const index= 1\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <Ext /> */}\r\n     \r\n      <div className=\"row\">\r\n      <div className=\"col-xl-4 col-xxl-4 col-lg-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header  border-0 pb-0\" >\r\n              <h4 className=\"card-title\"> Recent Activities</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <PerfectScrollbar\r\n                style={{ height: \"370px\" }}\r\n                id=\"DZ_W_Todo1\"\r\n                className=\"widget-media dz-scroll ps ps--active-y\"\r\n              >\r\n                <Accordion\r\n                    className=\"accordion accordion-header-bg accordion-header-shadow accordion-rounded \"\r\n                    defaultActiveKey=\"0\"\r\n                  >\r\n                    <>\r\n                    {recentActivities.map((data, i)=>\r\n                    <div className=\"accordion-item\" key={i}>\r\n                      <Accordion.Toggle\r\n                          as={Card.Text}\r\n                          eventKey={`${i}`}\r\n                          className={`accordion-header ${\r\n                            activeAccordionHeaderShadow === 1 ? \"\" : \"collapsed\"\r\n                          } accordion-header-info`}\r\n                          onClick={() =>\r\n                            setActiveAccordionHeaderShadow(\r\n                              activeAccordionHeaderShadow === 1 ? -1 : i\r\n                            )\r\n                          }\r\n                      >\r\n                      <span className=\"accordion-header-icon\"></span>\r\n                      <span className=\"accordion-header-text\">Encounter Date : <span className=\"\">{data.date}</span> </span>\r\n                      <span className=\"accordion-header-indicator\"></span>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse\r\n                      eventKey={`${i}`}\r\n                      className=\"accordion__body\"\r\n                    >\r\n                      <div className=\"accordion-body-text\">\r\n                      <ul className=\"timeline\">\r\n                      {data.activities && data.activities.map((activity,index) => ( \r\n                          \r\n                          <> \r\n                            <li>\r\n                              <div className=\"timeline-panel\">\r\n                              <div className={i % 2 == 0 ? \"media me-2 media-info\" : \"media me-2 media-success\"}>{ActivityName(data.name)}</div>\r\n                              <div className=\"media-body\">\r\n                                <h5 className=\"mb-1\">{activity.name}</h5>\r\n                                <small className=\"d-block\">\r\n                                {activity.date}\r\n                                </small>\r\n                              </div>\r\n                              <Dropdown className=\"dropdown\">\r\n                                <Dropdown.Toggle\r\n                                variant=\" light\"\r\n                                className=\"i-false p-0 btn-info sharp\"\r\n                                >\r\n                                <svg\r\n                                  width=\"18px\"\r\n                                  height=\"18px\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  version=\"1.1\"\r\n                                >\r\n                                  <g\r\n                                  stroke=\"none\"\r\n                                  strokeWidth=\"1\"\r\n                                  fill=\"none\"\r\n                                  fillRule=\"evenodd\"\r\n                                  >\r\n                                  <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                  <circle fill=\"#000000\" cx=\"5\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                  <circle fill=\"#000000\" cx=\"19\" cy=\"12\" r=\"2\" />\r\n                                  </g>\r\n                                </svg>\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu\">\r\n                                <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'view')}\r\n                                  >\r\n                                  View\r\n                                  </Dropdown.Item>\r\n                               \r\n                               <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  onClick={()=>LoadViewPage(activity,'update')}\r\n                                  >\r\n                                  Update\r\n                                  </Dropdown.Item>\r\n                               \r\n                                 <Dropdown.Item\r\n                                  className=\"dropdown-item\"\r\n                                  to=\"/widget-basic\"\r\n                                  onClick={()=>LoadModal(activity)}\r\n                                  >\r\n                                  Delete\r\n                                  </Dropdown.Item>\r\n                                  \r\n                                </Dropdown.Menu>\r\n                              </Dropdown>\r\n                              </div>\r\n                            </li>\r\n                            </>\r\n                       ))}                       \r\n                      </ul>\r\n                      </div>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                )}\r\n                </>\r\n                </Accordion>\r\n                \r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n      </div>\r\n      <div className=\"col-xl-8 col-xxl-8 col-lg-8\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header border-0  pb-2\" style={{backgroundColor:\"#EEEEEE\"}}>\r\n            <h4 className=\"card-title\">Summary </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n                {summary && summary!==null && (<>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"col-xl-12 col-lg-12 col-sm-12\">\r\n                  <div className=\"widget-stat card\">\r\n                    <div className=\"card-body p-4\" style={{backgroundColor:\"#E8F0FD\"}}>\r\n                      <h4 className=\"card-title\">Current Regimen Given</h4>\r\n                      <h3 class=\"text-info \">{summary.regimen}</h3>\r\n                      <div className=\"progress mb-2\">\r\n                        <div\r\n                          className=\"progress-bar progress-animated bg-primary\"\r\n                          style={{ width: \"100%\" }}\r\n                        ></div>\r\n                      </div>\r\n                      <p class=\"text-success \">Next Appointment Date : {summary.nextAppointment}</p>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                  <div className=\"col-sm-12 col-md-12 col-lg-12\">\r\n                    <div className=\"widget-stat card\">\r\n                      <div className=\"card-body p-4\" >\r\n                      <div className=\"media ai-icon\">\r\n                        <span className=\"me-3 bgl-primary text-primary\">\r\n                          <svg\r\n                            id=\"icon-customers\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            className=\"feather feather-user\"\r\n                          >\r\n                            <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n                            <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n                          </svg>\r\n                        </span>\r\n                        <div className=\"media-body\">\r\n                          <p className=\"mb-1\" ><span style={{fontSize:\"14px\"}} >Total Visit :</span> <span className=\"badge badge-primary\">{summary.visitCount}</span></p>\r\n                          <p><span style={{fontSize:\"10px\", fontWeight:\"bolder\"}} >Last Visit Date : </span><span className=\"badge badge-dark\">{summary.encounterDate}</span></p>\r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"card-body\">\r\n                    <PatientChart summary={summary}/>\r\n                </div>\r\n                </div>\r\n                </>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>  \r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default RecentHistory;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n      }, [props.patientObj.id]);\r\n        ///GET LIST OF Patients        \r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep/general-activities/patients/${props.patientObj.personId}`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){        \r\n            props.setActiveContent({...props.activeContent, route:'prep-screening', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-registration', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-clinic'){//prep-commencement \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action})\r\n\r\n        }else if(row.path==='prep-commencement'){\r\n            props.setActiveContent({...props.activeContent, route:'prep-commencement', id:row.id, actionType:action})\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment2'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient History \"\r\n              columns={[\r\n                { title: \"Name\", field: \"name\" },\r\n                {\r\n                  title: \"Encounter Date\",\r\n                  field: \"date\",\r\n                },               \r\n                // { title: \"Status\", field: \"status\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   name: row.name,\r\n                   date: row.date,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                                {row.viewable && ( <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>)}\r\n                                {row.viewable && ( <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>)}\r\n                                <Dropdown.Item  onClick={()=>LoadModal(row, 'delete')}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n        <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>    \r\n    </div>\r\n  );\r\n}\r\n    \r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Grid, Segment, Label, List,Card } from 'semantic-ui-react'\r\n// Page titie\r\nimport { FormGroup, Label as FormLabelName, InputGroup,\r\n          InputGroupText,\r\n          Input,\r\n        } from \"reactstrap\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Accordion, Alert } from \"react-bootstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .card-title\":{\r\n        color:'#fff',\r\n        fontWeight:'bold'\r\n    },\r\n    \"& .form-control\":{\r\n        borderRadius:'0.25rem',\r\n        height:'41px'\r\n    },\r\n    \"& .card-header:first-child\": {\r\n        borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n    },\r\n    \"& .dropdown-toggle::after\": {\r\n        display: \" block !important\"\r\n    },\r\n    \"& select\":{\r\n        \"-webkit-appearance\": \"listbox !important\"\r\n    },\r\n    \"& p\":{\r\n        color:'red'\r\n    },\r\n    \"& label\":{\r\n        fontSize:'14px',\r\n        color:'#014d88',\r\n        fontWeight:'bold'\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none'\r\n  },\r\n  error: {\r\n    color: \"#f85032\",\r\n    fontSize: \"11px\",\r\n  },\r\n  success: {\r\n    color: \"#4BB543 \",\r\n    fontSize: \"11px\",\r\n  },\r\n}))\r\n\r\nconst ClinicVisit = (props) => {\r\n  //let patientObj = props.patientObj ? props.patientObj : {}\r\n  const [errors, setErrors] = useState({});\r\n  const [disabledField, setSisabledField] = useState(false);\r\n  const [patientDto, setPatientDto] = useState();\r\n  let temp = { ...errors }\r\n  const classes = useStyles()\r\n  const [saving, setSaving] = useState(false);\r\n  const [adherenceLevel, setAdherenceLevel] = useState([]);\r\n  const [sti, setSti] = useState([]);\r\n  const [prepStatus, setPrepStatus] = useState([]);\r\n  const [prepSideEffect, setPrepSideEffect] = useState([]);\r\n  const [htsResult, setHtsResult] = useState([]);\r\n  const [prepRegimen, setprepRegimen] = useState([]);\r\n  const [whyAdherenceLevelPoor, setWhyAdherenceLevelPoor] = useState([]);\r\n  //Vital signs clinical decision support \r\n  const [vitalClinicalSupport, setVitalClinicalSupport] = \r\n            useState({\r\n              weight: \"\",\r\n              diastolic: \"\",\r\n              height: \"\",\r\n              systolic: \"\",\r\n              pulse:\"\",\r\n              temperature:\"\",\r\n              respiratoryRate:\"\" \r\n            })\r\n  //console.log(props.patientObj)\r\n  const [objValues, setObjValues] = useState({\r\n    adherenceLevel: \"\",\r\n    dateInitialAdherenceCounseling: \"\",\r\n    datePrepGiven: \"\",\r\n    datePrepStart: \"\",\r\n    dateReferre: \"\",\r\n    diastolic: \"\",\r\n    encounterDate: \"\",\r\n    extra: {},\r\n    height: \"\",\r\n    hepatitis: {},\r\n    nextAppointment: \"\",\r\n    notedSideEffects: \"\",\r\n    otherTestsDone: {},\r\n    personId: props.patientObj.personId,\r\n    pregnant: \"\",\r\n    prepEnrollmentUuid: \"\",\r\n    pulse: \"\",\r\n    referred: \"\",\r\n    regimenId: \"\",\r\n    respiratoryRate: \"\",\r\n    riskReductionServices: \"\",\r\n    stiScreening: \"\",\r\n    syndromicStiScreening: null,\r\n    syphilis: {},\r\n    systolic: \"\",\r\n    temperature: \"\",\r\n    urinalysis: {},\r\n    urinalysisResult: \"\",\r\n    weight: \"\",\r\n    why: \"\",\r\n    otherDrugs:\"\",\r\n    duration:\"\",\r\n    prepGiven:\"\"\r\n  });\r\n  const [urinalysisTest, setUrinalysisTest] = useState({\r\n    urinalysisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n\r\n  const [syphilisTest, setSyphilisTest] = useState({\r\n    syphilisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [hepatitisTest, setHepatitisTest] = useState({\r\n    hepatitisTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n  })\r\n  const [otherTest, setOtherTest] = useState({\r\n    otherTest: \"Yes\",\r\n    testDate: \"\",\r\n    result: \"\",\r\n    name: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    AdherenceLevel();\r\n    SYNDROMIC_STI_SCREENING();\r\n    //PatientDetaild();\r\n    PREP_STATUS();\r\n    HTS_RESULT();\r\n    PREP_SIDE_EFFECTS();\r\n    GetPatientDTOObj();\r\n    WHY_POOR_FAIR_ADHERENCE();\r\n    PrepEligibilityObj();\r\n    PrepRegimen();\r\n    if(props.activeContent && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n      GetPatientVisit(props.activeContent.id)\r\n      setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n    }\r\n  }, [props.activeContent]);\r\n  console.log(props.activeContent)\r\n  const GetPatientVisit =(id)=>{\r\n    axios\r\n       .get(`${baseUrl}prep-clinic/${props.activeContent.id}`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n       )\r\n       .then((response) => {\r\n            //console.log(response.data.find((x)=> x.id===id));\r\n           setObjValues(response.data);\r\n       })\r\n       .catch((error) => {\r\n       //console.log(error);\r\n       });          \r\n}\r\n    const GetPatientDTOObj =()=>{\r\n      axios\r\n        .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPatientDto(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });          \r\n    }\r\n    const PrepEligibilityObj =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          //setPrepStatus(response.data);\r\n          objValues.prepEnrollmentUuid=\"\";\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PrepRegimen =()=>{\r\n      axios\r\n      .get(`${baseUrl}prep-regimen`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setprepRegimen(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_STATUS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n          setPrepStatus(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const PREP_SIDE_EFFECTS =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/PREP_SIDE_EFFECTS`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setPrepSideEffect(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n\r\n    const HTS_RESULT =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/HTS_RESULT`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setHtsResult(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    const WHY_POOR_FAIR_ADHERENCE =()=>{\r\n      axios\r\n      .get(`${baseUrl}application-codesets/v2/WHY_POOR_FAIR_ADHERENCE`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n      )\r\n      .then((response) => {\r\n        setWhyAdherenceLevelPoor(response.data);\r\n      })\r\n      .catch((error) => {\r\n      //console.log(error);\r\n      });    \r\n    }\r\n    ///GET LIST OF FUNCTIONAL%20_STATUS\r\n    // TB STATUS\r\n    const SYNDROMIC_STI_SCREENING = () => {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/SYNDROMIC_STI_SCREENING`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setSti(response.data);\r\n        })\r\n        .catch((error) => {\r\n          //console.log(error);\r\n        });\r\n\r\n    }\r\n    ///Level of Adherence\r\n    async function AdherenceLevel() {\r\n      axios\r\n        .get(`${baseUrl}application-codesets/v2/PrEP_LEVEL_OF_ADHERENCE`,\r\n          { headers: { \"Authorization\": `Bearer ${token}` } }\r\n        )\r\n        .then((response) => {\r\n          setAdherenceLevel(response.data);\r\n\r\n        })\r\n        .catch((error) => {\r\n        });\r\n    }\r\n    const handleInputChange = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setObjValues({ ...objValues, [e.target.name]: e.target.value });\r\n      \r\n    }\r\n    const handleInputChangeUrinalysisTest= e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setUrinalysisTest({ ...urinalysisTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeOtherTest = e => {\r\n      setOtherTest({ ...otherTest, [e.target.name]: e.target.value }); \r\n    }\r\n    const handleInputChangeHepatitisTest = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setHepatitisTest({ ...hepatitisTest, [e.target.name]: e.target.value });\r\n    }\r\n    const handleInputChangeSyphilisTest = e => {\r\n      setErrors({...errors, [e.target.name]: \"\"}) \r\n      setSyphilisTest({ ...syphilisTest, [e.target.name]: e.target.value });\r\n    }\r\n  //Handle CheckBox \r\n  const handleCheckBoxSyphilisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"Yes\" })\r\n    } else {\r\n      setSyphilisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxHepatitisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setHepatitisTest({ ...hepatitisTest, [\"hepatitisTest\"]: \"Yes\" })\r\n    } else {\r\n      setHepatitisTest({ ...syphilisTest, [\"syphilisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxOtherTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]:\"Yes\" })\r\n    } else {\r\n      setOtherTest({ ...otherTest, [\"otherTest\"]: \"No\" })\r\n    }\r\n  }\r\n  const handleCheckBoxUrinalysisTest = e => {\r\n    setErrors({...errors, [e.target.name]: \"\"}) \r\n    if (e.target.checked) {\r\n      setUrinalysisTest({ ...urinalysisTest, [\"urinalysisTest\"]: \"Yes\" })\r\n    } else {\r\n      setUrinalysisTest({ ...otherTest, [\"urinalysisTest\"]: \"No\" })\r\n    }\r\n  }\r\n  //to check the input value for clinical decision \r\n  const handleInputValueCheckHeight =(e)=>{\r\n    if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n      const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckweight =(e)=>{\r\n    if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n      const message =\"Body weight must not be greater than 150 and less than 3\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckSystolic =(e)=>{\r\n    if(e.target.name===\"systolic\" && (e.target.value < 90 || e.target.value>240)){      \r\n      const message =\"Blood Pressure systolic must not be greater than 240 and less than 90\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, systolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckDiastolic =(e)=>{\r\n    if(e.target.name===\"diastolic\" && (e.target.value < 60 || e.target.value>140)){      \r\n      const message =\"Blood Pressure diastolic must not be greater than 140 and less than 60\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:message})\r\n    }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, diastolic:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckPulse =(e)=>{\r\n    if(e.target.name===\"pulse\" && (e.target.value < 40 || e.target.value>120)){      \r\n    const message =\"Pulse must not be greater than 120 and less than 40\"\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:message})\r\n    }else{\r\n    setVitalClinicalSupport({...vitalClinicalSupport, pulse:\"\"})\r\n    }\r\n  }\r\n  const handleInputValueCheckRespiratoryRate =(e)=>{\r\n      if(e.target.name===\"respiratoryRate\" && (e.target.value < 10 || e.target.value>70)){      \r\n      const message =\"Respiratory Rate must not be greater than 70 and less than 10\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, respiratoryRate:\"\"})\r\n      }\r\n  }\r\n  const handleInputValueCheckTemperature =(e)=>{\r\n\r\n      if(e.target.name===\"temperature\" && (e.target.value < 35 || e.target.value>47)){      \r\n      const message =\"Temperature must not be greater than 47 and less than 35\"\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:message})\r\n      }else{\r\n      setVitalClinicalSupport({...vitalClinicalSupport, temperature:\"\"})\r\n      }\r\n  }\r\n  //Validations of the forms\r\n  const validate = () => {        \r\n    temp.encounterDate = objValues.encounterDate ? \"\" : \"This field is required\"\r\n\r\n    temp.nextAppointment = objValues.nextAppointment ? \"\" : \"This field is required\"\r\n    temp.adherenceLevel = objValues.adherenceLevel ? \"\" : \"This field is required\"\r\n\r\n    //temp.systolic = objValues.systolic ? \"\" : \"This field is required\"\r\n    temp.height = objValues.height ? \"\" : \"This field is required\"\r\n    temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n    temp.urinalysisTest = urinalysisTest.urinalysisTest ? \"\" : \"This field is required\"\r\n    temp.testDate = urinalysisTest.testDate ? \"\" : \"This field is required\"\r\n    temp.result = urinalysisTest.result ? \"\" : \"This field is required\"\r\n    temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n    temp.duration = objValues.duration ? \"\" : \"This field is required\"\r\n    temp.datePrepGiven = objValues.datePrepGiven ? \"\" : \"This field is required\"\r\n\r\n    setErrors({\r\n        ...temp\r\n    })\r\n    return Object.values(temp).every(x => x == \"\")\r\n  }\r\n  /**** Submit Button Processing  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(validate()){\r\n    setSaving(true)\r\n    //objValues.visitDate = vital.encounterDate\r\n    objValues.syphilis = syphilisTest\r\n    objValues.hepatitis = hepatitisTest\r\n    objValues.urinalysis = urinalysisTest\r\n    objValues.otherTestsDone = otherTest\r\n    objValues.prepEnrollmentUuid= patientDto.uuid\r\n    if(props.activeContent && props.activeContent.actionType){//Perform operation for updation action\r\n      axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`, objValues,\r\n        { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n      )\r\n        .then(response => {\r\n          //PatientDetaild();\r\n          setSaving(false);\r\n          toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n          props.setActiveContent({...props.activeContent, route:'consultation', activeTab:\"history\", actionType:\"vview\" })\r\n        })\r\n        .catch(error => {\r\n          setSaving(false);\r\n          \r\n          if(error.response && error.response.data){\r\n            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n            if(error.response.data.apierror && error.response.data.apierror.message!==\"\"){\r\n                toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\r\n            }else if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n              toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n            }else{\r\n                toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n\r\n        }else{\r\n            toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n        }\r\n          \r\n        });\r\n\r\n    }else{\r\n      axios.post(`${baseUrl}prep/clinic-visit`, objValues,\r\n      { headers: { \"Authorization\": `Bearer ${token}` } },\r\n\r\n    )\r\n      .then(response => {\r\n        //PatientDetaild();\r\n        setSaving(false);\r\n        toast.success(\"Clinic Visit save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n        props.setActiveContent({...props.activeContent, route:'consultation', activeTab:\"history\", actionType:\"vview\" })\r\n      })\r\n      .catch(error => {\r\n        setSaving(false);\r\n        \r\n        if(error.response && error.response.data){\r\n          let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n          if(error.response.data.apierror && error.response.data.apierror.message!==\"\"){\r\n              toast.error(error.response.data.apierror.message, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n            toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }else{\r\n              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n          }\r\n\r\n      }else{\r\n          toast.error(\"Something went wrong. Please try again...\",  {position: toast.POSITION.BOTTOM_CENTER});\r\n      }\r\n        \r\n      });\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"row\">\r\n\r\n      <div className=\"col-md-6\">\r\n        <h2>Clinic Follow-up Visit</h2>\r\n        </div>      \r\n      </div>\r\n      <Grid >\r\n\r\n        <Grid.Column >\r\n          <Segment>\r\n            <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}>VITAL  SIGNS</h4>\r\n            </Label>\r\n            <br /><br />\r\n            <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date of Visit <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"encounterDate\"\r\n                    id=\"encounterDate\"\r\n                    value={objValues.encounterDate}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    onChange={handleInputChange}\r\n                    //min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientDetail.personResponseDto.dateOfRegistration}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                 {errors.encounterDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.encounterDate}</span>\r\n                  ) : \"\" }\r\n\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"row\">\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Pulse</FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"pulse\"\r\n                                id=\"pulse\"\r\n                                onChange={handleInputChange}\r\n                                min=\"40\"\r\n                                max=\"120\"\r\n                                value={objValues.pulse}\r\n                                onKeyUp={handleInputValueCheckPulse} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.pulse !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.pulse}</span>\r\n                        ) : \"\"}\r\n                        {errors.pulse !==\"\" ? (\r\n                            <span className={classes.error}>{errors.pulse}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Respiratory Rate </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"respiratoryRate\"\r\n                                id=\"respiratoryRate\"\r\n                                onChange={handleInputChange}\r\n                                min=\"10\"\r\n                                max=\"70\"\r\n                                value={objValues.respiratoryRate}\r\n                                onKeyUp={handleInputValueCheckRespiratoryRate} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                bmp\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.respiratoryRate !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.respiratoryRate}</span>\r\n                        ) : \"\"}\r\n                        {errors.respiratoryRate !==\"\" ? (\r\n                            <span className={classes.error}>{errors.respiratoryRate}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\" mb-3 col-md-4\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Temperature </FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"temperature\"\r\n                                id=\"temperature\"\r\n                                onChange={handleInputChange}\r\n                                min=\"35\"\r\n                                max=\"47\"\r\n                                value={objValues.temperature}\r\n                                onKeyUp={handleInputValueCheckTemperature} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                <sup>o</sup>c\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.temperature !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.temperature}</span>\r\n                        ) : \"\"}\r\n                        {errors.temperature !==\"\" ? (\r\n                            <span className={classes.error}>{errors.temperature}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\" mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Body Weight <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                        <InputGroup> \r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                id=\"weight\"\r\n                                onChange={handleInputChange}\r\n                                min=\"3\"\r\n                                max=\"150\"\r\n                                value={objValues.weight}\r\n                                onKeyUp={handleInputValueCheckweight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                kg\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.weight !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.weight}</span>\r\n                        ) : \"\"}\r\n                        {errors.weight !==\"\" ? (\r\n                            <span className={classes.error}>{errors.weight}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>                                   \r\n                    <div className=\"form-group mb-3 col-md-5\">\r\n                        <FormGroup>\r\n                        <FormLabelName >Height <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                        <InputGroup> \r\n                        <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                cm\r\n                        </InputGroupText>\r\n                            <Input \r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                id=\"height\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.height}\r\n                                min=\"48.26\"\r\n                                max=\"216.408\"\r\n                                onKeyUp={handleInputValueCheckHeight} \r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                                <InputGroupText\r\n                                addonType=\"append\"\r\n                                style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                >\r\n                                {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                            </InputGroupText>\r\n                        </InputGroup>\r\n                        {vitalClinicalSupport.height !==\"\" ? (\r\n                            <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                        ) : \"\"}\r\n                        {errors.height !==\"\" ? (\r\n                            <span className={classes.error}>{errors.height}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 mt-2 col-md-2\">\r\n                        {objValues.weight!==\"\" && objValues.height!=='' && (\r\n                            <FormGroup>\r\n                            <Label > {\" \"}</Label>\r\n                            <InputGroup> \r\n                            <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                BMI : {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                            </InputGroupText>                   \r\n                           \r\n                            </InputGroup>                \r\n                            </FormGroup>\r\n                        )}\r\n                    </div>\r\n              </div>\r\n              <div className=\"row\">\r\n              <div className=\"form-group mb-3 col-md-8\">\r\n                  <FormGroup>\r\n                  <FormLabelName >Blood Pressure</FormLabelName>\r\n                  <InputGroup>\r\n                  <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                          systolic(mmHg)\r\n                  </InputGroupText> \r\n                      <Input \r\n                          type=\"number\"\r\n                          name=\"systolic\"\r\n                          id=\"systolic\"\r\n                          min=\"90\"\r\n                          max=\"240\"\r\n                          onChange={handleInputChange}\r\n                          value={objValues.systolic}\r\n                          onKeyUp={handleInputValueCheckSystolic}\r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}} \r\n                          disabled={disabledField}\r\n                      />\r\n                     \r\n                      <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                      diastolic(mmHg)\r\n                      </InputGroupText>\r\n                          <Input \r\n                          type=\"number\"\r\n                          name=\"diastolic\"\r\n                          id=\"diastolic\"\r\n                          min={0}\r\n                          max={140}\r\n                          onChange={handleInputChange}\r\n                          value={objValues.diastolic}\r\n                          onKeyUp={handleInputValueCheckDiastolic} \r\n                          style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                          disabled={disabledField}\r\n                          />\r\n                      \r\n                      \r\n                  </InputGroup>\r\n                  {vitalClinicalSupport.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{vitalClinicalSupport.systolic}</span>\r\n                      ) : \"\"}\r\n                       {errors.systolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.systolic}</span>\r\n                  ) : \"\" }  \r\n                 \r\n                  {vitalClinicalSupport.diastolic !==\"\" ? (\r\n                  <span className={classes.error}>{vitalClinicalSupport.diastolic}</span>\r\n                  ) : \"\"}\r\n                  {errors.diastolic !==\"\" ? (\r\n                      <span className={classes.error}>{errors.diastolic}</span>\r\n                  ) : \"\" }          \r\n                  </FormGroup>\r\n              </div>\r\n\r\n              </div>\r\n            </div>\r\n            <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}></h4>\r\n            </Label>\r\n            <br /><br />\r\n\r\n            <div className=\"row\">             \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >HIV Test Result </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"hivTestResult\"\r\n                    id=\"hivTestResult\"\r\n                    value={objValues.hivTestResult}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {htsResult.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Noted Side Effects </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"notedSideEffects\"\r\n                    id=\"notedSideEffects\"\r\n                    value={objValues.notedSideEffects}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {prepSideEffect.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Regimen at Start of PrEP </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"regimenStartPrep\"\r\n                    id=\"regimenStartPrep\"\r\n                    value={objValues.regimenStartPrep}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"TDF/FTC\">TDF/FTC </option>\r\n                    <option value=\"TDF/3TC\">TDF/3TC </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n               */}\r\n              <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >STI Screening</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"stiScreening\"\r\n                    id=\"stiScreening\"\r\n                    value={objValues.stiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"true\">Yes </option>\r\n                    <option value=\"false\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.stiScreening==='true' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syndromic STI Screening  </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"syndromicStiScreening\"\r\n                    id=\"syndromicStiScreening\"\r\n                    value={objValues.syndromicStiScreening}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    {sti.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Level of Adherence <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"adherenceLevel\"\r\n                    id=\"adherenceLevel\"\r\n                    value={objValues.adherenceLevel}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {adherenceLevel.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  {errors.adherenceLevel !==\"\" ? (\r\n                      <span className={classes.error}>{errors.adherenceLevel}</span>\r\n                  ) : \"\" } \r\n                </FormGroup>\r\n              </div>\r\n              {objValues.adherenceLevel==='PREP_LEVEL_OF_ADHERENCE_(POOR)_≥_7_DOSES' && (\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Why Poor/Fair Adherence </FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"whyAdherenceLevelPoor\"\r\n                    id=\"whyAdherenceLevelPoor\"\r\n                    value={objValues.whyAdherenceLevelPoor}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n\r\n                    {whyAdherenceLevelPoor.map((value) => (\r\n                      <option key={value.id} value={value.code}>\r\n                        {value.display}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> \r\n              )}              \r\n              {/* <div className=\"form-group mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Given</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepGiven\"\r\n                    id=\"prepGiven\"\r\n                    value={objValues.prepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Yes\">Yes </option>\r\n                    <option value=\"No\">No </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */} \r\n              <div className=\"form-group mb-3 col-md-6\">\r\n              <FormGroup>\r\n              <FormLabelName for=\"\">PrEP Regimen <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n              <Input\r\n                  type=\"select\"\r\n                  name=\"regimenId\"\r\n                  id=\"regimenId\"\r\n                  onChange={handleInputChange}\r\n                  value={objValues.regimenId}\r\n                  disabled={disabledField}\r\n              >\r\n              <option value=\"\"> Select</option>\r\n              {prepRegimen.map((value) => (\r\n                      <option key={value.id} value={value.id}>\r\n                        {value.regimen}\r\n                      </option>\r\n                    ))}\r\n              </Input>\r\n              {errors.regimenId !==\"\" ? (\r\n                      <span className={classes.error}>{errors.regimenId}</span>\r\n                  ) : \"\" } \r\n              </FormGroup>\r\n              \r\n              </div> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Duration <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"duration\"\r\n                    id=\"duration\"\r\n                    value={objValues.duration}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                   \r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.duration !==\"\" ? (\r\n                      <span className={classes.error}>{errors.duration}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div>     \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Date PrEP Given <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"datePrepGiven\"\r\n                    id=\"datePrepGiven\"\r\n                    value={objValues.datePrepGiven}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                  {errors.datePrepGiven !==\"\" ? (\r\n                      <span className={classes.error}>{errors.datePrepGiven}</span>\r\n                  ) : \"\" }   \r\n                </FormGroup>\r\n              </div> \r\n            \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Other Drugs</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"otherDrugs\"\r\n                    id=\"otherDrugs\"\r\n                    value={objValues.otherDrugs}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                 />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              {/* <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >PrEP Status</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"prepStatus\"\r\n                    id=\"prepStatus\"\r\n                    value={objValues.prepStatus}\r\n                    onChange={handleInputChange}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select</option>\r\n                    {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div> */}\r\n               \r\n              <br /><br />\r\n              <Label as='a' color='teal'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"urinalysisTest\" value=\"Yes\" onChange={handleCheckBoxUrinalysisTest} checked={urinalysisTest.urinalysisTest=='Yes' ? true : false}/> Urinalysis Test</h4>\r\n              </Label>\r\n              <br /><br />\r\n              {urinalysisTest.urinalysisTest==='Yes' && (<> \r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Date <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={urinalysisTest.testDate}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                   {errors.testDate !==\"\" ? (\r\n                      <span className={classes.error}>{errors.testDate}</span>\r\n                  ) : \"\" } \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Urinalysis Test Result <span style={{ color:\"red\"}}> *</span></FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={urinalysisTest.result}\r\n                    onChange={handleInputChangeUrinalysisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                 >\r\n                  <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                  {errors.result !==\"\" ? (\r\n                      <span className={classes.error}>{errors.result}</span>\r\n                  ) : \"\" }\r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='blue'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"hepatitisTest\" value=\"Yes\" onChange={handleCheckBoxHepatitisTest} checked={hepatitisTest.hepatitisTest==='Yes' ? true : false}/> Hepatitis  Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {hepatitisTest.hepatitisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={hepatitisTest.testDate}\r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                    disabled={disabledField}\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Hepatitis  Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={hepatitisTest.result}\r\n                    \r\n                    onChange={handleInputChangeHepatitisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='red'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"syphilisTest\" value=\"Yes\" onChange={handleCheckBoxSyphilisTest} checked={syphilisTest.syphilisTest==='Yes' ? true : false}/> Syphilis Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {syphilisTest.syphilisTest==='Yes' && (<>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={syphilisTest.testDate}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                    \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-6\">\r\n                <FormGroup>\r\n                  <FormLabelName >Syphilis Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    value={syphilisTest.result}\r\n                    onChange={handleInputChangeSyphilisTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n              <br /><br />\r\n              <Label as='a' color='black'  style={{width:'106%', height:'35px'}} ribbon>\r\n              <h4 style={{color:'#fff'}}><input type=\"checkbox\" name=\"otherTest\" value=\"Yes\" onChange={handleCheckBoxOtherTest} checked={otherTest.otherTest==='Yes' ? true : false}/> Other Test </h4>\r\n              </Label>\r\n              <br /><br />\r\n              {otherTest.otherTest==='Yes' && (<> \r\n                <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Name</FormLabelName>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={otherTest.testDate}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Date</FormLabelName>\r\n                  <Input\r\n                    type=\"date\"\r\n                    name=\"testDate\"\r\n                    id=\"testDate\"\r\n                    value={otherTest.testDate}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                    min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                  />\r\n                   \r\n                </FormGroup>\r\n              </div>\r\n              <div className=\" mb-3 col-md-4\">\r\n                <FormGroup>\r\n                  <FormLabelName > Test  Result</FormLabelName>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"reult\"\r\n                    id=\"result\"\r\n                    value={otherTest.prepGiven}\r\n                    onChange={handleInputChangeOtherTest}\r\n                    style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                    disabled={disabledField}\r\n                  >\r\n                    <option value=\"\">Select </option>\r\n                    <option value=\"Positive\">Positive </option>\r\n                    <option value=\"Negative\">Negative </option>\r\n                  </Input>\r\n                 \r\n                </FormGroup>\r\n              </div>\r\n              </>)}\r\n            \r\n            <br />\r\n            <Label as='a' color='blue' style={{width:'106%', height:'35px'}} ribbon>\r\n            <h4 style={{color:'#fff'}}>NEXT APPOINTMENT DATE </h4>\r\n            </Label>\r\n            <br /><br /><br />\r\n            <div className=\" mb-3 col-md-12\">\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"nextAppointment\"\r\n                  id=\"nextAppointment\"\r\n                  className=\"col-md-6\"\r\n                  value={objValues.nextAppointment}\r\n                  onChange={handleInputChange}\r\n                  style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                  min={objValues.encounterDate}\r\n                  disabled={disabledField}\r\n                />\r\n                {errors.nextAppointment !==\"\" ? (\r\n                        <span className={classes.error}>{errors.nextAppointment}</span>\r\n                    ) : \"\" }\r\n              </div>\r\n           </div>\r\n            <br />\r\n            {props.activeContent && props.activeContent.actionType? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n      {/* <AddVitals toggle={AddVitalToggle} showModal={addVitalModal} /> */}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClinicVisit;\r\n","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { url as baseUrl } from \"./../../../api\";\r\nimport { token as token } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { toast} from \"react-toastify\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import { useHistory } from \"react-router-dom\";\r\n//import {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport { Dropdown,Button, Menu, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst PatientnHistory = (props) => {\r\n    const [recentActivities, setRecentActivities] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [saving, setSaving] = useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [record, setRecord] = useState(null)\r\n     const toggle = () => setOpen(!open);\r\n    useEffect(() => {\r\n        PatientHistory()\r\n        if(props.activeContent.actionType===\"view\"){\r\n            PatientHistory()\r\n        }\r\n      }, [props.patientObj.id, props.activeContent.actionType]);\r\n\r\n        ///GET LIST OF Patients\r\n        const PatientHistory =()=>{\r\n            setLoading(true)\r\n            axios\r\n               .get(`${baseUrl}prep-clinic/person/${props.patientObj.personId}?isCommenced=false&last=false`,\r\n                   { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n               )\r\n               .then((response) => {\r\n                setLoading(false)                       \r\n                    setRecentActivities(response.data)\r\n                })\r\n\r\n               .catch((error) => {\r\n               //console.log(error);\r\n               });\r\n           \r\n          }\r\n    \r\n    const LoadViewPage =(row,action)=>{\r\n               \r\n            props.setActiveContent({...props.activeContent, route:'consultation', id:row.id, actionType:action, activeTab:'home'})     \r\n    }\r\n    const LoadModal =(row)=>{\r\n        toggle()\r\n        setRecord(row)\r\n    }\r\n    const LoadDeletePage =(row)=>{\r\n        \r\n        if(row.path==='prep-eligibility'){ \r\n            setSaving(true)       \r\n            //props.setActiveContent({...props.activeContent, route:'mental-health-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-eligibility/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });  \r\n        }else if(row.path==='prep-clinic'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-clinic/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else if(row.path==='prep-enrollment2'){\r\n            setSaving(true)\r\n            //props.setActiveContent({...props.activeContent, route:'art-commencement-view', id:row.id})\r\n            axios\r\n            .delete(`${baseUrl}prep-enrollment/${row.id}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSaving(false)\r\n                toast.success(\"Record Deleted Successfully\");\r\n                PatientHistory()\r\n                toggle()\r\n            })\r\n            .catch((error) => {\r\n                setSaving(false)\r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage);\r\n                  }\r\n                  else{\r\n                    toast.error(\"Something went wrong. Please try again...\");\r\n                  }\r\n            });\r\n\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n    <br/>\r\n       \r\n            <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"Patient Clinic Visit History \"\r\n              columns={[\r\n                { title: \"Visit Date\", field: \"date\" },\r\n                {\r\n                  title: \"Regimen Given\",\r\n                  field: \"regimen\",\r\n                },               \r\n                { title: \"Next Appointment\", field: \"nextAppointment\", filtering: false },        \r\n                { title: \"Actions\", field: \"actions\", filtering: false }, \r\n              ]}\r\n              isLoading={loading}\r\n              data={recentActivities && recentActivities.map((row) => ({\r\n                   date: row.encounterDate,\r\n                   regimen: row.regimen,\r\n                   nextAppointment: row.nextAppointment,\r\n                   actions:\r\n            \r\n                    <div>\r\n                        <Menu.Menu position='right'  >\r\n                        <Menu.Item >\r\n                            <Button style={{backgroundColor:'rgb(153,46,98)'}} primary>\r\n                            <Dropdown item text='Action'>\r\n\r\n                            <Dropdown.Menu style={{ marginTop:\"10px\", }}>\r\n                               <Dropdown.Item onClick={()=>LoadViewPage(row, 'view')}> <Icon name='eye' />View  </Dropdown.Item>\r\n                                <Dropdown.Item  onClick={()=>LoadViewPage(row, 'update')}><Icon name='edit' />Edit</Dropdown.Item>\r\n                               <Dropdown.Item  onClick={()=>LoadModal(row)}> <Icon name='trash' /> Delete</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                            </Button>\r\n                        </Menu.Item>\r\n                        </Menu.Menu>\r\n                  </div>\r\n                  \r\n                  }))}\r\n            \r\n                        options={{\r\n                          headerStyle: {\r\n                              backgroundColor: \"#014d88\",\r\n                              color: \"#fff\",\r\n                          },\r\n                          searchFieldStyle: {\r\n                              width : '200%',\r\n                              margingLeft: '250px',\r\n                          },\r\n                          filtering: false,\r\n                          exportButton: false,\r\n                          searchFieldAlignment: 'left',\r\n                          pageSizeOptions:[10,20,100],\r\n                          pageSize:10,\r\n                          debounceInterval: 400\r\n                      }}\r\n            />\r\n    <Modal show={open} toggle={toggle} className=\"fade\" size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered backdrop=\"static\">\r\n            <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Notification!\r\n        </Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <h4>Are you Sure you want to delete <b>{record && record.name}</b></h4>\r\n                \r\n            </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={()=>LoadDeletePage(record)}  style={{backgroundColor:\"red\", color:\"#fff\"}} disabled={saving}>{saving===false ? \"Yes\": \"Deleting...\"}</Button>\r\n            <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}} disabled={saving}>No</Button>\r\n            \r\n        </Modal.Footer>\r\n        </Modal>     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientnHistory;\r\n\r\n\r\n","import React, {useState, Fragment, useEffect } from \"react\";\r\nimport { Row, Col, Card,  Tab, Tabs, } from \"react-bootstrap\";\r\nimport ConsultationPage from './Home';\r\nimport ClinicHistoryPage from \"./ClinicHistory\";\r\n\r\nconst divStyle = {\r\n  borderRadius: \"2px\",\r\n  fontSize: 14,\r\n};\r\n\r\nconst ClinicVisitPage = (props) => {\r\n    const [key, setKey] = useState('home');\r\n    const patientObj = props.patientObj\r\n    \r\n    useEffect ( () => {\r\n      setKey(props.activeContent.activeTab)\r\n    }, [props.activeContent]);\r\n\r\n\r\n  return (\r\n    <Fragment>  \r\n      <Row>       \r\n        <Col xl={12}>\r\n          <Card style={divStyle}>            \r\n            <Card.Body>\r\n              {/* <!-- Nav tabs --> */}\r\n              <div className=\"custom-tab-1\">\r\n                <Tabs\r\n                    id=\"controlled-tab-example\"\r\n                    activeKey={key}\r\n                    onSelect={(k) => setKey(k)}\r\n                    className=\"mb-3\"\r\n                >\r\n\r\n                  <Tab eventKey=\"home\" title=\"CLINIC VISIT \">                   \r\n                    <ConsultationPage patientObj={patientObj} setActiveContent={props.setActiveContent} activeContent={props.activeContent}/>\r\n                  </Tab>  \r\n                  <Tab eventKey=\"history\" title=\" HISTORY\">                   \r\n                    <ClinicHistoryPage patientObj={patientObj} activeContent={props.activeContent} setActiveContent={props.setActiveContent} />\r\n                  </Tab>                   \r\n                </Tabs>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicVisitPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card,CardBody, FormGroup, Label, Input,InputGroup,\r\n    InputGroupText,} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPCommencementForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    const classes = useStyles()\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const [prepRegimen, setprepRegimen] = useState([]);\r\n    const [objValues, setObjValues] = useState({\r\n        dateInitialAdherenceCounseling: \"\",\r\n        datePrepStart: \"\",\r\n        height: \"\",\r\n        personId: patientObj.personId,\r\n        prepClientId: props.prepId,\r\n        regimenId: \"\",\r\n        urinalysisResult: \"\",\r\n        prepEligibilityUuid:\"\",\r\n        weight:\"\",\r\n        drugAllergies:\"\",\r\n        referred:\"\",\r\n        datereferred:\"\",\r\n        extra: {},\r\n        nextAppointment: \"\",\r\n        pregnant: true,\r\n        prepEnrollmentUuid: \"\",\r\n        duration:\"\"\r\n\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [pregnant, setpregnant] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n\r\n    useEffect(() => {         \r\n        PREGANACY_STATUS();\r\n        GetPatientDTOObj();\r\n        PrepRegimen();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientCommercement(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n    }, []);\r\n    const PrepRegimen =()=>{\r\n        axios\r\n        .get(`${baseUrl}prep-regimen`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n          setprepRegimen(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n      }\r\n    const GetPatientCommercement =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/commencement/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREGANACY_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setpregnant(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n            //Vital signs clinical decision support \r\n    const [vitalClinicalSupport, setVitalClinicalSupport] = useState({\r\n        weight: \"\",\r\n        height: \"\",\r\n    })\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})  \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }    \r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateInitialAdherenceCounseling = objValues.dateInitialAdherenceCounseling ? \"\" : \"This field is required\"\r\n        temp.datePrepStart = objValues.datePrepStart ? \"\" : \"This field is required\"\r\n        temp.regimenId = objValues.regimenId ? \"\" : \"This field is required\"\r\n        temp.height = objValues.height ? \"\" : \"This field is required\"\r\n        temp.weight = objValues.weight ? \"\" : \"This field is required\"\r\n        temp.referred = objValues.referred ? \"\" : \"This field is required\"\r\n        //temp.datereferred = objValues.datereferred ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //to check the input value for clinical decision \r\n    const handleInputValueCheckHeight =(e)=>{\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name===\"height\" && (e.target.value < 48.26 || e.target.value>216.408)){\r\n        const message =\"Height cannot be greater than 216.408 and less than 48.26\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, height:\"\"})\r\n        }\r\n    }\r\n    const handleInputValueCheckBodyWeight =(e)=>{\r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        if(e.target.name===\"weight\" && (e.target.value < 3 || e.target.value>150)){      \r\n        const message =\"Body weight must not be greater than 150 and less than 3\"\r\n        setVitalClinicalSupport({...vitalClinicalSupport, weight:message})\r\n        }else{\r\n        setVitalClinicalSupport({...vitalClinicalSupport, weight:\"\"})\r\n        }\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()){\r\n           setSaving(true);\r\n           objValues.prepEnrollmentUuid=patientDto.uuid \r\n           if(props.activeContent && props.activeContent.actionType){//Perform operation for updation action\r\n            axios.put(`${baseUrl}prep-clinic/${props.activeContent.id}`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n             ).then(response => {\r\n                   setSaving(false);\r\n                   patientObj.commencementCount=1\r\n                   toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                  \r\n               })\r\n               .catch(error => {\r\n                   setSaving(false);\r\n                   if(error.response && error.response.data){\r\n                     let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                     if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                       toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                     }else{\r\n                       toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                     }\r\n                 }else{\r\n                     toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                 }\r\n               });\r\n            }else{\r\n            axios.post(`${baseUrl}prep/commencement`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},          \r\n             ).then(response => {\r\n                   setSaving(false);\r\n                   patientObj.commencementCount=1\r\n                   toast.success(\"Record save successful\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                   props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                  \r\n               })\r\n               .catch(error => {\r\n                   setSaving(false);\r\n                   if(error.response && error.response.data){\r\n                     let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                     if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                       toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                     }else{\r\n                       toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                     }\r\n                 }else{\r\n                     toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                 }\r\n               });\r\n           }\r\n           \r\n            }          \r\n    }\r\n    \r\n\r\n\r\n  return (      \r\n        <div >      \r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2> PrEP Commencement </h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Initial Adherence Counseling <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"dateInitialAdherenceCounseling\"\r\n                                id=\"dateInitialAdherenceCounseling\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.dateInitialAdherenceCounseling}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                            {errors.dateInitialAdherenceCounseling !==\"\" ? (\r\n                                <span className={classes.error}>{errors.dateInitialAdherenceCounseling}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP started <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"date\"\r\n                                name=\"datePrepStart\"\r\n                                id=\"datePrepStart\"\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                value={objValues.datePrepStart}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                             {errors.datePrepStart !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datePrepStart}</span>\r\n                            ) : \"\" }   \r\n                            </FormGroup>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\" mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Body Weight <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <InputGroup> \r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"weight\"\r\n                                    id=\"weight\"\r\n                                    onChange={handleInputChange}\r\n                                    min=\"3\"\r\n                                    max=\"150\"\r\n                                    value={objValues.weight}\r\n                                    onKeyUp={handleInputValueCheckBodyWeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    kg\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.bodyWeight !==\"\" ? (\r\n                                    <span className={classes.error}>{vitalClinicalSupport.bodyWeight}</span>\r\n                            ) : \"\"}\r\n                            {errors.weight !==\"\" ? (\r\n                                <span className={classes.error}>{errors.weight}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>                                   \r\n                        <div className=\"form-group mb-3 col-md-4\">\r\n                            <FormGroup>\r\n                            <Label >Height <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <InputGroup> \r\n                            <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    cm\r\n                            </InputGroupText>\r\n                                <Input \r\n                                    type=\"number\"\r\n                                    name=\"height\"\r\n                                    id=\"height\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.height}\r\n                                    min=\"48.26\"\r\n                                    max=\"216.408\"\r\n                                    disabled={disabledField}\r\n                                    onKeyUp={handleInputValueCheckHeight} \r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0rem\"}}\r\n                                />\r\n                                    <InputGroupText\r\n                                    addonType=\"append\"\r\n                                    \r\n                                    style={{ backgroundColor:\"#992E62\", color:\"#fff\", border: \"1px solid #992E62\", borderRadius:\"0rem\"}}\r\n                                    >\r\n                                    {objValues.height!=='' ? (objValues.height/100).toFixed(2) + \"m\" : \"m\"}\r\n                                </InputGroupText>\r\n                            </InputGroup>\r\n                            {vitalClinicalSupport.height !==\"\" ? (\r\n                                <span className={classes.error}>{vitalClinicalSupport.height}</span>\r\n                            ) : \"\"}\r\n                            {errors.height !==\"\" ? (\r\n                                <span className={classes.error}>{errors.height}</span>\r\n                            ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 mt-2 col-md-4\">\r\n                            {objValues.weight!==\"\" && objValues.height!==''&&(\r\n                                <FormGroup>\r\n                                <Label > {\" \"}</Label>\r\n                                <InputGroup> \r\n                                <InputGroupText addonType=\"append\" style={{ backgroundColor:\"#014D88\", color:\"#fff\", border: \"1px solid #014D88\", borderRadius:\"0rem\"}}>\r\n                                    BMI :  {(objValues.weight/((objValues.height/100) * (objValues.height/100))).toFixed(2)}\r\n                                </InputGroupText>                   \r\n                            \r\n                                </InputGroup>                \r\n                                </FormGroup>\r\n                            )}\r\n                        </div>\r\n                        {props.patientObj.gender==='Female'  || props.patientObj.gender==='female' || props.patientObj.gender==='FEMALE' && (       \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Pregnancy Status</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"pregnant\"\r\n                            id=\"pregnant\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.pregnant}  \r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"1\"> </option>\r\n                        {pregnant.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        \r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        {objValues.pregnant==='PREGANACY_STATUS_BREASTFEEDING' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Breast Feeding</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"breastFeeding\"\r\n                            id=\"breastFeeding\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.breastFeeding}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"Yes\"> Yes</option>\r\n                        <option value=\"No\"> No</option>\r\n                        </Input>\r\n                        \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">History of drug Allergies</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            name=\"drugAllergies\"\r\n                            id=\"drugAllergies\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.drugAllergies}\r\n                            disabled={disabledField}\r\n                        />\r\n                      \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Urinalysis Result</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"urinalysisResult\"\r\n                            id=\"urinalysisResult\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.urinalysisResult}\r\n                            disabled={disabledField}\r\n                        />\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Referred <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"referred\"\r\n                            id=\"referred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.referred}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\">Select </option>\r\n                        <option value=\"true\"> Yes</option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.referred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.referred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        {objValues.referred==='true' && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">Date referred</Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"datereferred\"\r\n                            id=\"datereferred\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.datereferred}\r\n                            min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            disabled={disabledField}\r\n                        />\r\n                        {errors.datereferred !==\"\" ? (\r\n                                <span className={classes.error}>{errors.datereferred}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"\">PrEP Regimen <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"regimenId\"\r\n                            id=\"regimenId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.regimenId}\r\n                            disabled={disabledField}\r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        {prepRegimen.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.regimen}\r\n                                </option>\r\n                                ))}\r\n            \r\n                        </Input>\r\n                        {errors.regimenId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.regimenId}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Date PrEP Given</Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"datePrepGiven\"\r\n                                id=\"datePrepGiven\"\r\n                                value={objValues.datePrepGiven}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                min={patientDto && patientDto.dateEnrolled ?patientDto.dateEnrolled :\"\"}\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                disabled={disabledField}\r\n                            />\r\n                                \r\n                            </FormGroup>\r\n                        </div> \r\n                        <div className=\" mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Duration</Label>\r\n                            <Input\r\n                                type=\"number\"\r\n                                name=\"duration\"\r\n                                id=\"duration\"\r\n                                value={objValues.duration}\r\n                                onChange={handleInputChange}\r\n                                style={{border: \"1px solid #014D88\", borderRadius:\"0.25rem\"}}\r\n                                disabled={disabledField}\r\n                            />\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    {props.activeContent && props.activeContent.actionType? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPCommencementForm;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        //maxWidth: 752,\r\n        //flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n    \r\n}));\r\n\r\nconst PrEPEligibiltyScreeningForm = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateInterruption: \"\",\r\n        why: \"\",\r\n        interruptionType: \"\",\r\n        dateRestartPlacedBackMedication: \"\",\r\n        personId: patientObj.personId,\r\n        causeOfDeath: \"\",\r\n        dateClientDied: \"\",\r\n        dateClientReferredOut: \"\",\r\n        facilityReferredTo: \"\",\r\n        interruptionDate: \"\",\r\n        interruptionReason: \"\",\r\n        sourceOfDeathInfo: \"\"\r\n      });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepStatus, setPrepStatus] = useState([]);\r\n\r\n    useEffect(() => {         \r\n        PREP_STATUS();\r\n    }, []);\r\n    const PREP_STATUS =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREP_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setPrepStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.interruptionDate = objValues.interruptionDate ? \"\" : \"This field is required\"\r\n        temp.interruptionType = objValues.interruptionType ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n         //console.log(objValues)\r\n         if(validate()){\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}prep/interruption`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          ).then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.PatientObject();\r\n                  props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    \r\n                      toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n\r\n                }else{\r\n                    toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                }\r\n              });\r\n        }\r\n          \r\n    }\r\n\r\n  return (      \r\n      <div>                   \r\n        <Card className={classes.root}>\r\n            <CardBody>\r\n            <form >\r\n                <div className=\"row\">\r\n                    <h2> PrEP Discontinuations & Interruptions</h2>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">PrEP Interruptions <span style={{ color:\"red\"}}> *</span></Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"interruptionType\"\r\n                            id=\"interruptionType\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.interruptionType}\r\n                            required\r\n                        >\r\n                         <option value=\"\">Select</option>\r\n\r\n                        {prepStatus.map((value) => (\r\n                            <option key={value.id} value={value.code}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        </Input>\r\n                        {errors.interruptionType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionType}</span>\r\n                            ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    {(objValues.interruptionType==='PREP_STATUS_ADVERSE_DRUG_REACTION' || objValues.interruptionType==='PREP_STATUS_STOPPED' || objValues.interruptionType==='PREP_STATUS_LOSS_TO_FOLLOW_UP' ) && (\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Date of Interruption <span style={{ color:\"red\"}}> *</span></Label>\r\n                            <Input\r\n                                type=\"date\"\r\n                                name=\"interruptionDate\"\r\n                                id=\"interruptionDate\"\r\n                                max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                onChange={handleInputChange}\r\n                                value={objValues.interruptionDate}\r\n                                required\r\n                            />\r\n                            {errors.interruptionDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.interruptionDate}</span>\r\n                            ) : \"\" } \r\n                            </FormGroup>\r\n                        </div>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_TRANSFER_OUT' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client referred out </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientReferredOut\"\r\n                            id=\"dateClientReferredOut\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientReferredOut}\r\n                            required\r\n                        />\r\n                        {errors.dateClientReferredOut !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientReferredOut}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Facility referred to </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"facilityReferredTo\"\r\n                            id=\"facilityReferredTo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.facilityReferredTo}\r\n                            required\r\n                        />\r\n                        {errors.facilityReferredTo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.facilityReferredTo}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {objValues.interruptionType==='PREP_STATUS_DEAD' && (\r\n                    <>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date of client died </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateClientDied\"\r\n                            id=\"dateClientDied\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateClientDied}\r\n                            required\r\n                        />\r\n                        {errors.dateClientDied !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateClientDied}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Cause of death</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"causeOfDeath\"\r\n                            id=\"causeOfDeath\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.causeOfDeath}\r\n                            required\r\n                        />\r\n                        {errors.causeOfDeath !==\"\" ? (\r\n                            <span className={classes.error}>{errors.causeOfDeath}</span>\r\n                        ) : \"\" } \r\n                        </FormGroup>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Source of death information  </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"sourceOfDeathInfo\"\r\n                            id=\"sourceOfDeathInfo\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.sourceOfDeathInfo}\r\n                            required\r\n                        />\r\n                        {errors.sourceOfDeathInfo !==\"\" ? (\r\n                            <span className={classes.error}>{errors.sourceOfDeathInfo}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                    {/* <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"eligibilityScreeningOccupation\">Why ? </Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name=\"why\"\r\n                            id=\"why\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.why}\r\n                            required\r\n                        />\r\n                        \r\n                        </FormGroup>\r\n                    </div> */}\r\n                     {objValues.interruptionType==='PREP_STATUS_RESTART' && (\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date of restart if placed back on medication</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateRestartPlacedBackMedication\"\r\n                            id=\"dateRestartPlacedBackMedication\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateRestartPlacedBackMedication}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateRestartPlacedBackMedication !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateRestartPlacedBackMedication}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                     )}\r\n                     {objValues.interruptionType==='PREP_STATUS_SEROCONVERTED' && (\r\n                    <>\r\n                     <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"uniqueId\">Date Seroconverted </Label>\r\n                        <Input\r\n                            type=\"date\"\r\n                            name=\"dateSeroconverted\"\r\n                            id=\"dateSeroconverted\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            onChange={handleInputChange}\r\n                            value={objValues.dateSeroconverted}\r\n                            required\r\n                        />\r\n                        {errors.dateSeroconverted !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateSeroconverted}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Link to ART</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"linkToArt\"\r\n                            id=\"linkToArt\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.linkToArt}  \r\n                        >\r\n                        <option value=\"\"> Select</option>\r\n                        <option value=\"true\">Yes </option>\r\n                        <option value=\"false\"> No</option>\r\n                        </Input>\r\n                        {errors.linkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.linkToArt}</span>\r\n                        ) : \"\" }\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Date link to ART</Label>\r\n                        <Input\r\n                            className=\"form-control\"\r\n                            type=\"date\"\r\n                            name=\"dateLinkToArt\"\r\n                            id=\"dateLinkToArt\"\r\n                            //min=\"1983-12-31\"\r\n                            max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                            value={objValues.dateLinkToArt}\r\n                            onChange={handleInputChange}\r\n                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                        />\r\n                        {errors.dateLinkToArt !==\"\" ? (\r\n                            <span className={classes.error}>{errors.dateLinkToArt}</span>\r\n                        ) : \"\" }    \r\n                        </FormGroup>\r\n                    </div>\r\n                    </>)}\r\n                    \r\n                </div>\r\n\r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n            \r\n                <MatButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<SaveIcon />}\r\n                    onClick={handleSubmit}\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                    >\r\n                    {!saving ? (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                    ) : (\r\n                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                    )}\r\n                </MatButton>\r\n            \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    style={{backgroundColor:'#992E62'}}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                </MatButton>\r\n            \r\n                </form>\r\n            </CardBody>\r\n        </Card>                    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPEligibiltyScreeningForm;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {FormGroup, Label , CardBody, Spinner,Input,Form} from \"reactstrap\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, } from \"@material-ui/core\";\r\nimport MatButton from '@material-ui/core/Button'\r\nimport {toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n// import {Link, useHistory, useLocation} from \"react-router-dom\";\r\n// import {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Label as LabelRibbon, Button, Message} from 'semantic-ui-react'\r\n// import 'semantic-ui-css/semantic.min.css';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport * as moment from 'moment';\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        },\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        }\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst BasicInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    const patientID= props.patientDetail && props.patientDetail.personResponseDto ? props.patientDetail.personResponseDto.id : \"\";\r\n    //const clientId = props.patientObj && props.patientObj ? props.patientObj.id : \"\";\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [counselingType, setCounselingType] = useState([]);\r\n    let temp = { ...errors }\r\n\r\n    const [objValues, setObjValues]= useState(\r\n            {\r\n                counselingType: \"\",\r\n                drugUseHistory: {},\r\n                extra: {},\r\n                firstTimeVisit: true,\r\n                hivRisk: {},\r\n                numChildrenLessThanFive: \"\",\r\n                numWives: \"\",\r\n                personId: \"\",\r\n                personalHivRiskAssessment: {},\r\n                sexPartner: \"TARGET_GROUP_GEN_POP\",\r\n                sexPartnerRisk: {},\r\n                stiScreening: {},\r\n                targetGroup: \"TARGET_GROUP_GEN_POP\",\r\n                uniqueId: \"\",\r\n                visitDate:\"\"\r\n            }\r\n    )\r\n    useEffect(() => { \r\n        \r\n        CounselingType();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEligibility(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n    }, [props.patientObj]);\r\n    const GetPatientPrepEligibility =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/${id}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                console.log(response.data);\r\n               setObjValues(response.data);\r\n               setRiskAssessment(response.data.personalHivRiskAssessment)\r\n               setRiskAssessmentPartner(response.data.sexPartnerRisk)\r\n               setStiScreening(response.data.stiScreening)\r\n               setDrugHistory(response.data.drugUseHistory)\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const CounselingType =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/COUNSELING_TYPE`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCounselingType(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n\r\n    const handleInputChange = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});         \r\n    }\r\n    const [riskAssessment, setRiskAssessment]= useState(\r\n        {\r\n            unprotectedVaginalSexCasual:\"\",\r\n            unprotectedVaginalSexRegular:\"\",\r\n            uprotectedAnalSexWithCasual:\"\",\r\n            uprotectedAnalSexWithRegular:\"\", \r\n            stiHistory:\"\",  \r\n            sharedNeedles:\"\",   \r\n            moreThan1SexPartner:\"\",\r\n            analSexWithPartner :\"\",\r\n            unprotectedAnalSexWithPartner:\"\",\r\n            haveYouPaidForSex:\"\",\r\n            haveSexWithoutCondom:\"\",\r\n            experienceCondomBreakage:\"\",\r\n            takenPartInSexualOrgy:\"\",\r\n                          \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessment = e => { \r\n        //setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessment ({...riskAssessment,  [e.target.name]: e.target.value});                           \r\n    }\r\n    // Getting the number count of riskAssessment True\r\n    const actualRiskCountTrue=Object.values(riskAssessment)\r\n    const riskCount=actualRiskCountTrue.filter((x)=> x==='true')\r\n    const [riskAssessmentPartner, setRiskAssessmentPartner]= useState(\r\n        {\r\n            haveSexWithHIVPositive:\"\",\r\n            haveSexWithPartnerInjectDrug:\"\",\r\n            haveSexWithPartnerWhoHasSexWithMen :\"\",\r\n            haveSexWithPartnerTransgender :\"\",\r\n            sexWithPartnersWithoutCondoms:\"\",             \r\n        }\r\n    )\r\n    const handleInputChangeRiskAssessmentPartner = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"}) \r\n        setRiskAssessmentPartner ({...riskAssessmentPartner,  [e.target.name]: e.target.value});\r\n                    \r\n    }\r\n    // Getting the number count of sexPartRiskCount True\r\n    const actualSexPartRiskCountTrue=Object.values(riskAssessmentPartner)\r\n    const sexPartRiskCount=actualSexPartRiskCountTrue.filter((x)=> x==='true')\r\n    const [stiScreening, setStiScreening]= useState(\r\n        {\r\n            vaginalDischarge:\"\",\r\n            lowerAbdominalPains :\"\",\r\n            urethralDischarge :\"\",\r\n            complaintsOfScrotal:\"\", \r\n            complaintsGenitalSore  :\"\",\r\n            analDischarge:\"\",\r\n            analItching:\"\",\r\n            analpain:\"\",\r\n            swollenIguinal:\"\", \r\n            genitalScore:\"\",\r\n                \r\n        }\r\n    )\r\n    const handleInputChangeStiScreening = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"}) \r\n        setStiScreening ({...stiScreening,  [e.target.name]: e.target.value});   \r\n                \r\n    }\r\n    // Getting the number count of STI True\r\n    const actualStiTrue=Object.values(stiScreening)\r\n    const stiCount=actualStiTrue.filter((x)=> x==='true')\r\n    const [drugHistory, setDrugHistory]= useState(\r\n        {\r\n            useAnyOfTheseDrugs:\"\",\r\n            inject:\"\",\r\n            sniff:\"\", \r\n            smoke:\"\", \r\n            Snort:\"\", \r\n            useDrugSexualPerformance:\"\",\r\n            hivTestedBefore:\"\",\r\n            recommendHivRetest:\"\",\r\n            clinicalSetting:\"\", \r\n            reportHivRisk:\"\",\r\n            hivExposure:\"\",\r\n            hivTestResultAtvisit:\"\",\r\n            lastTest:\"\"\r\n        }\r\n    )\r\n    const handleInputChangeDrugHistory = e => { \r\n        setErrors({...temp, [e.target.name]:\"\"})\r\n        // if(drugHistory.hivTestedBefore===\"true\"){\r\n        //     drugHistory.lastTest=\"\"\r\n        // } \r\n        setDrugHistory ({...drugHistory,  [e.target.name]: e.target.value});         \r\n    }\r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        //PREP FORM VALIDATION\r\n           temp.visitDate = objValues.visitDate? \"\" : \"This field is required.\"\r\n           temp.sexPartner = objValues.sexPartner ? \"\" : \"This field is required.\"\r\n           temp.hivTestResultAtvisit = drugHistory.hivTestResultAtvisit ? \"\" : \"This field is required.\"\r\n           \r\n            setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n            \r\n            if(validate()){\r\n                setSaving(true);\r\n            //objValues.htsClientId= clientId\r\n            objValues.drugUseHistory= drugHistory\r\n            objValues.personalHivRiskAssessment= riskAssessment\r\n            objValues.sexPartnerRisk= riskAssessmentPartner\r\n            objValues.stiScreening= stiScreening\r\n            objValues.personId= patientID\r\n            objValues.uniqueId= patientID\r\n                if(props.activeContent && props.activeContent.actionType){//Perform operation for updation action\r\n                    axios.put(`${baseUrl}prep-eligibility/${props.activeContent.id}`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        //props.setPatientObj(response.data)\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                              toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }else{\r\n                    axios.post(`${baseUrl}prep/eligibility`,objValues,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`}},)\r\n                    .then(response => {\r\n                        setSaving(false);\r\n                        props.patientObj.eligibilityCount= 1\r\n                        //props.setPatientObj(response.data)\r\n                        toast.success(\"Prep Eligilibility save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n        \r\n                    })\r\n                    .catch(error => {\r\n                        setSaving(false);\r\n                        if(error.response && error.response.data){\r\n                            let errorMessage = error.response.data.apierror && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                            if(error.response.data.apierror && error.response.data.apierror.message!==\"\" && error.response.data.apierror && error.response.data.apierror.subErrors[0].message!==\"\"){\r\n                              toast.error(error.response.data.apierror.message + \" : \" + error.response.data.apierror.subErrors[0].field + \" \" + error.response.data.apierror.subErrors[0].message, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }else{\r\n                              toast.error(errorMessage, {position: toast.POSITION.BOTTOM_CENTER});\r\n                            }\r\n                        }else{\r\n                            toast.error(\"Something went wrong, please try again...\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                        }\r\n                    });\r\n                }\r\n           \r\n            }else{\r\n                setSaving(false);\r\n                toast.error(\"All field are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n            }   \r\n    }\r\nconsole.log(props)\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root}>\r\n                <CardBody>\r\n                <h2>PrEP Eligibilty Screening Form</h2>\r\n                    <form >\r\n                        <div className=\"row\">\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Visit Date <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    className=\"form-control\"\r\n                                    name=\"visitDate\"\r\n                                    id=\"visitDate\"\r\n                                    value={objValues.visitDate}\r\n                                    onChange={handleInputChange}\r\n                                    min={props.patientDetail && props.patientDetail.dateHivPositive!==null ? props.patientDetail.dateHivPositive : props.patientObj.dateOfRegistration}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                   \r\n                                {errors.visitDate !==\"\" ? (\r\n                                <span className={classes.error}>{errors.visitDate}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Sex partners <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"sexPartner\"\r\n                                    id=\"sexPartner\"\r\n                                    value={objValues.sexPartner}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                    <option value={\"\"}></option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Both\">Both</option>\r\n                                </select>\r\n                                {errors.sexPartner !==\"\" ? (\r\n                                <span className={classes.error}>{errors.sexPartner}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        {/* {props.patientDetail!==null && props.patientDetail.personResponseDto.maritalStatus.display==='Married'   && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label> Number of own children {\"<\"}5 years</Label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"numChildrenLessThanFive\"\r\n                                    id=\"numChildrenLessThanFive\"\r\n                                    value={objValues.numChildrenLessThanFive}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                />\r\n                                   \r\n                                {errors.numChildrenLessThanFive !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numChildrenLessThanFive}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )} */}\r\n                        {props.patientObj.gender==='Male' || props.patientObj.gender==='male'  && (\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Number of wives </Label>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    name=\"numWives\"\r\n                                    id=\"numWives\"\r\n                                    value={objValues.numWives}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.numWives !==\"\" ? (\r\n                                <span className={classes.error}>{errors.numWives}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        )}\r\n                        <div className=\"form-group  col-md-4\">\r\n                            <FormGroup>\r\n                                <Label>Type of counseling <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"counselingType\"\r\n                                    id=\"counselingType\"\r\n                                    value={objValues.counselingType}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value={\"\"}>Select</option>\r\n                                        {counselingType.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                                {errors.counselingType !==\"\" ? (\r\n                                <span className={classes.error}>{errors.counselingType}</span>\r\n                                ) : \"\" }\r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >HIV Risk Assessment  (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with casual partner</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexCasual\"\r\n                                        id=\"unprotectedVaginalSexCasual\"\r\n                                        value={riskAssessment.unprotectedVaginalSexCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Vaginal sex with regular partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedVaginalSexRegular\"\r\n                                        id=\"unprotectedVaginalSexRegular\"\r\n                                        value={riskAssessment.unprotectedVaginalSexRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedVaginalSexRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedVaginalSexRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with casual partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithCasual\"\r\n                                        id=\"uprotectedAnalSexWithCasual\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithCasual}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithCasual !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithCasual}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with regualar partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"uprotectedAnalSexWithRegular\"\r\n                                        id=\"uprotectedAnalSexWithRegular\"\r\n                                        value={riskAssessment.uprotectedAnalSexWithRegular}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.uprotectedAnalSexWithRegular !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uprotectedAnalSexWithRegular}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>History of STI</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"stiHistory\"\r\n                                        id=\"stiHistory\"\r\n                                        value={riskAssessment.stiHistory}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.stiHistory !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.stiHistory}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Shared needles/injecting materials</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sharedNeedles\"\r\n                                        id=\"sharedNeedles\"\r\n                                        value={riskAssessment.sharedNeedles}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sharedNeedles !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sharedNeedles}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>           \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>More than 1 sex partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThan1SexPartner\"\r\n                                        id=\"moreThan1SexPartner\"\r\n                                        value={riskAssessment.moreThan1SexPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThan1SexPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThan1SexPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal sex with Male/Female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analSexWithPartner\"\r\n                                        id=\"analSexWithPartner\"\r\n                                        value={riskAssessment.analSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Unprotected Anal sex with male/female partner </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"unprotectedAnalSexWithPartner\"\r\n                                        id=\"unprotectedAnalSexWithPartner\"\r\n                                        value={riskAssessment.unprotectedAnalSexWithPartner}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.unprotectedAnalSexWithPartner !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.unprotectedAnalSexWithPartner}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you paid for sex in the last 6 months?  </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveYouPaidForSex\"\r\n                                        id=\"haveYouPaidForSex\"\r\n                                        value={riskAssessment.haveYouPaidForSex}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveYouPaidForSex !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveYouPaidForSex}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you been paid for sex in the last 6 months </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        id=\"moreThanOneSexPartnerLastThreeMonths\"\r\n                                        value={riskAssessment.moreThanOneSexPartnerLastThreeMonths}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.moreThanOneSexPartnerLastThreeMonths !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.moreThanOneSexPartnerLastThreeMonths}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you experience condom breakage </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"experienceCondomBreakage\"\r\n                                        id=\"experienceCondomBreakage\"\r\n                                        value={riskAssessment.experienceCondomBreakage}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.experienceCondomBreakage !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.experienceCondomBreakage}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you taken part in sexual orgy </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"takenPartInSexualOrgy\"\r\n                                        id=\"takenPartInSexualOrgy\"\r\n                                        value={riskAssessment.takenPartInSexualOrgy}\r\n                                        onChange={handleInputChangeRiskAssessment}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.takenPartInSexualOrgy !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.takenPartInSexualOrgy}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Personal HIV Risk assessment score (sum of all 7 answers)</h4>\r\n                                <b>Score : {riskCount.length}</b>\r\n                            </Message>\r\n                            <hr/>\r\n                            <br/>\r\n                            \r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#992E62', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Sex Partner Risk Assessment (Last 3 months)</div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is HIV positive? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithHIVPositive\"\r\n                                        id=\"haveSexWithHIVPositive\"\r\n                                        value={riskAssessmentPartner.haveSexWithHIVPositive}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithHIVPositive !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithHIVPositive}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            {/* {riskAssessmentPartner.sexPartnerHivPositive==='true' && (<> */}\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who inject drug?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerInjectDrug\"\r\n                                        id=\"haveSexWithPartnerInjectDrug\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerInjectDrug}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerInjectDrug !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerInjectDrug}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with men ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        id=\"haveSexWithPartnerWhoHasSexWithMen\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerWhoHasSexWithMen}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerWhoHasSexWithMen !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerWhoHasSexWithMen}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who is a transgender person</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"haveSexWithPartnerTransgender\"\r\n                                        id=\"haveSexWithPartnerTransgender\"\r\n                                        value={riskAssessmentPartner.haveSexWithPartnerTransgender}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.haveSexWithPartnerTransgender !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.haveSexWithPartnerTransgender}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had sex with a partner who has sex with multiple partners without condoms</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sexWithPartnersWithoutCondoms\"\r\n                                        id=\"sexWithPartnersWithoutCondoms\"\r\n                                        value={riskAssessmentPartner.sexWithPartnersWithoutCondoms}\r\n                                        onChange={handleInputChangeRiskAssessmentPartner}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sexWithPartnersWithoutCondoms !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sexWithPartnersWithoutCondoms}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                         \r\n                            {/* </>)} */}\r\n                            <Message warning>\r\n                                <h4>Sex Partner Risk Assessment score (sum of all 6 answers)</h4>\r\n                                <b>Score :{sexPartRiskCount.length}</b>\r\n                            </Message>        \r\n                            \r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#000', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Drug Use History</div>\r\n                            {/* <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Do you use any of these drugs/substances*</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useAnyOfTheseDrugs\"\r\n                                        id=\"useAnyOfTheseDrugs\"\r\n                                        value={drugHistory.useAnyOfTheseDrugs}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useAnyOfTheseDrugs !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useAnyOfTheseDrugs}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> */}\r\n                            <hr/>\r\n                            <h3>Route of Administration</h3>\r\n                            <h4>Do you use any of these drugs/substances ?</h4>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Inject </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"inject\"\r\n                                        id=\"inject\"\r\n                                        value={drugHistory.inject}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.inject !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.inject}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Sniff </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"sniff\"\r\n                                        id=\"sniff\"\r\n                                        value={drugHistory.sniff}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.sniff !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.sniff}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Snort</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"Snort\"\r\n                                        id=\"Snort\"\r\n                                        value={drugHistory.fever}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.Snort !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.Snort}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Smoke</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"smoke\"\r\n                                        id=\"smoke\"\r\n                                        value={drugHistory.smoke}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.smoke !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.smoke}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"row\">\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you used drugs to enhance sexual performance ? </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"useDrugSexualPerformance\"\r\n                                        id=\"useDrugSexualPerformance\"\r\n                                        value={drugHistory.useDrugSexualPerformance}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.useDrugSexualPerformance !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.useDrugSexualPerformance}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Have you had HIV testing before ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestedBefore\"\r\n                                        id=\"hivTestedBefore\"\r\n                                        value={drugHistory.hivTestedBefore}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestedBefore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestedBefore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            {drugHistory.hivTestedBefore===\"true\" && (\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>When was your last test?    </Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lastTest\"\r\n                                        id=\"lastTest\"\r\n                                        value={drugHistory.lastTest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"1 Month\">{\"<\"}1 Month</option>\r\n                                        <option value=\"1-3 Months\">1-3 Months</option>\r\n                                        <option value=\"4-6Months\">4-6 Months</option>\r\n                                        <option value=\"6Months\">{\">\"}6 months</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lastTest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lastTest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            )}\r\n                            </div>\r\n                            \r\n                            <div className=\"row\">\r\n\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>HIV test result at visit</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivTestResultAtvisit\"\r\n                                        id=\"hivTestResultAtvisit\"\r\n                                        value={drugHistory.hivTestResultAtvisit}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"Positive\">Positive</option>\r\n                                        <option value=\"Negative\">Negative</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivTestResultAtvisit !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivTestResultAtvisit}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Recommended for HIV Retest ?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"recommendHivRetest\"\r\n                                        id=\"recommendHivRetest\"\r\n                                        value={drugHistory.recommendHivRetest}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.recommendHivRetest !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.recommendHivRetest}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Tested in certain Clinical settings, such as STI clinics?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"clinicalSetting\"\r\n                                        id=\"clinicalSetting\"\r\n                                        value={drugHistory.clinicalSetting}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.clinicalSetting !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.clinicalSetting}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report ongoing HIV risk behaviors?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"reportHivRisk\"\r\n                                        id=\"reportHivRisk\"\r\n                                        value={drugHistory.reportHivRisk}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.reportHivRisk !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.reportHivRisk}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-3\">\r\n                                <FormGroup>\r\n                                    <Label>Report a specific HIV exposure within the last 3 months</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"hivExposure\"\r\n                                        id=\"hivExposure\"\r\n                                        value={drugHistory.hivExposure}\r\n                                        onChange={handleInputChangeDrugHistory}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.hivExposure !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.hivExposure}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"form-group  col-md-12 text-center pt-2 mb-4\" style={{backgroundColor:'#014D88', width:'125%', height:'35px', color:'#fff', fontWeight:'bold'}} >Syndromic STI Screening</div>\r\n                            {props.patientDetail && props.patientDetail.personResponseDto.sex==='Female' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of vaginal discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"vaginalDischarge\"\r\n                                        id=\"vaginalDischarge\"\r\n                                        value={stiScreening.vaginalDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.vaginalDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.vaginalDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of lower abdominal pains with or without vaginal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"lowerAbdominalPains\"\r\n                                        id=\"lowerAbdominalPains\"\r\n                                        value={stiScreening.lowerAbdominalPains}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.lowerAbdominalPains !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.lowerAbdominalPains}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)}\r\n                            {props.patientObj.personResponseDto && props.patientDetail.personResponseDto.sex==='Male' && (\r\n                            <>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of urethral discharge or burning when urinating?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"urethralDischarge\"\r\n                                        id=\"urethralDischarge\"\r\n                                        value={stiScreening.urethralDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.urethralDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.urethralDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of scrotal swelling and pain</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsOfScrotal\"\r\n                                        id=\"complaintsOfScrotal\"\r\n                                        value={stiScreening.complaintsOfScrotal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsOfScrotal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsOfScrotal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div> \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Complaints of genital sore(s) or swollen inguinal lymph nodes with or without pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"complaintsGenitalSore\"\r\n                                        id=\"complaintsGenitalSore\"\r\n                                        value={stiScreening.complaintsGenitalSore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.complaintsGenitalSore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.complaintsGenitalSore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            </>)} \r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Genital score +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"genitalScore\"\r\n                                        id=\"genitalScore\"\r\n                                        value={stiScreening.genitalScore}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.genitalScore !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.genitalScore}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Swollen iguinal lymph node +/-pains?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"swollenIguinal\"\r\n                                        id=\"swollenIguinal\"\r\n                                        value={stiScreening.swollenIguinal}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.swollenIguinal !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.swollenIguinal}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal pain on stooling?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analpain\"\r\n                                        id=\"analpain\"\r\n                                        value={stiScreening.analpain}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analpain !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analpain}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal itching?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analItching\"\r\n                                        id=\"analItching\"\r\n                                        value={stiScreening.analItching}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analItching !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analItching}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group  col-md-4\">\r\n                                <FormGroup>\r\n                                    <Label>Anal discharge?</Label>\r\n                                    <select\r\n                                        className=\"form-control\"\r\n                                        name=\"analDischarge\"\r\n                                        id=\"analDischarge\"\r\n                                        value={stiScreening.analDischarge}\r\n                                        onChange={handleInputChangeStiScreening}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value={\"\"}></option>\r\n                                        <option value=\"true\">Yes</option>\r\n                                        <option value=\"false\">No</option>\r\n                                        \r\n                                    </select>\r\n                                    {errors.analDischarge !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.analDischarge}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <Message warning>\r\n                                <h4>Calculate the sum of the STI screening. If {\">= \"}1, should be referred for STI test </h4>\r\n                                <b>Score :{stiCount.length}</b>\r\n                            </Message>\r\n                           \r\n                            {saving ? <Spinner /> : \"\"}\r\n                            <br />\r\n                            <div className=\"row\">\r\n                            <div className=\"form-group mb-3 col-md-12\">\r\n                            {props.activeContent && props.activeContent.actionType? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>)}\r\n                           \r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </CardBody>\r\n            </Card>                                 \r\n        </>\r\n    );\r\n};\r\n\r\nexport default BasicInfo","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n// import Moment from \"moment\";\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst PrEPVisit = (props) => {\r\n\r\n    const patientObj = props.patientObj;\r\n    let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrer:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\"});\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [carePoints, setCarePoints] = useState([]);\r\n    const [hivStatus, setHivStatus] = useState([]);\r\n    //set ro show the facility name field if is transfer in \r\n    const [transferIn, setTransferIn] = useState(false);\r\n    // display the OVC number if patient is enrolled into OVC \r\n    const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n\r\n    useEffect(() => {         \r\n\r\n      }, []);\r\n\r\n    const handleInputChange = e => {\r\n        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n\r\n    }\r\n          \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }  \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        //temp.name = details.name ? \"\" : \"This field is required\"\r\n        //temp.description = details.description ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        \r\n          objValues.personId= patientObj.id\r\n          patientObj.enrolled=true\r\n          delete objValues['tableData'];\r\n          setSaving(true);\r\n          axios.post(`${baseUrl}hiv/enrollment`,objValues,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n          \r\n          )\r\n              .then(response => {\r\n                  setSaving(false);\r\n                  toast.success(\"Record save successful\");\r\n                  props.toggle()\r\n                  props.patientObj.enrolled=true\r\n                  props.PatientCurrentStatus()\r\n\r\n              })\r\n              .catch(error => {\r\n                  setSaving(false);\r\n                  toast.error(\"Something went wrong\");\r\n              });\r\n          \r\n    }\r\n\r\n  return (      \r\n        <div>                  \r\n            <Card >\r\n                <CardBody>\r\n                <form >\r\n                    <div className=\"row\">\r\n                        <h2>PrEP Visit</h2>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label for=\"uniqueId\">Duration on PErp  </Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"uniqueId\"\r\n                                id=\"uniqueId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.uniqueId}\r\n                                required\r\n                            />\r\n                            \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Noted Side Effects</Label>\r\n                            <Input\r\n                                type=\"select\"\r\n                                name=\"entryPointId\"\r\n                                id=\"entryPointId\"\r\n                                onChange={handleInputChange}\r\n                                value={objValues.entryPointId}\r\n                                required\r\n                            >\r\n                                <option value=\"\">Select </option>\r\n                \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                            </Input>\r\n                                \r\n                            </FormGroup>\r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">HTS Result</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Risk Reduction Plan</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label for=\"entryPointId\">Syndromic STI Screening</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"entryPointId\"\r\n                            id=\"entryPointId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.entryPointId}\r\n                            required\r\n                        >\r\n                        <option value=\"\"> </option>\r\n            \r\n                        {carePoints.map((value) => (\r\n                            <option key={value.id} value={value.id}>\r\n                                {value.display}\r\n                            </option>\r\n                        ))}\r\n                        {errors.entryPointId !==\"\" ? (\r\n                                <span className={classes.error}>{errors.entryPointId}</span>\r\n                            ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        \r\n                        </div>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row\">\r\n                        <h3>PrEP Drugs</h3>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                        <FormGroup>\r\n                        <Label >Regimen</Label>\r\n                        <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                        </FormGroup>\r\n                        </div>\r\n                    \r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Level of Adherence</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"form-group mb-3 col-md-6\">\r\n                            <FormGroup>\r\n                            <Label >Why Poor/Fair Adherence?</Label>\r\n                            <Input\r\n                            type=\"select\"\r\n                            name=\"statusAtRegistrationId\"\r\n                            id=\"statusAtRegistrationId\"\r\n                            onChange={handleInputChange}\r\n                            value={objValues.statusAtRegistrationId}\r\n                            required\r\n                        >\r\n                            <option value=\"\">Select </option>\r\n            \r\n                            {hivStatus.map((value) => (\r\n                                <option key={value.id} value={value.id}>\r\n                                    {value.display}\r\n                                </option>\r\n                            ))}\r\n                            {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                ) : \"\" }\r\n                        </Input>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br />\r\n                \r\n                    <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        onClick={handleSubmit}\r\n                        >\r\n                        {!saving ? (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                        ) : (\r\n                        <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                        )}\r\n                    </MatButton>\r\n                \r\n                <MatButton\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    startIcon={<CancelIcon />}\r\n                    onClick={props.toggle}\r\n                    \r\n                >\r\n                    <span style={{ textTransform: \"capitalize\" }}>Cancel</span>\r\n                </MatButton>\r\n                \r\n                    </form>\r\n                </CardBody>\r\n            </Card>                    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PrEPVisit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Form,Row, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n// import { Alert } from 'reactstrap';\r\n// import { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport { toast} from \"react-toastify\";\r\nimport { url as baseUrl, token } from \"../../../api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import {  Modal, Button } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\n//import { DateTimePicker } from \"react-widgets\";\r\nimport PhoneInput from 'react-phone-input-2'\r\n// import momentLocalizer from \"react-widgets-moment\";\r\nimport moment from \"moment\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n      },\r\n      success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n      }, \r\n}))\r\n\r\nconst PrEPRegistrationForm = (props) => {\r\n\r\n    ///const patientObj = props.patientObj;\r\n    const [entryPoint, setEntryPoint] = useState([]);\r\n    //let history = useHistory();\r\n    const classes = useStyles()\r\n    const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateReferred: \"\",\r\n        extra: {},\r\n        personId: 0,\r\n        prepEligibilityUuid: \"\",\r\n        riskType: \"\",\r\n        supporterName: \"\",\r\n        supporterPhone: \"\",\r\n        supporterRelationshipType: \"\",\r\n        uniqueId: \"\",\r\n        hivTestingPoint:\"\",\r\n        dateOfLastHivNegativeTest:\"\"\r\n    });\r\n    const [saving, setSaving] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [prepRisk, setPrepRisk] = useState([]);\r\n    const [relatives, setRelatives] = useState([]);\r\n    const [patientDto, setPatientDto] = useState();\r\n    const [disabledField, setSisabledField] = useState(false);\r\n    useEffect(() => {         \r\n        GetPatientDTOObj();\r\n        RELATIONSHIP();\r\n        PREP_RISK_TYPE();\r\n        EntryPoint();\r\n        if(props.activeContent.id && props.activeContent.id!==\"\" && props.activeContent.id!==null){\r\n            GetPatientPrepEnrollment(props.activeContent.id)\r\n            setSisabledField(props.activeContent.actionType==='view'?true : false)\r\n        }\r\n        //GetPatientPrepEnrollment\r\n      }, []);\r\n      const EntryPoint =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HTS_ENTRY_POINT`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEntryPoint(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const RELATIONSHIP =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/RELATIONSHIP`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n               setRelatives(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    }\r\n    const PREP_RISK_TYPE =()=>{\r\n        axios\r\n           .get(`${baseUrl}application-codesets/v2/PREP_RISK_TYPE`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            setPrepRisk(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientDTOObj =()=>{\r\n        axios\r\n           .get(`${baseUrl}prep/eligibility/open/patients/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n            //console.log(response.data)\r\n               setPatientDto(response.data);\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const GetPatientPrepEnrollment =(id)=>{\r\n        axios\r\n           .get(`${baseUrl}prep/enrollment/person/${props.patientObj.personId}`,\r\n               { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n           )\r\n           .then((response) => {\r\n                //console.log(response.data.find((x)=> x.id===id));\r\n               setObjValues(response.data.find((x)=> x.id===id));\r\n           })\r\n           .catch((error) => {\r\n           //console.log(error);\r\n           });          \r\n    } \r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    } \r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setObjValues({...objValues,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    \r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"This field is required\"\r\n        temp.dateReferred = objValues.dateReferred ? \"\" : \"This field is required\"\r\n        temp.riskType = objValues.riskType ? \"\" : \"This field is required\"\r\n        //temp.supporterName = objValues.supporterName ? \"\" : \"This field is required\"\r\n        temp.supporterPhone = objValues.supporterPhone ? \"\" : \"This field is required\"\r\n        temp.supporterRelationshipType = objValues.supporterRelationshipType ? \"\" : \"This field is required\"\r\n        temp.uniqueId = objValues.uniqueId ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n            })    \r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    /**** Submit Button Processing  */\r\n    const handleSubmit = (e) => {        \r\n        e.preventDefault();\r\n        if(validate()) {   \r\n          objValues.personId=props.patientObj.personId\r\n          objValues.prepEligibilityUuid=patientDto.uuid \r\n          console.log(objValues)\r\n          setSaving(true);\r\n          if(props.activeContent && props.activeContent.actionType){\r\n            axios.put(`${baseUrl}prep-enrollment/${props.activeContent.id}`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.prepCount=\"1\"\r\n                    toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n            }else{\r\n                \r\n            axios.post(`${baseUrl}prep/enrollment`,objValues,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            \r\n            )\r\n                .then(response => {\r\n                    setSaving(false);\r\n                    props.patientObj.prepCount=\"1\"\r\n                    toast.success(\"Prep Enrollment save successful!\", {position: toast.POSITION.BOTTOM_CENTER});\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                })\r\n                .catch(error => {\r\n                    setSaving(false);\r\n                    toast.error(\"Something went wrong\");\r\n                });\r\n            }\r\n            }else{\r\n                toast.error(\"All fields are required \", {position: toast.POSITION.BOTTOM_CENTER});\r\n            }\r\n        \r\n    }\r\n\r\n  return (      \r\n      <div >                  \r\n        <Card >\r\n            <CardBody>\r\n            <form >\r\n            <div className=\"row\">\r\n                            <h2>PrEP Enrollment </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueId\"\r\n                                    id=\"uniqueId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueId}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUniqueArtNo\"\r\n                                    id=\"ancUniqueArtNo\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUniqueArtNo}\r\n                                    disabled={disabledField}\r\n                                />\r\n                                {errors.ancUniqueArtNo !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUniqueArtNo}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                    max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                    disabled={disabledField}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type <span style={{ color:\"red\"}}> *</span></Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"riskType\"\r\n                                    id=\"riskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.riskType}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                    <option value=\"\"> Select</option>\r\n                                    {prepRisk.map((value) => (\r\n                                        <option key={value.id} value={value.code}>\r\n                                            {value.display}\r\n                                        </option>\r\n                                    ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.riskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.riskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    disabled={disabledField}\r\n                                >\r\n                                     <option value=\"\"> Select</option>\r\n                                      {entryPoint.map((value) => (\r\n                                            <option key={value.id} value={value.id}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                </Input>\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP <span style={{ color:\"red\"}}> *</span> </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferred\"\r\n                                        id=\"dateReferred\"\r\n                                        value={objValues.dateReferred}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        min={patientDto && patientDto.visitDate ?patientDto.visitDate :\"\"}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.dateReferred !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferred}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterName\"\r\n                                        id=\"supporterName\"\r\n                                        value={objValues.supporterName}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    />\r\n                                    {errors.supporterName !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterName}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Relationship <span style={{ color:\"red\"}}> *</span></Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"select\"\r\n                                        name=\"supporterRelationshipType\"\r\n                                        id=\"supporterRelationshipType\"\r\n                                        value={objValues.supporterRelationshipType}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled={disabledField}\r\n                                    >\r\n                                        <option value=\"\"> Select</option>\r\n                    \r\n                                        {relatives.map((value) => (\r\n                                            <option key={value.id} value={value.code}>\r\n                                                {value.display}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                    {errors.supporterRelationshipType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterRelationshipType}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter Phone Number</Label>\r\n                                    {/* <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    /> */}\r\n                                    <PhoneInput\r\n                                        containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                        inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                        country={'ng'}\r\n                                        placeholder=\"(234)7099999999\"\r\n                                        maxLength={5}\r\n                                        name=\"supporterPhone\"\r\n                                        id=\"supporterPhone\"\r\n                                        masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                        value={objValues.supporterPhone}\r\n                                        onChange={(e)=>{checkPhoneNumberBasic(e,'supporterPhone')}}\r\n                                        disabled={disabledField}\r\n                                         />\r\n                                    {errors.supporterPhone !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.supporterPhone}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                \r\n                {saving ? <Spinner /> : \"\"}\r\n                <br />\r\n                {props.activeContent && props.activeContent.actionType? (<>\r\n                        <MatButton\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        hidden={disabledField}\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        style={{backgroundColor:\"#014d88\"}}\r\n                        onClick={handleSubmit}\r\n                        disabled={saving}\r\n                        >\r\n                            {!saving ? (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                            ) : (\r\n                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                            )}\r\n                    </MatButton>\r\n                    </>):(<>\r\n                        <MatButton\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            style={{backgroundColor:\"#014d88\"}}\r\n                            onClick={handleSubmit}\r\n                            disabled={saving}\r\n                            >\r\n                                {!saving ? (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                    </MatButton>\r\n                    </>)}\r\n                </form>\r\n            </CardBody>\r\n        </Card> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrEPRegistrationForm;\r\n","export default __webpack_public_path__ + \"static/media/fingerprintimage.73ff98ea.png\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {Modal,ModalHeader, ModalBody,Form,\r\n    Row,Label,Card,CardBody,Col, FormGroup,CardHeader, Input\r\n} from \"reactstrap\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"react-select\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\r\nimport { Button2, Icon, List } from 'semantic-ui-react'\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport axios from \"axios\";\r\nimport {token, url as baseUrl} from \"../../../api\";\r\n\r\nimport { green, red } from '@mui/material/colors';\r\nimport { Dimmer, Loader, Image, Segment } from 'semantic-ui-react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Button from '@mui/material/Button';\r\nimport Fab from '@mui/material/Fab';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\n//import SaveIcon from '@mui/icons-material/Save';\r\n// import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\n// import CancelIcon from '@mui/icons-material/Cancel';\r\n// import ModalImage from \"react-modal-image\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport {Dropdown,Badge} from 'react-bootstrap';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport fingerprintimage  from './../../images/fingerprintimage.png';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpgradeIcon from '@mui/icons-material/Upgrade';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        \"& .dropdown-toggle::after, .dropleft .dropdown-toggle::before, .dropright .dropdown-toggle::before, .dropup .dropdown-toggle::after\":{\r\n            fontFamily:'FontAwesome',\r\n            border:'0',\r\n            verticalAlign:'middle',\r\n            marginLeft:'.25em',\r\n            lineHeight:'1'\r\n        },\r\n        \"& .dropdown-menu .dropdown-item\":{\r\n            fontSize: '14px',\r\n            color: '#014d88',\r\n            padding: '0.3rem 1.5rem',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .mt-4\":{\r\n            marginTop:'28px !important'\r\n        },\r\n        \"& .form-control\":{\r\n            color:'#992E62'\r\n        },\r\n        \"& .form-control:focus\":{\r\n            color:'#014d88'\r\n        },\r\n        \"& .sharp \":{\r\n            \"min-width\": \"35px\",\r\n            padding:\"5px\",\r\n            height: '35px',\r\n            \"min-height\": \"35px\"\r\n}\r\n    },\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n/*    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"12.8px\",\r\n    },*/\r\n}));\r\n\r\nlet checkUrl=\"\"\r\n\r\nfunction Biometrics(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const permissions = history.location && history.location.state ? history.location.state.permissions : [];\r\n    const [biometricDevices,setbiometricDevices] = useState([]);\r\n    const [objValues, setObjValues]= useState({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"})\r\n    const [fingerType, setFingerType] = useState([]);\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [pageLoading, setPageLoading] = useState(false);\r\n    const [showCapture, setshowCapture] = React.useState(false);\r\n    const [tryAgain, setTryAgain] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [storedBiometrics, setStoredBiometrics] = useState([]);\r\n    // const [responseImage, setResponseImage] = useState(\"\")\r\n    const [capturedFingered, setCapturedFingered]= useState([]);\r\n    const [selectedFingers, setSelectedFingers] = useState([]);\r\n\r\n    const buttonSx = {\r\n        ...(success && {\r\n            bgcolor: green[500],\r\n            '&:hover': {\r\n                bgcolor: green[700],\r\n            },\r\n        }),\r\n    };\r\n\r\n    const getPersonBiometrics = async() =>{\r\n        const fingersCodeset = await axios.get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n\r\n        axios.get(`${baseUrl}biometrics/person/${props.patientId}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then(async (response)=>{\r\n            if(response.data.length > 0){\r\n                setStoredBiometrics(response.data);\r\n                setPageLoading(true);\r\n                let personCapturedFingers = _.uniq(_.map(response.data,'templateType'))\r\n                setSelectedFingers(personCapturedFingers);\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: personCapturedFingers.includes(item.display)});\r\n\r\n                });\r\n                setFingerType(biometricItems);\r\n            }else{\r\n                let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                    return _.extend({}, item, {captured: false});\r\n                    //return item.captured = personCapturedFingers.includes(item.display)\r\n                });\r\n                setFingerType(biometricItems);\r\n\r\n            }\r\n\r\n        }).catch(async (error)=>{\r\n            console.log(\"getPersonBiometrics error\")\r\n            console.log(error)\r\n\r\n            let biometricItems =  _.map(fingersCodeset.data, (item)=>{\r\n                return _.extend({}, item, {captured: false});\r\n            });\r\n            setFingerType(biometricItems);\r\n            setPageLoading(true);\r\n        })\r\n    }\r\n\r\n    const clear_storelist = () =>{\r\n        axios.post(`${baseUrl}biometrics/store-list/${props.patientId}`,props.patientId,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            console.log('cleared store')\r\n        }).catch((error)=>{\r\n            console.log(\"cleared store error\")\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        clear_storelist();\r\n        getPersonBiometrics();\r\n        TemplateType();\r\n        //biometricFingers();\r\n    }, []);\r\n    //Get list of KP\r\n    const TemplateType =()=>{\r\n        axios\r\n            .get(`${baseUrl}modules/check?moduleName=biometric`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data===true){\r\n                    axios\r\n                        .get(`${baseUrl}biometrics/devices`,\r\n                            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                        )\r\n                        .then((response) => {\r\n                            setDevices(response.data);\r\n                            setbiometricDevices(response.data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        });\r\n\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    //Get list of Finger index\r\n    const biometricFingers =()=>{\r\n        axios\r\n            .get(`${baseUrl}application-codesets/v2/BIOMETRIC_CAPTURE_FINGERS`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setFingerType(response.data);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n\r\n    }\r\n    //check if device is plugged or not\r\n    const checkDevice = e =>{\r\n        const deviceName =e.target.value;\r\n        const selectedDevice=biometricDevices.find((x)=> x.name ===deviceName )\r\n        checkUrl= selectedDevice.url===null? baseUrl : selectedDevice.url\r\n        setObjValues({...objValues, device:deviceName})\r\n        axios\r\n            .get(`${checkUrl}biometrics/secugen/boot?reader=${deviceName}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                if(response.data.errorType ===\"ERROR\"){\r\n                    toast.error(response.data.errorName + \" is not plug\");\r\n                    //setshowCapture(true)\r\n                }else{\r\n                    setshowCapture(true)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }\r\n    // handle the input changes\r\n\r\n    const handleInputChange = e => {\r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n    }\r\n    //form validation\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.templateType = objValues.templateType ? \"\" : \"This field is required\"\r\n        temp.device = objValues.device ? \"\" : \"This field is required\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x === \"\")\r\n    }\r\n    //to capture  selected index finger\r\n    const captureFinger = (e) => {\r\n        e.preventDefault();\r\n        if(validate()){\r\n            axios.post(`${checkUrl}biometrics/secugen/enrollment?reader=SG_DEV_AUTO`,objValues,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    setLoading(true);\r\n                    if(response.data.type ===\"ERROR\"){\r\n                        setLoading(false);\r\n                        setTryAgain(true);\r\n                        window.setTimeout(() => {\r\n                            setTryAgain(false);\r\n                        }, 5000);\r\n                        toast.error(response.data.message.ERROR);\r\n                    }else{\r\n                        const templateType= response.data.templateType\r\n                        setTryAgain(false);\r\n                        setSuccess(true)\r\n                        window.setTimeout(() => {\r\n                            setSuccess(false)\r\n                            setLoading(false);\r\n                        }, 5000);\r\n                        let biometricsEnrollments = response.data\r\n                        biometricsEnrollments.capturedBiometricsList = _.uniqBy(biometricsEnrollments.capturedBiometricsList,\"templateType\");\r\n\r\n                        setCapturedFingered([...capturedFingered, biometricsEnrollments])\r\n                        //fingerType.splice(templateType, 1);\r\n                        _.find(fingerType,{'display':templateType}).captured = true;\r\n                        setFingerType([...fingerType]);\r\n                        //setObjValues({biometricType: \"FINGERPRINT\", patientId:props.patientId, templateType:\"\", device:\"\"});\r\n                        setObjValues({...objValues, templateType:\"\"});\r\n                    }\r\n                    //toast.success(\"Record save successful\");\r\n                })\r\n                .catch(error => {\r\n                });\r\n        }\r\n    }\r\n\r\n    const deleteBiometric =(id,finger)=>{\r\n        axios.delete(`${baseUrl}biometrics/${id}`,{ headers: {\"Authorization\" : `Bearer ${token}`}}).then((response)=>{\r\n            toast.success(`${finger} deleted successfully`);\r\n            _.find(fingerType,{'display':finger}).captured = false;\r\n            setFingerType([...fingerType]);\r\n            let newStoredBiometrics = _.reject(storedBiometrics, {\"templateType\":finger});\r\n            setStoredBiometrics(newStoredBiometrics);\r\n            clear_storelist();\r\n            if(newStoredBiometrics.length === 0){\r\n                props.updatePatientBiometricStatus(false);\r\n            }\r\n        }).catch((error)=>{\r\n            toast.error(\"Something went wrong\");\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n\r\n    //Save Biometric capture\r\n    const saveBiometrics = (e) => {\r\n        e.preventDefault();\r\n        if(capturedFingered.length >= 1){\r\n            const capturedObj= capturedFingered[capturedFingered.length - 1];\r\n            capturedObj.capturedBiometricsList =_.uniqBy(capturedObj.capturedBiometricsList,\"templateType\")\r\n            axios.post(`${baseUrl}biometrics/templates`,capturedObj,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                .then(response => {\r\n                    toast.success(\"Biometric save successful\");\r\n                    setCapturedFingered([])\r\n                    getPersonBiometrics();\r\n                    props.patientObj.biometricStatus=true\r\n                    props.setActiveContent({...props.activeContent, route:'recent-history'})\r\n                    //props.updatePatientBiometricStatus(true);\r\n                })\r\n                .catch(error => {\r\n                    toast.error(\"Something went wrong saving biometrics\");\r\n                    console.log(error);\r\n                });\r\n        }else{\r\n\r\n            toast.error(\"You can't save less than 2 finger\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n\r\n            <div style={{display:\"flex\",width:'100%'}}>\r\n                <div className=\"\" style={{padding:'5px', flex:\"7\",boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px',minHeight:'400px'}}>\r\n                    {pageLoading && storedBiometrics.length > 0 ? (\r\n                            <div style={{display:\"flex\",width:'100%',flexWrap:'wrap'}}>\r\n                                {storedBiometrics.map((biometric, index)=>(\r\n                                    <div   key={index} style={{minHeight:'120px',padding:'5px', width:'20%'}}>\r\n                                        <div  className=\"card \" style={{borderRadius:\"6px\"}}>\r\n\r\n                                            <div className=\"card-header align-items-start\" style={{backgroundColor:'#fff'}}>\r\n                                                <div>\r\n                                                    <h6 className=\"fs-18 font-w500 mb-3 user-name\"><Link to={\"#\"} style={{color:'#014d88',fontSize:'14px',fontFamily:`\"poppins\",sans-serif`}}>{biometric.templateType}</Link></h6>\r\n                                                    <div className=\"fs-9 text-nowrap\" style={{fontSize:'10px',color:'#992E62', fontWeight:'bold',fontFamily:`\"poppins\",sans-serif`}}><i className=\"fa fa-calendar-o me-3\" aria-hidden=\"true\"></i>{moment(biometric.lastModifiedDate).format(\"YYYY-MM-DD HH:mm\")}</div>\r\n                                                </div>\r\n\r\n                                                {/*Action button -- Dropdown menu*/}\r\n                                                <Dropdown className=\"dropdown ms-auto\"  >\r\n                                                    <Dropdown.Toggle\r\n                                                        as=\"button\"\r\n                                                        variant=\"\"\r\n                                                        drop=\"up\"\r\n                                                        className=\"btn sharp btn-primary \"\r\n                                                        id=\"tp-btn\"\r\n                                                        style={{ backgroundColor: '#014d88', borderColor:'#014d88', borderRadius:'5px',marginRight:'-18px',marginTop:'-10px'}}\r\n                                                    >\r\n                                                        <svg\r\n                                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                                                            width=\"18px\"\r\n                                                            height=\"18px\"\r\n                                                            viewBox=\"0 0 24 24\"\r\n                                                            version=\"1.1\"\r\n                                                        >\r\n                                                            <g\r\n                                                                stroke=\"none\"\r\n                                                                strokeWidth=\"1\"\r\n                                                                fill=\"none\"\r\n                                                                fillRule=\"evenodd\"\r\n                                                            >\r\n                                                                <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"5\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"12\" r=\"2\" />\r\n                                                                <circle fill=\"#ffffff\" cx=\"12\" cy=\"19\" r=\"2\" />\r\n                                                            </g>\r\n                                                        </svg>\r\n                                                    </Dropdown.Toggle>\r\n                                                    <Dropdown.Menu alignRight={true} className=\"dropdown-menu-right\">\r\n                                                        <Dropdown.Item style={{color:'red'}} onClick={()=>deleteBiometric(biometric.id,biometric.templateType)}>\r\n                                                            <DeleteIcon /> Delete\r\n                                                        </Dropdown.Item>\r\n\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n\r\n                                            </div>\r\n                                            <div className=\"card-body p-0 pb-2\">\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    <li className=\"list-group-item\" style={{height:'100px', display:'flex',justifyContent:'center'}}>\r\n                                                        <img src={fingerprintimage}  alt=\"\" style={{height:'80px'}} />\r\n                                                    </li>\r\n\r\n                                                    <li className=\"list-group-item\">\r\n\r\n                                                        <Badge variant=\"info badge-xs light\" className=\"card-link float-end\">Version {/*{contact.version}*/}</Badge>\r\n                                                        <span className=\"mb-0 title\">Status {biometric.iso}</span> :\r\n                                                        <span className=\"text-black desc-text ms-2\">\r\n                                                        <Badge variant={biometric.iso===true? \"primary badge-xs\": \"danger badge-xs\"}><i className=\"fa fa-check-square me-2 scale4\" aria-hidden=\"true\"></i> </Badge>\r\n                                                    </span>\r\n                                                    </li>\r\n\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                ))}\r\n                            </div>\r\n                        )\r\n                        :\r\n                        <>\r\n                            <div className=\"flex-grow-8\">\r\n                                <div  className=\"flex-grow-8\"  >\r\n                                    <Alert severity=\"info\">\r\n                                        <AlertTitle style={{height:'400px'}}>\r\n                                            <strong>No biometrics captured</strong>\r\n                                        </AlertTitle>\r\n                                    </Alert>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n                    <div style={{flex:\"3\",padding:'5px',marginLeft:'5px',border:'1px solid rgba(99, 99, 99, 0.2)',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\r\n                        <div className=\"col-12\">\r\n                            <ToastContainer />\r\n                            <Col md={12}>\r\n                                <FormGroup>\r\n                                    <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Device </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"device\"\r\n                                        id=\"device\"\r\n                                        onChange={checkDevice}\r\n                                        value={objValues.device}\r\n                                        required\r\n                                    >\r\n                                        <option value=\"\">Select Device </option>\r\n                                        {biometricDevices.map(({ id, name }) => (\r\n                                            <option key={id} value={name}>\r\n                                                {name}\r\n                                            </option>\r\n                                        ))}\r\n\r\n                                    </Input>\r\n                                    {errors.device !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.device}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {showCapture ? (\r\n                                    <div className=\"row col-12\">\r\n                                        <Col md={6}>\r\n                                            <FormGroup>\r\n                                                <Label for='device' style={{color:'#014d88',fontWeight:'bold',fontSize:'14px' }}>Select Finger</Label>\r\n                                                <Input\r\n                                                    type=\"select\"\r\n                                                    name=\"templateType\"\r\n                                                    id=\"templateType\"\r\n                                                    onChange={handleInputChange}\r\n                                                    value={objValues.templateType}\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Select Finger </option>\r\n\r\n                                                    {_.filter(fingerType, ['captured', false]).map((value) => (\r\n                                                        <option key={value.id} value={value.display}>\r\n                                                            {value.display}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </Input>\r\n                                                {errors.templateType !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.templateType}</span>\r\n                                                ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </Col>\r\n\r\n\r\n                                        <Col md={6}>\r\n\r\n                                            <MatButton\r\n                                                type='button'\r\n                                                variant='contained'\r\n                                                color='primary'\r\n                                                onClick={captureFinger}\r\n                                                className={'mt-4'}\r\n                                                style={{backgroundColor:'#992E62'}}\r\n                                                startIcon={<FingerprintIcon />}\r\n                                            >\r\n                                                Capture Finger\r\n                                            </MatButton>\r\n\r\n                                        </Col>\r\n                                        <br/>\r\n\r\n                                    </div>\r\n                                )\r\n                                :\r\n                                \"\"\r\n                            }\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} style={{marginTop:\"10px\", paddingBottom:'20px'}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',border:'1px dotted #014d88',margin:'5px'}}>\r\n                                                            <List.Header style={{ paddingLeft:\"0px\", height:'0.5rem',display:'flex', justifyContent:'right',alignItems: 'right'}}><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content style={{width:'200px',height:'160px',display:'flex', justifyContent:'center',alignItems: 'center'}}> <FingerprintIcon style={{color:\"#992E62\", fontSize: 150}}/></List.Content>\r\n                                                            <List.Content style={{width:'200px',height:'30px',display:'flex', justifyContent:'center',alignItems: 'center', fontSize: '18px',color:'#014d88',fontWeight:'bold', fontFamily:'\"poppins\", sans-serif'}}>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Form >\r\n\r\n                    <Card>\r\n                         <CardHeader>\r\n                                    Capture Biometrics\r\n                                </CardHeader>\r\n                        <CardBody>\r\n                            <Row form>\r\n                                <ToastContainer />\r\n                                <Col md={4}>\r\n                                    <FormGroup>\r\n                                        <Label for='device'>Select Device </Label>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"device\"\r\n                                            id=\"device\"\r\n                                            onChange={checkDevice}\r\n                                            value={objValues.device}\r\n                                            required\r\n                                        >\r\n                                            <option value=\"\">Select Device </option>\r\n                                            {biometricDevices.map(({ id, name }) => (\r\n                                                <option key={id} value={name}>\r\n                                                    {name}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                        </Input>\r\n                                        {errors.device !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.device}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                {showCapture ? (\r\n                                        <>\r\n                                            <Col md={4}>\r\n                                                <FormGroup>\r\n                                                    <Label for='device'>Select Finger</Label>\r\n                                                    <Input\r\n                                                        type=\"select\"\r\n                                                        name=\"templateType\"\r\n                                                        id=\"templateType\"\r\n                                                        onChange={handleInputChange}\r\n                                                        value={objValues.templateType}\r\n                                                        required\r\n                                                    >\r\n                                                        <option value=\"\">Select Finger </option>\r\n\r\n                                                        {fingerType.map((value) => (\r\n                                                            <option key={value.id} value={value.display}>\r\n                                                                {value.display}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Input>\r\n                                                    {errors.templateType !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.templateType}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </Col>\r\n\r\n\r\n                                            <Col md={4}>\r\n\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={captureFinger}\r\n                                                    className={'mt-4'}\r\n                                                    startIcon={<FingerprintIcon />}\r\n                                                >\r\n                                                    Capture Finger\r\n                                                </MatButton>\r\n\r\n                                            </Col>\r\n                                            <br/>\r\n\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                                 <img width='500' height='200' src={responseImage}/>\r\n                                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n\r\n                                    {loading && (\r\n                                        <>\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        {success ? <CheckIcon /> : <FingerprintIcon />}\r\n                                                    </Fab>\r\n                                                    {loading && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: green[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    {success ?` your  ${objValues.templateType} Finger captured.` : `Please place your  ${objValues.templateType} Finger on scanner.`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n                                    {tryAgain && (\r\n                                        <>\r\n\r\n\r\n                                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                                                <Box sx={{ m: 1, position: 'relative' }}>\r\n                                                    <Fab\r\n                                                        aria-label=\"save\"\r\n                                                        color=\"secondary\"\r\n                                                        sx={buttonSx}\r\n\r\n                                                    >\r\n                                                        <FingerprintIcon />\r\n                                                    </Fab>\r\n                                                    {tryAgain && (\r\n                                                        <CircularProgress\r\n                                                            size={68}\r\n                                                            sx={{\r\n                                                                color: red[500],\r\n                                                                position: 'absolute',\r\n                                                                top: -6,\r\n                                                                left: -6,\r\n                                                                zIndex: 1,\r\n                                                            }}\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                    Click to Recapture Again\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </>\r\n                                    )\r\n                                    }\r\n\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                {capturedFingered.length >=1 ? (\r\n                                        <>\r\n                                            <Col md={12} >\r\n                                                <h3>Captured Fingerprints</h3>\r\n                                            </Col>\r\n                                            <Col md={12} style={{marginTop:\"20px\"}}>\r\n                                                <List celled horizontal>\r\n                                                    {capturedFingered.map((x) => (\r\n                                                        <List.Item style={{width:'200px',height:'200px',display:'flex', justifyContent:'center',alignItems: 'center'}}>\r\n                                                             <List.Header><Icon name='cancel'  color='red' /> </List.Header>\r\n                                                            <List.Content> <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}}/>{x.templateType}</List.Content>\r\n                                                        </List.Item>\r\n                                                    ))}\r\n\r\n                                                </List>\r\n\r\n                                            </Col>\r\n                                             <Col md={6} style={{marginTop:\"20px\"}}>\r\n                                        <List celled horizontal>\r\n                                            {[1,2,3].map((x) => (\r\n                                                <List.Item>\r\n                                                    <List.Header><Icon name='checkmark' color='green'/> </List.Header>\r\n                                                    <List.Content > <FingerprintIcon style={{color:\"#2E7D32\", fontSize: 40}} /> Finger Type</List.Content>\r\n                                                </List.Item>\r\n                                            ))}\r\n\r\n                                        </List>\r\n\r\n                                    </Col>\r\n                                            <br/><br/><br/><br/><br/><br/>\r\n                                            <Col md={12} >\r\n                                                <MatButton\r\n                                                    type='button'\r\n                                                    variant='contained'\r\n                                                    color='primary'\r\n                                                    onClick={saveBiometrics}\r\n                                                    // className={classes.button}\r\n                                                    startIcon={<SaveIcon/>}\r\n                                                >\r\n                                                    Save Capture\r\n                                                </MatButton>\r\n                                            </Col>\r\n                                        </>\r\n                                    )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n            </Form>\r\n*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Biometrics;","import React,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport PatientCardDetail from './PatientCard'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SubMenu from './SubMenu';\r\nimport RecentHistory from './../History/RecentHistory';\r\nimport PatientHistory from './../History/PatientHistory'\r\nimport ClinicVisit from '../Consultation/Index'\r\nimport PrEPCommencementForm from './../PrepServices/PrEPCommencementForm';\r\nimport PrEPDiscontinuationsInterruptions from './../PrepServices/PrEPDiscontinuationsInterruptions';\r\nimport PrEPEligibiltyScreeningForm from './../PrepServices/PrEPEligibiltyScreeningForm';\r\nimport PrEPVisit from './../PrepServices/PrEPVisit';\r\nimport PrEPRegistrationForm from './../PrepServices/PrEPRegistrationForm';\r\nimport Biometrics from './Biometric'\r\nimport axios from \"axios\";\r\nimport { url as baseUrl, token } from \"./../../../api\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '20.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction PatientCard(props) {\r\n    let history = useHistory();\r\n    const [patientDetail, setPatientDetail] = useState(\"\")\r\n    const [activeContent, setActiveContent] = useState({route:\"recent-history\", id:\"\", activeTab:\"home\", actionType:\"create\", obj:{}});\r\n    const { classes } = props;\r\n    const patientObjLocation = history.location && history.location.state ? history.location.state.patientObj : {}\r\n    //let patientObj =\"\"\r\n    const prepId = history.location && history.location.state ? history.location.state.prepId : {}\r\n    //console.log(patientObj)\r\n    useEffect(() => {\r\n      PatientObject()\r\n     }, []);\r\n     async function PatientObject() {\r\n      axios\r\n          .get(`${baseUrl}prep/persons/${patientObjLocation.personId}`,\r\n          { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n          )\r\n          .then((response) => {\r\n            setPatientDetail(response.data);\r\n            //patientObj=response.data\r\n          })\r\n          .catch((error) => {    \r\n          });        \r\n    }\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Patient Dashboard</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n      <Card >\r\n        <CardContent>\r\n            <PatientCardDetail patientObj={patientDetail}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>            \r\n            <SubMenu patientObj={patientObjLocation}  setActiveContent={setActiveContent} patientDetail={patientDetail}/>\r\n            <br/>\r\n          {activeContent.route==='recent-history' &&(<RecentHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='biometrics' &&(<Biometrics patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='consultation' &&( <ClinicVisit patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {/* {activeContent==='child-consultation' &&( <ChildConsultation patientObj={patientObj} setActiveContent={setActiveContent}/>)} */}\r\n          {activeContent.route==='prep-commencement' &&( <PrEPCommencementForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)}\r\n          {activeContent.route==='prep-interruptions' &&( <PrEPDiscontinuationsInterruptions patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} PatientObject={PatientObject}/>)}\r\n          {activeContent.route==='prep-screening' &&( <PrEPEligibiltyScreeningForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId} patientDetail={patientDetail}/>)}\r\n          {activeContent.route==='prep-visit' &&( <PrEPVisit />)}\r\n          {activeContent.route==='prep-registration' &&( <PrEPRegistrationForm patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent} prepId={prepId}/>)} \r\n          {activeContent.route==='patient-history' &&( <PatientHistory patientObj={patientObjLocation} setActiveContent={setActiveContent} activeContent={activeContent}/>)}         \r\n          {/* History Pages */}\r\n         \r\n         </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPatientCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PatientCard);\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport  './patient.css'\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    },  \r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    },\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n                \r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    //const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n                                    dateEnrolled: \"\",\r\n                                    dateOfLastHivNegativeTest: \"\",\r\n                                    dateReferredForPrep: \"\",\r\n                                    extra: {},\r\n                                    hivTestingPoint: \"\",\r\n                                    prepRiskType: \"\",\r\n                                    personDto:{},\r\n                                    personId: 0,\r\n                                    prepSupporter: \"\",\r\n                                    uniqueClientId: \"\",\r\n                                    ancUnique:\"\"\r\n                                });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n\r\n     //status for hospital Number \r\n     const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n     const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    patientId = locationState ? locationState.patientId : null;\r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n    \r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n          \r\n    }, [basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            \r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n        console.log(getCountryId)\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }   \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n                if(m<18){\r\n                    alert(\"The child is less than 18months\")\r\n                    setDisabledAgeBaseOnAge(true)\r\n                }else{\r\n                    setDisabledAgeBaseOnAge(false)\r\n                }\r\n                if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n                basicInfo.age=age_now\r\n                //setBasicInfo({...basicInfo, age: age_now});        \r\n                } else {\r\n                    setBasicInfo({...basicInfo, age:  \"\"});\r\n                }\r\n                setBasicInfo({...basicInfo, dob: e.target.value});\r\n                if(basicInfo.age!=='' && basicInfo.age>=60){\r\n                    toggle()\r\n                }\r\n           \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='377') {\r\n            setfemaleStatus(true)\r\n        } \r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n        async function getHosiptalNumber() {\r\n            const hosiptalNumber=e.target.value\r\n            const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                );\r\n            if(response.data!==true){\r\n                setHospitalNumStatus(false)\r\n                errors.hospitalNumber=\"\"\r\n                setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                setHospitalNumStatus2(true)\r\n            }else{\r\n                errors.hospitalNumber=\"\"\r\n                toast.error(\"Error! Hosiptal Number already exist\");\r\n                setHospitalNumStatus(true)\r\n                setHospitalNumStatus2(false)\r\n            }\r\n        }\r\n        getHosiptalNumber();\r\n        } \r\n                \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.phone = relatives.phone ? \"\" : \"Phone Number  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n            setRelatives({ \r\n                address:\"\",\r\n                phone:\"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                relationshipId: \"\",\r\n                lastName: \"\",\r\n                middleName: \"\"\r\n            })\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Gender is required.\"\r\n            temp.dateOfRegistration = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Registeration save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {  \r\n        setErrors({...errors, [e.target.name]: \"\"})         \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                   \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n\r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    \r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >Prep /</Link> Patient Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n          <Link\r\n                to={{\r\n                    pathname: \"/\",\r\n                    state: 'users'\r\n                }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\" float-end mr-10 pr-10\"\r\n                    style={{backgroundColor:'#014d88',fontWeight:\"bolder\", margingRight:\"-40px\"}}\r\n                    startIcon={<TiArrowBack />}\r\n                >\r\n                    <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                </Button>\r\n            </Link>\r\n            <br /><br/>\r\n  \r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    \r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {/* {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"} */}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.id}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                \r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        id=\"dob\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        \r\n                                                        type=\"number\"\r\n                                                        name=\"age\"                                                       \r\n                                                        className=\"form-control\"                                                        \r\n                                                        id=\"age\"\r\n                                                        min=\"1\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        id=\"ninNumber\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                   onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                   //onChange={(e)=>{handleInputChangeBasic(e,'phoneNumber')}}\r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    \r\n                                                />\r\n                                                 {/* {basicInfo.phoneNumber.length >13 ||  basicInfo.phoneNumber.length <13? (\r\n                                                <span className={classes.error}>{\"The maximum and minimum required number is 13 digit\"}</span>\r\n                                                ) : \"\" } */}\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    required\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            masks={{ng: '...-...-....', at: '(....) ...-....'}}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e,'phone')}}\r\n                                                                        />\r\n                                                                    {errors.phone !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.phone}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"email\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            required\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            \r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                            <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={handleSubmit}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                                onClick={handleCancel}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\nimport {  Modal } from \"react-bootstrap\";\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        \"& .card-title\":{\r\n            color:'#fff',\r\n            fontWeight:'bold'\r\n        },\r\n        \"& .form-control\":{\r\n            borderRadius:'0.25rem',\r\n            height:'41px'\r\n        },\r\n        \"& .card-header:first-child\": {\r\n            borderRadius: \"calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0\"\r\n        },\r\n        \"& .dropdown-toggle::after\": {\r\n            display: \" block !important\"\r\n        },\r\n        \"& select\":{\r\n            \"-webkit-appearance\": \"listbox !important\"\r\n        },\r\n        \"& p\":{\r\n            color:'red'\r\n        },\r\n        \"& label\":{\r\n            fontSize:'14px',\r\n            color:'#014d88',\r\n            fontWeight:'bold'\r\n        },\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [disabledAgeBaseOnAge, setDisabledAgeBaseOnAge] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({\r\n        dateEnrolled: \"\",\r\n        dateOfLastHivNegativeTest: \"\",\r\n        dateReferredForPrep: \"\",\r\n        extra: {},\r\n        hivTestingPoint: \"\",\r\n        prepRiskType: \"\",\r\n        personDto:{},\r\n        personId: 0,\r\n        prepSupporter: \"\",\r\n        uniqueClientId: \"\",\r\n        ancUnique:\"\"\r\n    });\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [newSex, setNewSex] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n     const [open, setOpen] = React.useState(false)\r\n     const toggle = () => setOpen(!open);\r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n\r\n    useEffect(() => { \r\n        loadGenders();\r\n        getSex();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n\r\n            const contacts =patientObj && patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(patientObj.contacts);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type === 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type === 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type === 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type === 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //const getSexId=  genders.length>0 && genders.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            //console.log(newSex)\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber && hospitalNumber ? hospitalNumber.value : ''\r\n            setObjValues ({...objValues,  uniqueId: hospitalNumber ? hospitalNumber.value : ''});\r\n            basicInfo.maritalStatusId=patientObj && patientObj.maritalStatus ? patientObj.maritalStatus.id : \"\"\r\n            basicInfo.employmentStatusId=patientObj && patientObj.employmentStatus ? patientObj.employmentStatus.id :\"\"\r\n            basicInfo.genderId=patientObj && patientObj.gender ? patientObj.gender.id : null\r\n            //basicInfo.sexId=patientObj.sex\r\n            basicInfo.educationId=patientObj && patientObj.education ? patientObj.education.id : \"\"\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value :\"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value :\"\"\r\n            basicInfo.email=email && email.value ? email.value :\"\"\r\n            basicInfo.address=country  && country.city ? country.city :\"\"\r\n            basicInfo.landmark=country.line && country.line.length>0 ? country.line[0]: \"\"\r\n            basicInfo.countryId=country && country.countryId  ? country.countryId  :\"\"\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country && country.stateId  ? country.stateId  :\"\")\r\n            basicInfo.stateId=country && country.stateId  ? country.stateId  :\"\"\r\n            basicInfo.district=country && country.district ? country.district :\"\"\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            if(patientObj.age<=14){\r\n                setOvcEnrolled(true)\r\n            }\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n    //Get list of Source of Referral\r\n    const getSex =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/SEX`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            const getSexId=  response.data.find((x)=> x.display===patientObj.sex)//get patient sex ID by filtering the request\r\n            basicInfo.sexId=getSexId.display\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n}\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n    };\r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setErrors({...errors, [e.target.name]: \"\"})\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if(m<18){\r\n                alert(\"The child is less than 18months\")\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        if(basicInfo.age!=='' && basicInfo.age>=60){\r\n            toggle()\r\n        }\r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            if(e.target.value!=='' && e.target.value>=60){\r\n                toggle()\r\n            }\r\n            if(e.target.value <=1){\r\n                setDisabledAgeBaseOnAge(true)\r\n            }else{\r\n                setDisabledAgeBaseOnAge(false)\r\n            }\r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: Math.abs(e.target.value)});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n     /*****  Validation  */\r\n     const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.uniqueClientId = objValues.uniqueClientId ? \"\" : \"Unique ID is required.\"\r\n            temp.dateEnrolled = objValues.dateEnrolled ? \"\" : \"Date enrolled is required.\" \r\n            temp.dateOfLastHivNegativeTest = objValues.dateOfLastHivNegativeTest ? \"\" : \"date of last HIV test is required.\" \r\n            temp.dateReferredForPrep = objValues.dateReferredForPrep ? \"\" : \"Date referred is required.\" \r\n            temp.hivTestingPoint = objValues.hivTestingPoint ? \"\" : \"Hiv test point is required.\" \r\n            temp.prepRiskType = objValues.prepRiskType ? \"\" : \"PrEp risk type is required.\" \r\n            temp.prepSupporter = objValues.prepSupporter ? \"\" : \"PrEp supporter is required.\" \r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='ninNumber' && e.target.value!==''){\r\n            const ninNumberValue = checkNINLimit(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: ninNumberValue});\r\n        }\r\n                   \r\n    } \r\n    \r\n    const checkNINLimit=(e)=>{\r\n        const limit = 11;        \r\n        const acceptedNumber= e.slice(0, limit)\r\n        return  acceptedNumber   \r\n    }\r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };   \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    \r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => { \r\n        setErrors({...errors, [e.target.name]: \"\"})       \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n                \r\n    }        \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n        setErrors({...errors, [inputName]: \"\"})    \r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId && getSexId.id ? getSexId.id : \"\"\r\n        let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n         if(validate()){\r\n            try {\r\n                const patientForm = {\r\n                    id:\"\",\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.sexId,\r\n                    sexId: basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber:basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                //objValues.personDto=patientForm;\r\n                objValues.personId=patientId;\r\n                const response = await axios.post(`${baseUrl}prep`, objValues, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\" Register save successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"An error occured while registering a patient !\";\r\n                    toast.error(errorMessage, {\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"row page-titles mx-0\" style={{marginTop:\"0px\", marginBottom:\"-10px\"}}>\r\n\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item active\"><h4> <Link to={\"/\"} >PrEP /</Link> Registration</h4></li>\r\n\t\t\t</ol>\r\n\t\t  </div>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Link\r\n                        to={{\r\n                            pathname: \"/\",\r\n                            state: 'users'\r\n                        }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>{userDetail===null ? \"Basic Information\" : \"Edit User Information\"}</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        min=\"1983-12-31\"\r\n                                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={1094328}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {(errors.sexId !==\"\" || errors.sexId !==null) ? (\r\n                                                        <span className={classes.error}>{errors.sexId}</span>\r\n                                                        ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        min=\"1940-01-01\"\r\n                                                        max={basicInfo.dateOfRegistration}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"ninNumber\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"ninNumber\"\r\n                                                        id=\"ninNumber\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    \r\n                                                />\r\n                                                {(errors.phoneNumber !==\"\" || errors.phoneNumber !==null) ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                           \r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>Prep  Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                            <h2>PrEP Registration </h2>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"uniqueId\">Unique Client's ID  * </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"uniqueClientId\"\r\n                                    id=\"uniqueClientId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.uniqueClientId}\r\n                                    required\r\n                                />\r\n                                {errors.uniqueClientId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueClientId}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"\">Partner ANC/Unique ART No </Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"ancUnique\"\r\n                                    id=\"ancUnique\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.ancUnique}\r\n                                    required\r\n                                />\r\n                                {errors.ancUnique !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.ancUnique}</span>\r\n                                ) : \"\" }\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >Date enrolled in PrEP *</Label>\r\n                                <Input\r\n                                    className=\"form-control\"\r\n                                    type=\"date\"\r\n                                    name=\"dateEnrolled\"\r\n                                    id=\"dateEnrolled\"\r\n                                    value={objValues.dateEnrolled}\r\n                                    onChange={handleInputChange}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                />\r\n                                    {errors.dateEnrolled !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateEnrolled}</span>\r\n                                    ) : \"\" } \r\n                                </FormGroup>\r\n                            </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">PrEP Risk Type*</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"prepRiskType\"\r\n                                    id=\"prepRiskType\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.prepRiskType}\r\n                                    required\r\n                                >\r\n                                <option value=\"\"> </option>\r\n                    \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                 {errors.prepRiskType !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepRiskType}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                               \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Testing Point </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"hivTestingPoint\"\r\n                                    id=\"hivTestingPoint\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.hivTestingPoint}\r\n                                    required\r\n                                >\r\n                                <option value=\"Select\"> </option>\r\n                    \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.code}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                               \r\n                                </Input>\r\n                                {errors.hivTestingPoint !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.hivTestingPoint}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n                            \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of last HIV Negative test*</Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateOfLastHivNegativeTest\"\r\n                                        id=\"dateOfLastHivNegativeTest\"\r\n                                        value={objValues.dateOfLastHivNegativeTest}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                     {errors.dateOfLastHivNegativeTest !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateOfLastHivNegativeTest}</span>\r\n                                    ) : \"\" }   \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date Referred for PrEP * </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"date\"\r\n                                        name=\"dateReferredForPrep\"\r\n                                        id=\"dateReferredForPrep\"\r\n                                        value={objValues.dateReferredForPrep}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.dateReferredForPrep !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateReferredForPrep}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >PrEP Supporter </Label>\r\n                                    <Input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"prepSupporter\"\r\n                                        id=\"prepSupporter\"\r\n                                        value={objValues.prepSupporter}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                    />\r\n                                    {errors.prepSupporter !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.prepSupporter}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n\r\n                            <MatButton\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                                disabled={disabledAgeBaseOnAge}\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {!saving ? (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Save</span>\r\n                                ) : (\r\n                                    <span style={{ textTransform: \"capitalize\" }}>Saving...</span>\r\n                                )}\r\n                            </MatButton>\r\n    \r\n                            <MatButton\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                startIcon={<CancelIcon />}\r\n                                onClick={handleCancel}\r\n                                style={{backgroundColor:'#992E62'}}\r\n                            >\r\n                                <span style={{ textTransform: \"capitalize\", color:\"#fff\"  }}>Cancel</span>\r\n                            </MatButton>\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Modal show={open} toggle={toggle} className=\"fade\" size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered backdrop=\"static\">\r\n             <Modal.Header >\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Notification!\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n                <Modal.Body>\r\n                    <h4>Are you Sure of the Age entered?</h4>\r\n                    \r\n                </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={toggle} style={{backgroundColor:\"#014d88\", color:\"#fff\"}}>Yes</Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {format} from 'date-fns';\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FormGroup, Label, Spinner,Input,Form} from \"reactstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {faCheckSquare, faCoffee, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport * as moment from 'moment';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"react-widgets/dist/css/react-widgets.css\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {TiArrowBack} from 'react-icons/ti'\r\nimport {useForm} from \"react-hook-form\";\r\nimport {token, url as baseUrl } from \"../../../api\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { getValue } from \"@syncfusion/ej2-base\";\r\nimport  './patient.css'\r\n// import Form from 'react-bootstrap/Form';\r\n\r\n\r\n\r\nlibrary.add(faCheckSquare, faCoffee, faEdit, faTrash);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20,\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 300,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 752,\r\n    },\r\n    demo: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    inline: {\r\n        display: \"inline\",\r\n    },\r\n    error:{\r\n        color: '#f85032',\r\n        fontSize: '12.8px'\r\n    }\r\n}));\r\n\r\n\r\nconst UserRegistration = (props) => {\r\n    console.log(props)\r\n    const [basicInfo, setBasicInfo]= useState(\r\n            {\r\n                active: true,\r\n                address: [],\r\n                contact: [],\r\n                contactPoint: [],\r\n                dateOfBirth: \"\",\r\n                deceased: false,\r\n                deceasedDateTime: null,\r\n                firstName: \"\",\r\n                genderId: \"\",\r\n                identifier: \"\",\r\n                otherName: \"\",\r\n                maritalStatusId: \"\",\r\n                educationId: \"\",\r\n                employmentStatusId:\"\",\r\n                dateOfRegistration: \"\",\r\n                isDateOfBirthEstimated: null,\r\n                age:\"\",\r\n                phoneNumber:\"\",\r\n                altPhonenumber:\"\",\r\n                dob:\"\",\r\n                countryId:\"\",\r\n                stateId:\"\",\r\n                district:\"\",\r\n                landmark:\"\",\r\n                sexId:\"\",\r\n                ninNumber:\"\"\r\n\r\n            }\r\n    )\r\n    const [relatives, setRelatives]= useState(\r\n                { \r\n                    address:\"\",\r\n                    phone:\"\",\r\n                    firstName: \"\",\r\n                    email: \"\",\r\n                    relationshipId: \"\",\r\n                    lastName: \"\",\r\n                    middleName: \"\"\r\n                }\r\n        )\r\n\r\n    const [today, setToday] = useState(new Date().toISOString().substr(0, 10).replace('T', ' '));\r\n    const [contacts, setContacts] = useState([]);\r\n    const [saving, setSaving] = useState(false);\r\n    const [ageDisabled, setAgeDisabled] = useState(true);\r\n    const [showRelative, setShowRelative] = useState(false);\r\n    const [editRelative, setEditRelative] = useState(null);\r\n    const [genders, setGenders]= useState([]);\r\n    const [maritalStatusOptions, setMaritalStatusOptions]= useState([]);\r\n    const [educationOptions, setEducationOptions]= useState([]);\r\n    const [occupationOptions, setOccupationOptions]= useState([]);\r\n    const [relationshipOptions, setRelationshipOptions]= useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [states, setStates] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [errors, setErrors] = useState({})\r\n    const [topLevelUnitCountryOptions, settopLevelUnitCountryOptions]= useState([]);\r\n    const [patientDTO, setPatientDTO]= useState({\"person\":\"\", \"hivEnrollment\":\"\"})\r\n    const userDetail = props.location && props.location.state ? props.location.state.user : null;\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n     //HIV INFORMATION\r\n     const [femaleStatus, setfemaleStatus]= useState(false)\r\n     //const [values, setValues] = useState([]);\r\n     const [objValues, setObjValues] = useState({id:\"\", uniqueId: \"\",dateOfRegistration:\"\",entryPointId:\"\", facilityName:\"\",statusAtRegistrationId:\"\",dateConfirmedHiv:\"\",sourceOfReferrerId:\"\",enrollmentSettingId:\"\",pregnancyStatusId:\"\",dateOfLpm:\"\",tbStatusId:\"\",targetGroupId:\"\",ovc_enrolled:\"\",ovcNumber:\"\",\r\n     householdNumber:\"\", referredToOVCPartner:\"\", dateReferredToOVCPartner:\"\",\r\n     referredFromOVCPartner:\"\", dateReferredFromOVCPartner:\"\",\r\n     careEntryPointOther:\"\"});\r\n     const [carePoints, setCarePoints] = useState([]);\r\n     const [sourceReferral, setSourceReferral] = useState([]);\r\n     const [hivStatus, setHivStatus] = useState([]);\r\n     const [enrollSetting, setEnrollSetting] = useState([]);\r\n     const [tbStatus, setTbStatus] = useState([]);\r\n     const [kP, setKP] = useState([]);\r\n     const [pregnancyStatus, setPregnancyStatus] = useState([]);\r\n     //set ro show the facility name field if is transfer in \r\n     const [transferIn, setTransferIn] = useState(false);\r\n     // display the OVC number if patient is enrolled into OVC \r\n     const [ovcEnrolled, setOvcEnrolled] = useState(false);\r\n     //Input fields to hidden base on some conditions\r\n     const [hideTargetGroup, setHideTargetGroup]= useState(\"false\");\r\n    \r\n    const locationState = location.state;\r\n    let patientId = null;\r\n    let patientObj = {};\r\n    patientId = locationState ? locationState.patientId : null;\r\n    patientObj = locationState ? locationState.patientObj : {}; \r\n    //status for hospital Number \r\n    const [hospitalNumStatus, setHospitalNumStatus]= useState(false);\r\n    const [hospitalNumStatus2, setHospitalNumStatus2]= useState(false);\r\n    \r\n    useEffect(() => { \r\n        loadGenders();\r\n        loadMaritalStatus();\r\n        loadEducation();\r\n        loadOccupation();\r\n        loadRelationships();\r\n        loadTopLevelCountry();        \r\n        CareEntryPoint();\r\n        SourceReferral();\r\n        HivStatus();\r\n        EnrollmentSetting();\r\n        TBStatus();\r\n        KP();\r\n        PregnancyStatus();\r\n        GetCountry();\r\n        if(patientObj){\r\n            const contacts = patientObj.contact ? patientObj.contact : [];\r\n            //setContacts(contacts.contact);\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts.contact && contacts.contact.length>0 && contacts.contact.map((x)=>{ \r\n                const contactInfo = \r\n                    { \r\n                        address:x.address.line[0],\r\n                        phone:x.contactPoint.value,\r\n                        firstName:x.firstName,\r\n                        email: \"\",\r\n                        relationshipId: x.relationshipId,\r\n                        lastName: x.surname,\r\n                        middleName: x.otherName\r\n                    }\r\n                newConatctsInfo.push(contactInfo)\r\n            })\r\n            setContacts(newConatctsInfo);\r\n            const identifiers = patientObj.identifier;\r\n            const address = patientObj.address;\r\n            const contactPoint = patientObj.contactPoint;\r\n            const hospitalNumber = identifiers.identifier.find(obj => obj.type == 'HospitalNumber');\r\n            const phone = contactPoint.contactPoint.find(obj => obj.type == 'phone');\r\n            const email = contactPoint.contactPoint.find(obj => obj.type == 'email');\r\n            const altphone = contactPoint.contactPoint.find(obj => obj.type == 'altphone');\r\n            const country = address && address.address && address.address.length > 0 ? address.address[0] : null;\r\n            //setValue('dob', format(new Date(patientObj.dateOfBirth), 'yyyy-MM-dd'));\r\n            basicInfo.dob=patientObj.dateOfBirth\r\n            basicInfo.firstName=patientObj.firstName\r\n            basicInfo.dateOfRegistration=patientObj.dateOfRegistration\r\n            basicInfo.middleName=patientObj.otherName\r\n            basicInfo.lastName=patientObj.surname\r\n            basicInfo.hospitalNumber=hospitalNumber ? hospitalNumber.value : ''\r\n            basicInfo.maritalStatusId=patientObj.maritalStatus.id\r\n            basicInfo.employmentStatusId=patientObj.employmentStatus.id\r\n            basicInfo.genderId=patientObj.gender ? patientObj.gender.id : null\r\n            basicInfo.sexId=patientObj.sex \r\n            basicInfo.educationId=patientObj.education.id\r\n            basicInfo.phoneNumber=phone && phone.value ? phone.value : \"\"\r\n            basicInfo.altPhonenumber= altphone && altphone.value ? altphone.value : \"\"\r\n            basicInfo.email=email && email.value ? email.value : \"\"\r\n            basicInfo.address=country && country.city ? country.city : \"\"\r\n            basicInfo.landmark=country.line[0]\r\n            basicInfo.countryId=country.countryId\r\n            setStateByCountryId(country.countryId); \r\n            getProvincesId(country.stateId)\r\n            basicInfo.stateId=country.stateId\r\n            basicInfo.district=country.district\r\n            setObjValues(patientObj.enrollment)\r\n            const patientAge=calculate_age(moment(patientObj.dateOfBirth).format(\"DD-MM-YYYY\"))\r\n            basicInfo.age=patientAge\r\n            setfemaleStatus(patientObj.sex==='Female'? true : false)\r\n            basicInfo.ninNumber=patientObj.ninNumber\r\n\r\n        }\r\n        if(basicInfo.dateOfRegistration < basicInfo.dob){\r\n            alert('Date of registration can not be earlier than date of birth')\r\n        }\r\n        \r\n    }, [patientObj, patientId, basicInfo.dateOfRegistration]);\r\n\r\n    const loadGenders = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/SEX`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setGenders(response.data);\r\n        } catch (e) {\r\n            \r\n        }\r\n    }, []);\r\n    const loadMaritalStatus = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/MARITAL_STATUS`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setMaritalStatusOptions(response.data);\r\n        } catch (e) {\r\n        }\r\n    }, []);\r\n    const loadEducation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/EDUCATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setEducationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadOccupation = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`${baseUrl}application-codesets/v2/OCCUPATION`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n            setOccupationOptions(response.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    const loadRelationships = useCallback(async () => {\r\n      try {\r\n          const response = await axios.get(`${baseUrl}application-codesets/v2/RELATIONSHIP`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n          setRelationshipOptions(response.data);\r\n      } catch (e) {\r\n      }\r\n    }, []);\r\n    const loadTopLevelCountry = useCallback(async () => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/0`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        settopLevelUnitCountryOptions(response.data);\r\n    }, []);\r\n    const loadOrganisationUnitsByParentId = async (parentId) => {\r\n        const response = await axios.get(`${baseUrl}organisation-units/parent-organisation-units/${parentId}`, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n        return response.data;\r\n    };\r\n\r\n    //Country List\r\n      const GetCountry =()=>{\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/0`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setCountries(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });        \r\n    }\r\n    //Calculate Date of birth \r\n    const calculate_age = dob => {\r\n        var today = new Date();\r\n        var dateParts = dob.split(\"-\");\r\n        var dateObject = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);\r\n        var birthDate = new Date(dateObject); // create a date object directlyfrom`dob1`argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                    age_now--;\r\n                }\r\n            if (age_now === 0) {\r\n                    return m + \" month(s)\";\r\n                }\r\n                return age_now ;\r\n      };\r\n     //Get States from selected country\r\n     const getStates = e => {\r\n        const getCountryId =e.target.value;\r\n\r\n            setStateByCountryId(getCountryId); \r\n            setBasicInfo({ ...basicInfo, countryId: getCountryId });\r\n    };\r\n    //Get list of State\r\n    function setStateByCountryId(getCountryId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getCountryId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setStates(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    \r\n     //fetch province\r\n     const getProvinces = e => {\r\n            const stateId = e.target.value;\r\n            setBasicInfo({ ...basicInfo, stateId: e.target.value });\r\n            axios\r\n            .get(`${baseUrl}organisation-units/parent-organisation-units/${stateId}`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setProvinces(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });  \r\n    };\r\n    function getProvincesId(getStateId) {\r\n        axios\r\n        .get(`${baseUrl}organisation-units/parent-organisation-units/${getStateId}`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            setProvinces(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });  \r\n    }\r\n    //Date of Birth and Age handle \r\n    const handleDobChange = (e) => {\r\n        if (e.target.value) {\r\n            const today = new Date();\r\n            const birthDate = new Date(e.target.value);\r\n            let age_now = today.getFullYear() - birthDate.getFullYear();\r\n            const m = today.getMonth() - birthDate.getMonth();\r\n            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n                age_now--;\r\n            }\r\n            basicInfo.age=age_now\r\n            //setBasicInfo({...basicInfo, age: age_now});        \r\n        } else {\r\n            setBasicInfo({...basicInfo, age:  \"\"});\r\n        }\r\n        setBasicInfo({...basicInfo, dob: e.target.value});\r\n        \r\n    }\r\n    const handleDateOfBirthChange = (e) => {\r\n        if (e.target.value == \"Actual\") {\r\n            setAgeDisabled(true);\r\n        } else if (e.target.value == \"Estimated\") {\r\n            setAgeDisabled(false);\r\n        }\r\n    }\r\n    const handleAgeChange = (e) => {\r\n        if (!ageDisabled && e.target.value) {\r\n            \r\n            const currentDate = new Date();\r\n            currentDate.setDate(15);\r\n            currentDate.setMonth(5);\r\n            const estDob = moment(currentDate.toISOString());\r\n            const dobNew = estDob.add((e.target.value * -1), 'years');\r\n            //setBasicInfo({...basicInfo, dob: moment(dobNew).format(\"YYYY-MM-DD\")});\r\n            basicInfo.dob =moment(dobNew).format(\"YYYY-MM-DD\")\r\n\r\n        }\r\n        setBasicInfo({...basicInfo, age: e.target.value});\r\n    }\r\n    //End of Date of Birth and Age handling \r\n    //Handle Input Change for Basic Infor\r\n    const handleInputChangeBasic = e => {        \r\n        setBasicInfo ({...basicInfo,  [e.target.name]: e.target.value}); \r\n        //manupulate inpute fields base on gender/sex \r\n        if(e.target.name==='sexId' && e.target.value==='Female') {\r\n            setfemaleStatus(true)\r\n        }\r\n        if(e.target.name==='firstName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='lastName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='middleName' && e.target.value!==''){\r\n            const name = alphabetOnly(e.target.value)\r\n            setBasicInfo ({...basicInfo,  [e.target.name]: name});\r\n        }\r\n        if(e.target.name==='hospitalNumber' && e.target.value!==''){\r\n            async function getCharacters() {\r\n                const hosiptalNumber=e.target.value\r\n                const response = await axios.post(`${baseUrl}patient/exist/hospital-number`, hosiptalNumber,\r\n                        { headers: {\"Authorization\" : `Bearer ${token}`, 'Content-Type': 'text/plain'} }\r\n                    );\r\n                if(response.data!==true){\r\n                    setHospitalNumStatus(false)\r\n                    setObjValues ({...objValues,  uniqueId: e.target.value});\r\n                    setHospitalNumStatus2(true)\r\n                }else{\r\n                    setHospitalNumStatus(false)\r\n                    setHospitalNumStatus2(true)\r\n                }\r\n            }\r\n            getCharacters();\r\n            }  \r\n             \r\n    } \r\n    //Function to show relatives \r\n    const handleAddRelative = () => {\r\n        setShowRelative(true);\r\n    };\r\n    //Function to cancel the relatives form\r\n    const handleCancelSaveRelationship = () => {\r\n        setShowRelative(false);\r\n    }\r\n    const handleCancel =()=>{\r\n        history.push({ pathname: '/' });\r\n    }\r\n    /*****  Validation  Relationship Input*/\r\n    const validateRelatives = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = relatives.firstName ? \"\" : \"First Name is required\"\r\n            temp.lastName = relatives.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.relationshipId = relatives.relationshipId ? \"\" : \"Relationship Type is required.\"  \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n    //Function to add relatives \r\n    const handleSaveRelationship = (e) => {\r\n        if(validateRelatives()){\r\n            setContacts([...contacts, relatives])\r\n        }\r\n\r\n    }\r\n    const handleDeleteRelative = (index) => {\r\n        contacts.splice(index, 1);\r\n        setContacts([...contacts]);\r\n    };\r\n    const handleEditRelative = (relative, index) => {\r\n        setRelatives(relative)\r\n        setShowRelative(true);\r\n        contacts.splice(index, 1); \r\n    };     \r\n    const getRelationship = (relationshipId) => {\r\n        const relationship = relationshipOptions.find(obj => obj.id == relationshipId);\r\n        return relationship ? relationship.display : '';\r\n    };\r\n    const handleInputChangeRelatives = e => {        \r\n        setRelatives ({...relatives,  [e.target.name]: e.target.value});               \r\n    }\r\n    /*****  Validation  */\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n            temp.firstName = basicInfo.firstName ? \"\" : \"First Name is required\"\r\n            temp.hospitalNumber = basicInfo.hospitalNumber ? \"\" : \"Hospital Number  is required.\"\r\n            //temp.middleName = basicInfo.middleName ? \"\" : \"Middle is required.\"\r\n            //temp.landmark = basicInfo.landmark ? \"\" : \"This field is required.\"\r\n            temp.lastName = basicInfo.lastName ? \"\" : \"Last Name  is required.\"\r\n            temp.sexId = basicInfo.sexId ? \"\" : \"Sex is required.\"\r\n            temp.dateOfRegistration1 = basicInfo.dateOfRegistration ? \"\" : \"Date of Registration is required.\"\r\n            temp.educationId = basicInfo.educationId ? \"\" : \"Education is required.\"\r\n            temp.address = basicInfo.address ? \"\" : \"Address is required.\"\r\n            temp.phoneNumber = basicInfo.phoneNumber ? \"\" : \"Phone Number  is required.\"\r\n            temp.countryId = basicInfo.countryId ? \"\" : \"Country is required.\"    \r\n            temp.stateId = basicInfo.stateId ? \"\" : \"State is required.\"  \r\n            temp.district = basicInfo.district ? \"\" : \"Province/LGA is required.\" \r\n            //HIV FORM VALIDATION\r\n            temp.targetGroupId = objValues.targetGroupId ? \"\" : \"Target group is required.\"\r\n            temp.dateConfirmedHiv = objValues.dateConfirmedHiv ? \"\" : \"date confirm HIV is required.\"\r\n            temp.sourceOfReferrerId = objValues.sourceOfReferrerId ? \"\" : \"Source of referrer is required.\"\r\n            temp.enrollmentSettingId = objValues.enrollmentSettingId ? \"\" : \"Enrollment Setting Number  is required.\"\r\n            temp.tbStatusId = objValues.tbStatusId ? \"\" : \"TB status is required.\"    \r\n            temp.statusAtRegistrationId = objValues.statusAtRegistrationId ? \"\" : \"Status at Registration is required.\"  \r\n            temp.entryPointId = objValues.entryPointId ? \"\" : \"Care Entry Point is required.\" \r\n            temp.dateOfRegistration = objValues.dateOfRegistration ? \"\" : \"Date of Registration is required.\"  \r\n            temp.uniqueId = objValues.uniqueId ? \"\" : \"Unique ID is required.\"\r\n            \r\n                setErrors({ ...temp })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); \r\n        const getSexId=  genders.find((x)=> x.display===basicInfo.sexId)//get patient sex ID by filtering the request\r\n        basicInfo.sexId=getSexId.id\r\n         if(validate()){\r\n            let newConatctsInfo=[]\r\n            //Manipulate relatives contact  address:\"\",\r\n            const actualcontacts=contacts && contacts.length>0 && contacts.map((x)=>{\r\n                \r\n                const contactInfo = { \r\n                address: {\r\n                    line: [\r\n                        x.address\r\n                    ],\r\n                },\r\n                contactPoint: {\r\n                    type: \"phone\",\r\n                    value: x.phone\r\n                },\r\n                firstName: x.firstName,\r\n                fullName: x.firstName + \" \" + x.middleName + \" \" + x.lastName,\r\n                relationshipId: x.relationshipId,\r\n                surname: x.lastName,\r\n                otherName: x.middleName\r\n            }\r\n            \r\n            newConatctsInfo.push(contactInfo)\r\n            })\r\n            try {\r\n                const patientForm = {\r\n                    active: true,\r\n                    address: [\r\n                        {\r\n                            \"city\": basicInfo.address,\r\n                            \"countryId\": basicInfo.countryId,\r\n                            \"district\": basicInfo.district,\r\n                            \"line\": [\r\n                                basicInfo.landmark\r\n                            ],\r\n                            \"organisationUnitId\": 0,\r\n                            \"postalCode\": \"\",\r\n                            \"stateId\": basicInfo.stateId\r\n                        }\r\n                    ],\r\n                    contact: newConatctsInfo,\r\n                    contactPoint: [],\r\n                    dateOfBirth: basicInfo.dob,\r\n                    deceased: false,\r\n                    deceasedDateTime: null,\r\n                    firstName: basicInfo.firstName,\r\n                    genderId: basicInfo.genderId,\r\n                    sexId:basicInfo.sexId,\r\n                    identifier: [\r\n                        {\r\n                            \"assignerId\": 1,\r\n                            \"type\": \"HospitalNumber\",\r\n                            \"value\": basicInfo.hospitalNumber\r\n                        }\r\n                    ],\r\n                    otherName: basicInfo.middleName,\r\n                    maritalStatusId: basicInfo.maritalStatusId,\r\n                    surname: basicInfo.lastName,\r\n                    educationId: basicInfo.educationId,\r\n                    employmentStatusId: basicInfo.employmentStatusId,\r\n                    dateOfRegistration: basicInfo.dateOfRegistration,\r\n                    isDateOfBirthEstimated: basicInfo.dateOfBirth == \"Actual\" ? false : true,\r\n                    ninNumber: basicInfo.ninNumber\r\n                };\r\n                const phone = {\r\n                    \"type\": \"phone\",\r\n                    \"value\": basicInfo.phoneNumber\r\n                };\r\n                if (basicInfo.email) {\r\n                    const email = {\r\n                        \"type\": \"email\",\r\n                        \"value\": basicInfo.email\r\n                    }\r\n                    patientForm.contactPoint.push(email);\r\n                }\r\n                if (basicInfo.altPhonenumber) {\r\n                    const altPhonenumber = {\r\n                        \"type\": \"altphone\",\r\n                        \"value\": basicInfo.altPhonenumber\r\n                    }\r\n                    patientForm.contactPoint.push(altPhonenumber);\r\n                }\r\n                patientForm.contactPoint.push(phone);\r\n                patientForm.id = patientId;\r\n                patientDTO.person=patientForm;\r\n                patientDTO.hivEnrollment=objValues;\r\n                const response = await axios.put(`${baseUrl}hiv/patient/${patientObj.id}`, patientDTO, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                toast.success(\"Patient Updated successful\");\r\n                history.push('/');\r\n            } catch (error) {                \r\n                if(error.response && error.response.data){\r\n                    let errorMessage = error.response.data && error.response.data.apierror.message!==\"\" ? error.response.data.apierror.message :  \"Something went wrong, please try again\";\r\n                    toast.error(errorMessage); \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    const alphabetOnly=(value)=>{\r\n        const result = value.replace(/[^a-z]/gi, '');\r\n        return result\r\n    }\r\n   \r\n    const CareEntryPoint =()=>{\r\n            axios\r\n                .get(`${baseUrl}application-codesets/v2/POINT_ENTRY`,\r\n                    { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n                )\r\n                .then((response) => {\r\n                    //console.log(response.data);\r\n                    setCarePoints(response.data);\r\n                })\r\n                .catch((error) => {\r\n                //console.log(error);\r\n                });            \r\n    }\r\n    //Get list of Source of Referral\r\n    const SourceReferral =()=>{\r\n            axios\r\n            .get(`${baseUrl}application-codesets/v2/SOURCE_REFERRAL`,\r\n                { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                //console.log(response.data);\r\n                setSourceReferral(response.data);\r\n            })\r\n            .catch((error) => {\r\n            //console.log(error);\r\n            });        \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const HivStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/HIV_STATUS_ENROL`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setHivStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const EnrollmentSetting =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/ENROLLMENT_SETTING`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setEnrollSetting(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of HIV STATUS ENROLLMENT\r\n    const TBStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TB_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setTbStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const KP =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/TARGET_GROUP`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setKP(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    //Get list of KP\r\n    const PregnancyStatus =()=>{\r\n        axios\r\n        .get(`${baseUrl}application-codesets/v2/PREGANACY_STATUS`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n        )\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            setPregnancyStatus(response.data);\r\n        })\r\n        .catch((error) => {\r\n        //console.log(error);\r\n        });    \r\n    }\r\n    const handleInputChange = e => {        \r\n        setObjValues ({...objValues,  [e.target.name]: e.target.value});\r\n        if(e.target.name ===\"entryPointId\" ){\r\n            if(e.target.value===\"21\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }\r\n        if(e.target.name ===\"pregnancyStatusId\" ){\r\n            console.log(e.target.value)\r\n            if(e.target.value===\"72\"){\r\n                setTransferIn(true)\r\n            }else{\r\n                setTransferIn(false)\r\n            }\r\n        }                  \r\n    }    \r\n    \r\n    const checkPhoneNumber=(e, inputName)=>{\r\n        const limit = 10;\r\n            setRelatives({...relatives,  [inputName]: e.slice(0, limit)});     \r\n    }\r\n    const checkPhoneNumberBasic=(e, inputName)=>{\r\n        const limit = 10;\r\n\r\n            setBasicInfo({...basicInfo,  [inputName]: e.slice(0, limit)});     \r\n    } \r\n    //Handle CheckBox \r\n    const handleCheckBox =e =>{\r\n        if(e.target.checked){\r\n            setOvcEnrolled(true)\r\n        }else{\r\n            setOvcEnrolled(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Card className={classes.cardBottom}>\r\n                <CardContent>\r\n                <Link\r\n                    to={{\r\n                        pathname: \"/patient-history\",\r\n                        state: { patientObj: patientObj  }\r\n                    }}\r\n                >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\" float-end ms-1\"\r\n                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                            startIcon={<TiArrowBack />}\r\n                        >\r\n                            <span style={{ textTransform: \"capitalize\", color:'#fff' }}>Back </span>\r\n                        </Button>\r\n                    </Link>\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"col-xl-12 col-lg-12\">\r\n                        <Form >\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Edit User Information</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"basic-form\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"dateOfRegistration\">Date of Registration* </Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dateOfRegistration\"\r\n                                                        id=\"dateOfRegistration\"\r\n                                                        value={basicInfo.dateOfRegistration}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.dateOfRegistration1 !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.dateOfRegistration1}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            \r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">Hospital Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"hospitalNumber\"\r\n                                                        id=\"hospitalNumber\"\r\n                                                        value={basicInfo.hospitalNumber}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                        disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {errors.hospitalNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.hospitalNumber}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus===true ? (\r\n                                                        <span className={classes.error}>{\"Hospital number already exist\"}</span>\r\n                                                    ) : \"\" }\r\n                                                    {hospitalNumStatus2===true ? (\r\n                                                        <span className={classes.success}>{\"Hospital number is OK.\"}</span>\r\n                                                    ) :\"\"}\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">EMR Number* </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"emrNumber\"\r\n                                                        id=\"emrNumber\"\r\n                                                        disabled='true'\r\n                                                        value={Math.floor(Math.random() * 1094328)}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"firstName\">First Names *</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={basicInfo.firstName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                    {errors.firstName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.firstName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Middle Name</Label>\r\n                                                    <Input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"middleName\"\r\n                                                        id=\"middleName\"\r\n                                                        value={basicInfo.middleName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Last Name *</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={basicInfo.lastName}\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   {errors.lastName !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.lastName}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Sex *</Label>\r\n                                                    <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"sexId\"\r\n                                                            id=\"sexId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.sexId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                            \r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {genders.map((gender, index) => (\r\n                                                            <option key={gender.id} value={gender.display}>{gender.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.sexId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.sexId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-2 col-md-2\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date Of Birth</Label>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Actual\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                defaultChecked\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Actual\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"radio\">\r\n                                                        <label>\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                value=\"Estimated\"\r\n                                                                name=\"dateOfBirth\"\r\n                                                                //disabled={locationState.actionType==='update'? false : true}\r\n                                                                onChange={(e) => handleDateOfBirthChange(e)}\r\n                                                                style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            /> Estimated\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Date</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"date\"\r\n                                                        name=\"dob\"\r\n                                                        id=\"dob\"\r\n                                                        max={today}\r\n                                                        value={basicInfo.dob}\r\n                                                        onChange={handleDobChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3 col-md-3\">\r\n                                                <FormGroup>\r\n                                                    <Label>Age</Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"number\"\r\n                                                        name=\"age\"\r\n                                                        id=\"age\"\r\n                                                        value={basicInfo.age}\r\n                                                        disabled={ageDisabled}\r\n                                                        onChange={handleAgeChange}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className={\"row\"}>\r\n{/*                                            {watchShowAge >=0 &&\r\n                                            <>*/}\r\n                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Marital Status</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"maritalStatusId\"\r\n                                                            id=\"maritalStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.maritalStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {maritalStatusOptions.map((maritalStatusOption, index) => (\r\n                                                                <option key={maritalStatusOption.id} value={maritalStatusOption.id}>{maritalStatusOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        \r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group  col-md-4\">\r\n                                                    <FormGroup>\r\n                                                        <Label>Employment Status *</Label>\r\n                                                        <select\r\n                                                            className=\"form-control\"\r\n                                                            name=\"employmentStatusId\"\r\n                                                            id=\"employmentStatusId\"\r\n                                                            onChange={handleInputChangeBasic}\r\n                                                            value={basicInfo.employmentStatusId}\r\n                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                        >\r\n                                                            <option value={\"\"}>Select</option>\r\n                                                            {occupationOptions.map((occupationOption, index) => (\r\n                                                                <option key={occupationOption.id} value={occupationOption.id}>{occupationOption.display}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                        {errors.employmentStatusId !==\"\" ? (\r\n                                                        <span className={classes.error}>{errors.employmentStatusId}</span>\r\n                                                        ) : \"\" }\r\n                                                    </FormGroup>\r\n                                                </div>\r\n\r\n                                            <div className=\"form-group  col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label>Education Level *</Label>\r\n                                                    <select\r\n                                                        className=\"form-control\"\r\n                                                        name=\"educationId\"\r\n                                                        id=\"educationId\"\r\n                                                        onChange={handleInputChangeBasic}\r\n                                                        value={basicInfo.educationId}\r\n                                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                        <option value={\"\"}>Select</option>\r\n                                                        {educationOptions.map((educationOption, index) => (\r\n                                                            <option key={educationOption.id} value={educationOption.id}>{educationOption.display}</option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    {errors.educationId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.educationId}</span>\r\n                                                    ) : \"\" }\r\n                                                </FormGroup>\r\n                                            </div>\r\n                                            <div className=\"form-group mb-3 col-md-4\">\r\n                                                <FormGroup>\r\n                                                    <Label for=\"patientId\">National Identity Number (NIN)  </Label>\r\n                                                    <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        name=\"nin\"\r\n                                                        id=\"nin\"\r\n                                                        value={basicInfo.ninNumber}\r\n                                                        //onChange={handleInputChangeBasic}\r\n                                                        style={{border: \"1px solid #014D88\",borderRadius:\"0.2rem\"}}\r\n                                                    />\r\n                                                   \r\n                                                </FormGroup>\r\n                                            \r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Contact Details</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Phone Number *</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    maxLength={5}\r\n                                                    name=\"phoneNumber\"\r\n                                                    id=\"phoneNumber\"\r\n                                                    value={basicInfo.phoneNumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'phoneNumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                {errors.phoneNumber !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.phoneNumber}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Alt. Phone Number</Label>\r\n                                                <PhoneInput\r\n                                                    containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                    inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                    country={'ng'}\r\n                                                    placeholder=\"(234)7099999999\"\r\n                                                    value={basicInfo.altPhonenumber}\r\n                                                    onChange={(e)=>{checkPhoneNumberBasic(e,'altPhonenumber')}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    id=\"email\"\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    value={basicInfo.email}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                />\r\n                                               \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Country *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"countryId\"\r\n                                                    id=\"countryId\"\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    value={basicInfo.countryId}\r\n                                                    onChange={getStates}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value={\"\"}>Select</option>\r\n                                                    {countries.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.countryId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.countryId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>State *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"stateId\"\r\n                                                    id=\"stateId\"\r\n                                                    value={basicInfo.stateId}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={getProvinces}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {states.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.stateId !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.stateId}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Province/District/LGA *</Label>\r\n                                                <select\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"district\"\r\n                                                    id=\"district\"\r\n                                                    value={basicInfo.district}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    >\r\n                                                    <option value=\"\">Select</option>\r\n                                                    {provinces.map((value, index) => (\r\n                                                        <option key={index} value={value.id}>\r\n                                                            {value.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                                {errors.district !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.district}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={\"row\"}>\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Street Address*</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    id=\"address\"\r\n                                                    value={basicInfo.address}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                   \r\n                                                />\r\n                                               {errors.address !==\"\" ? (\r\n                                                    <span className={classes.error}>{errors.address}</span>\r\n                                                    ) : \"\" }\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group  col-md-4\">\r\n                                            <FormGroup>\r\n                                                <Label>Landmark</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    name=\"landmark\"\r\n                                                    id=\"landmark\"\r\n                                                    value={basicInfo.landmark}\r\n                                                    onChange={handleInputChangeBasic}\r\n                                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                                    \r\n                                                />\r\n                                                \r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder',  borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\" style={{color:'#fff'}}>Relationship / Next Of Kin</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            contacts && contacts.length > 0 && (\r\n                                                <div className=\"col-xl-12 col-lg-12\">\r\n                                                    <table style={{ width: '100%' }} className=\"mb-3\">\r\n                                                        <thead className=\"mb-3\">\r\n                                                        <tr>\r\n                                                            <th>Relationship Type</th>\r\n                                                            <th>Name</th>\r\n                                                            <th>Phone</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody className=\"mb-3\">\r\n                                                        {contacts.map((item, index) => {\r\n                                                            return (\r\n                                                                <tr key={item.index} className=\"mb-3\">\r\n                                                                    <td>{ \r\n                                                                        getRelationship(item.relationshipId) \r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                        item.firstName + \" \"  + item.middleName + \" \" + item.lastName\r\n                                                                    }</td>\r\n                                                                    <td>{ \r\n                                                                            item.phone\r\n                                                                        }</td>\r\n                                                                    <td>{ \r\n                                                                            item.address\r\n                                                                    }</td>\r\n                                                                    <td>\r\n                                                                        <button type=\"button\"\r\n                                                                                className=\"btn btn-default btn-light btn-sm editRow\"\r\n                                                                                onClick={() => handleEditRelative(item, index)}\r\n                                                                                >\r\n                                                                            <FontAwesomeIcon icon=\"edit\" />\r\n                                                                        </button>\r\n                                                                        &nbsp;&nbsp;\r\n                                                                        <button\r\n                                                                            type=\"button\"\r\n                                                                            className=\"btn btn-danger btn-sm removeRow\"\r\n                                                                            onClick={(e) => handleDeleteRelative(index)}\r\n                                                                            >\r\n                                                                            <FontAwesomeIcon icon=\"trash\" />\r\n                                                                        </button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            );\r\n                                                        })}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"col-xl-12 col-lg-12\">\r\n                                            {\r\n                                                showRelative && (\r\n                                                    <div className=\"card\">\r\n                                                        <div className=\"card-body\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"relationshipType\">Relationship Type *</Label>\r\n                                                                        <select\r\n                                                                            className=\"form-control\"\r\n                                                                            name=\"relationshipId\"\r\n                                                                            id=\"relationshipId\"\r\n                                                                            value={relatives.relationshipId}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            >\r\n                                                                            <option value={\"\"}>Select</option>\r\n                                                                            {relationshipOptions.map((relative, index) => (\r\n                                                                                <option key={relative.id} value={relative.id}>{relative.display}</option>\r\n                                                                            ))}\r\n                                                                        </select>\r\n                                                                        {errors.relationshipId !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.relationshipId}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"cfirstName\">First Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"firstName\"\r\n                                                                            value={relatives.firstName}\r\n                                                                            id=\"firstName\"\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.firstName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.firstName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Middle Name</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"middleName\"\r\n                                                                            id=\"middleName\"\r\n                                                                            value={relatives.middleName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.cmiddleName && <p>{errors.cmiddleName.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label>Last Name *</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"lastName\"\r\n                                                                            id=\"lastName\"\r\n                                                                            value={relatives.lastName}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                       {errors.lastName !==\"\" ? (\r\n                                                                        <span className={classes.error}>{errors.lastName}</span>\r\n                                                                        ) : \"\" }\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactPhoneNumber\">Phone Number</Label>\r\n                                                                        <PhoneInput\r\n                                                                            containerStyle={{width:'100%',border: \"1px solid #014D88\"}}\r\n                                                                            inputStyle={{width:'100%',borderRadius:'0px'}}\r\n                                                                            country={'ng'}\r\n                                                                            placeholder=\"(234)7099999999\"\r\n                                                                            name=\"phone\"\r\n                                                                            value={relatives.phone}\r\n                                                                            id=\"phone\"\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                            onChange={(e)=>{checkPhoneNumber(e.slice(0, 10),'phone')}}\r\n                                                                        />\r\n                                                                    \r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactEmail\">Email</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"email\"\r\n                                                                            id=\"email\"\r\n                                                                            value={relatives.email}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactEmail && <p>{errors.contactEmail.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"form-group mb-3 col-md-3\">\r\n                                                                    <FormGroup>\r\n                                                                        <Label for=\"contactAddress\">Address</Label>\r\n                                                                        <input\r\n                                                                            className=\"form-control\"\r\n                                                                            type=\"text\"\r\n                                                                            name=\"address\"\r\n                                                                            id=\"address\"\r\n                                                                            value={relatives.address}\r\n                                                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                                                            onChange={handleInputChangeRelatives}\r\n                                                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                                                        />\r\n                                                                        {/* {errors.contactAddress && <p>{errors.contactAddress.message}</p>} */}\r\n                                                                    </FormGroup>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"primary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleSaveRelationship}\r\n                                                                    >\r\n                                                                        Add\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"col-1\">\r\n                                                                    <MatButton\r\n                                                                        type=\"button\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\"\r\n                                                                        className={classes.button}\r\n                                                                        onClick={handleCancelSaveRelationship}\r\n                                                                    >\r\n                                                                        Cancel\r\n                                                                    </MatButton>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\"></div>\r\n                                        <MatButton\r\n                                            type=\"button\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className={classes.button}\r\n                                            startIcon={<AddIcon />}\r\n                                            onClick={handleAddRelative}\r\n                                            style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                        >\r\n                                            Add a Relative/Next Of Kin\r\n                                        </MatButton>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                            </div>\r\n                            {/* Adding HIV ENROLLEMENT FORM HERE */}\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\" style={{backgroundColor:\"#014d88\",color:'#fff',fontWeight:'bolder', borderRadius:\"0.2rem\"}}>\r\n                                    <h5 className=\"card-title\"  style={{color:'#fff'}}>HIV Enrollment</h5>\r\n                                </div>\r\n\r\n                                <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"uniqueId\">Unique ID No  * </Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"uniqueId\"\r\n                                        id=\"uniqueId\"\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.uniqueId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        disabled\r\n                                        \r\n                                    />\r\n                                    {errors.uniqueId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.uniqueId}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label for=\"dateOfRegistration\">Date of Enrollment * </Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateOfRegistration\"\r\n                                        id=\"dateOfRegistration\"\r\n                                        min={basicInfo.dateOfRegistration}\r\n                                        max= {moment(new Date()).format(\"YYYY-MM-DD\") }\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateOfRegistration}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    />\r\n                                    {errors.dateOfRegistration !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.dateOfRegistration}</span>\r\n                                    ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label for=\"entryPointId\">Care Entry Point * </Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"entryPointId\"\r\n                                    id=\"entryPointId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.entryPointId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> </option>                  \r\n                                {carePoints.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.entryPointId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.entryPointId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                \r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                {transferIn===true ? \r\n                                    (\r\n                                        <FormGroup>\r\n                                        <Label >Facility Name</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"facilityName\"\r\n                                            id=\"facilityName\"\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.facilityName}  \r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        </FormGroup>\r\n                                    ):\"\"}\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                <FormGroup>\r\n                                <Label >HIV Status at Registration *</Label>\r\n                                <Input\r\n                                    type=\"select\"\r\n                                    name=\"statusAtRegistrationId\"\r\n                                    id=\"statusAtRegistrationId\"\r\n                                    onChange={handleInputChange}\r\n                                    value={objValues.statusAtRegistrationId}\r\n                                    style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                    //disabled={locationState.actionType==='update'? false : true}\r\n                                    \r\n                                >\r\n                                <option value=\"\"> Select</option>                  \r\n                                {hivStatus.map((value) => (\r\n                                    <option key={value.id} value={value.id}>\r\n                                        {value.display}\r\n                                    </option>\r\n                                ))}\r\n                                </Input>\r\n                                {errors.statusAtRegistrationId !==\"\" ? (\r\n                                    <span className={classes.error}>{errors.statusAtRegistrationId}</span>\r\n                                    ) : \"\" }\r\n                                </FormGroup>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Date of Confirmed HIV Test *</Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"dateConfirmedHiv\"\r\n                                        id=\"dateConfirmedHiv\"\r\n                                        min={basicInfo.dob}\r\n                                        max={objValues.dateOfRegistration}\r\n                                        onChange={handleInputChange}\r\n                                        value={objValues.dateConfirmedHiv}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    /> \r\n                                    {errors.dateConfirmedHiv !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                        ) : \"\" } \r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Source of Referral *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"sourceOfReferrerId\"\r\n                                        id=\"sourceOfReferrerId\"\r\n                                        value={objValues.sourceOfReferrerId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        \r\n                                    >\r\n                                        <option value=\"\">Select </option>                 \r\n                                            {sourceReferral.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.sourceOfReferrerId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.sourceOfReferrerId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                \r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Enrollment Setting *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"enrollmentSettingId\"\r\n                                        id=\"enrollmentSettingId\"\r\n                                        value={objValues.enrollmentSettingId}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        onChange={handleInputChange}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n\r\n                                            {enrollSetting.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n                                    </Input>\r\n                                    {errors.enrollmentSettingId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.enrollmentSettingId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {(femaleStatus && basicInfo.age > 9) && (\r\n                                    <>\r\n                                   \r\n                                    <div className = \"form-group mb-3 col-md-6\" >\r\n                                        <FormGroup>\r\n                                        <Label> Pregnancy </Label>\r\n                                        <Input\r\n                                            type = \"select\"\r\n                                            name = \"pregnancyStatusId\"\r\n                                            id = \"pregnancyStatusId\"\r\n                                            value = {objValues.pregnancyStatusId}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            onChange = {handleInputChange}  \r\n                                            //disabled={locationState.actionType==='update'? false : true}                                      \r\n                                        >\r\n                                        < option value = \"\" >Select </option>\r\n                                        {pregnancyStatus.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                        </Input>                                                                        \r\n                                    </FormGroup>  \r\n                                    </div>\r\n                                    {objValues.pregnancyStatusId!=='72' && (\r\n                                    <>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date of LMP </Label>                                    \r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateOfLpm\"\r\n                                            id=\"dateOfLpm\"\r\n                                            max={today}\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateOfLpm}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            //disabled={locationState.actionType==='update'? false : true}\r\n                                        />  \r\n                                            \r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    </>\r\n                                    )}\r\n                                    </>\r\n                                )}\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >TB Status * </Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"tbStatusId\"\r\n                                        id=\"tbStatusId\"\r\n                                        value={objValues.tbStatusId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>\r\n                                            {tbStatus.map((value) => (\r\n                                                <option key={value.id} value={value.id}>\r\n                                                    {value.display}\r\n                                                </option>\r\n                                            ))}\r\n\r\n                                    </Input>\r\n                                    {errors.tbStatusId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.tbStatusId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                {hideTargetGroup===\"false\" ? (\r\n                                <div className=\"form-group mb-3 col-md-6\">\r\n                                    <FormGroup>\r\n                                    <Label >Target Group *</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"targetGroupId\"\r\n                                        id=\"targetGroupId\"\r\n                                        value={objValues.targetGroupId}\r\n                                        onChange={handleInputChange}\r\n                                        style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        >\r\n                                        <option value=\"\"> Select</option>                    \r\n                                                {kP.map((value) => (\r\n                                                    <option key={value.id} value={value.id}>\r\n                                                        {value.display}\r\n                                                    </option>\r\n                                                ))}\r\n                                    </Input>\r\n                                    {errors.targetGroupId !==\"\" ? (\r\n                                        <span className={classes.error}>{errors.targetGroupId}</span>\r\n                                        ) : \"\" }\r\n                                    </FormGroup>\r\n                                </div>\r\n                                ) : \"\"}\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        //disabled={locationState.actionType==='update'? false : true}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                {basicInfo.age <=14 && (\r\n                                <div className=\"form-group mb-3 col-md-3\">\r\n                                    \r\n                                    <div className=\"form-check custom-checkbox ml-1 \">\r\n                                        <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"ovc_enrolled\"\r\n                                        id=\"ovc_enrolled\"                                        \r\n                                        onChange={handleCheckBox}\r\n                                        />\r\n                                        <label\r\n                                        className=\"form-check-label\"\r\n                                        htmlFor=\"basic_checkbox_1\"\r\n                                        >\r\n                                        Enrolled into OVC?\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                )}\r\n                                {/* <div className=\"form-group mb-3 col-md-3\">\r\n                                    {ovcEnrolled===true ? \r\n                                        (\r\n                                        <FormGroup>\r\n                                        <Label >OVC Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"ovcNumber\"\r\n                                            id=\"ovcNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.ovcNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                        )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div> */}\r\n                                \r\n                                {ovcEnrolled===true && \r\n                                (\r\n                                <>        \r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Household Unique Number</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"householdNumber\"\r\n                                            id=\"householdNumber\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.householdNumber}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\"></div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredToOVCPartner\"\r\n                                            id=\"referredToOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredToOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred To OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredToOVCPartner\"\r\n                                            id=\"dateReferredToOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredToOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"referredFromOVCPartner\"\r\n                                            id=\"referredFromOVCPartner\"\r\n                                            required={ovcEnrolled}\r\n                                            onChange={handleInputChange}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            value={objValues.referredFromOVCPartner}\r\n                                            \r\n                                        />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"form-group mb-3 col-md-6\">\r\n                                        <FormGroup>\r\n                                        <Label >Date Referred From OVC Partner</Label>\r\n                                        <Input\r\n                                            type=\"date\"\r\n                                            name=\"dateReferredFromOVCPartner\"\r\n                                            id=\"dateReferredFromOVCPartner\"\r\n                                            min={basicInfo.dob}\r\n                                            max={objValues.dateOfRegistration }\r\n                                            onChange={handleInputChange}\r\n                                            value={objValues.dateReferredFromOVCPartner}\r\n                                            style={{border: \"1px solid #014D88\", borderRadius:\"0.2rem\"}}\r\n                                            \r\n                                        /> \r\n                                        {/* {errors.dateConfirmedHiv !==\"\" ? (\r\n                                            <span className={classes.error}>{errors.dateConfirmedHiv}</span>\r\n                                            ) : \"\" }  */}\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                )}\r\n                            \r\n                            </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* END OF HIV ENROLLEMENT FORM */}\r\n                            {saving ? <Spinner /> : \"\"}\r\n\r\n                            <br />\r\n\r\n                            {locationState.actionType ==='update' ?\r\n                            (\r\n                                <>\r\n                                    <MatButton\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.button}\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={handleSubmit}\r\n                                        style={{backgroundColor:'#014d88',fontWeight:\"bolder\"}}\r\n                                    >\r\n                                        {!saving ? (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Update</span>\r\n                                        ) : (\r\n                                            <span style={{ textTransform: \"capitalize\" }}>Updating...</span>\r\n                                        )}\r\n                                    </MatButton>\r\n            \r\n                                    <MatButton\r\n                                        variant=\"contained\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CancelIcon />}\r\n                                        onClick={handleCancel}\r\n                                        style={{backgroundColor:'#992E62'}}\r\n                                    >\r\n                                        <span style={{ textTransform: \"capitalize\", color:\"#fff\" }}>Cancel</span>\r\n                                    </MatButton>\r\n                            </>\r\n                            ):\"\"}\r\n                        </Form>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserRegistration","import React from \"react\";\r\nimport {\r\n  MemoryRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./main/webapp/vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./../src/main/webapp/css/style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Home from './main/webapp/jsx/components/Home'\r\nimport PatientDetail from './main/webapp/jsx/components/Patient/PatientDetail'\r\nimport RegisterPatientPage from './main/webapp/jsx/components/Patient/RegisterPatient';\r\nimport EnrollPatientPage from './main/webapp/jsx/components/Patient/EnrollPatient';\r\nimport UpdatePatientEnrollment from './main/webapp/jsx/components/Patient/UpdatePatientEnrollment';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <ToastContainer />\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/patient-history\">\r\n            <PatientDetail />\r\n          </Route> \r\n          <Route path=\"/register-patient\">\r\n            <RegisterPatientPage />\r\n          </Route>\r\n          <Route path=\"/enroll-patient\">\r\n            <EnrollPatientPage />\r\n          </Route>\r\n          <Route path=\"/update-patient\">\r\n            <UpdatePatientEnrollment />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>       \r\n          \r\n        </Switch>\r\n      </div>\r\n </Router>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let direction = 'ltr';\r\n\r\nexport const dezThemeSet = [\r\n\t{ /* Default */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"full\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{ /* Demo Theme 1 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tprimary: \"color_5\",\r\n\t\theaderBg: \"color_5\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tdirection: direction\r\n\t},\r\n\t { /* Demo Theme 2 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_11\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_11\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_11\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 3 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"dark\",\r\n\t\tlayout: \"vertical\",\r\n\t\theaderBg: \"color_3\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 4 */\t\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"full\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t\t\r\n\t},\r\n\t{\r\n\t\t/* Demo Theme 5 */\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"horizontal\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarBg: \"color_9\",\r\n\t\tsidebarStyle: \"modern\",\r\n\t\tsidebarPosition: \"static\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_9\",\r\n\t\tdirection: direction\r\n\t},\r\n\t/* {\r\n\t\t//Demo Theme 6\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_3\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"mini\",\r\n\t\tsidebarBg: \"color_10\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_1\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 7 \r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_1\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"compact\",\r\n\t\tsidebarBg: \"color_1\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_6\",\r\n\t\tdirection: direction\r\n\t},\r\n\t{\r\n\t\t// Demo Theme 8 *\r\n\t\ttypography: \"poppins\",\r\n\t\tversion: \"light\",\r\n\t\tlayout: \"vertical\",\r\n\t\tnavheaderBg: \"color_15\",\r\n\t\theaderBg: \"color_1\",\r\n\t\tsidebarStyle: \"icon-hover\",\r\n\t\tsidebarBg: \"color_15\",\r\n\t\tsidebarPosition: \"fixed\",\r\n\t\theaderPosition: \"fixed\",\r\n\t\tcontainerLayout: \"wide\",\r\n\t\tprimary: \"color_15\",\r\n\t\tdirection: direction\r\n\t} */\r\n];\r\n\t","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {dezThemeSet} from './ThemeDemo';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n\tconst [sideBarStyle, setSideBarStyle] = useState({ value: \"full\", label: \"Full\",});\r\n\tconst [sidebarposition, setSidebarposition] = useState({ value: \"fixed\",\tlabel: \"Fixed\",});\r\n    const [headerposition, setHeaderposition] = useState({ value: \"fixed\", label: \"Fixed\", });\r\n    const [sidebarLayout, setSidebarLayout] = useState({ value: \"vertical\", label: \"Vertical\",});\r\n\tconst [direction, setDirection] = useState({ value: \"ltr\", label: \"LTR\" });\r\n\tconst [primaryColor, setPrimaryColor] = useState(\"color_1\");\r\n\tconst [navigationHader, setNavigationHader] = useState(\"color_1\");\r\n\tconst [haderColor, setHaderColor] = useState(\"color_1\");\r\n\tconst [sidebarColor, setSidebarColor] = useState(\"color_1\");\r\n\tconst [iconHover, setIconHover] = useState(false);\r\n\tconst [menuToggle, setMenuToggle] = useState(false);\r\n\tconst [background, setBackground] = useState({ value: \"light\",\tlabel: \"Light\",});\r\n\tconst [containerPosition_, setcontainerPosition_] = useState({value: \"wide-boxed\", label: \"Wide Boxed\",});\r\n    const body = document.querySelector(\"body\");\r\n    const [windowWidth, setWindowWidth] = useState(0);\r\n    const [windowHeight, setWindowHeight] = useState(0);\r\n\r\n  // layout\r\n  const layoutOption = [\r\n    { value: \"vertical\", label: \"Vertical\" },\r\n    { value: \"horizontal\", label: \"Horizontal\" },\r\n  ];\r\n  const sideBarOption = [\r\n    { value: \"compact\", label: \"Compact\" },\r\n    { value: \"full\", label: \"Full\" },\r\n    { value: \"mini\", label: \"Mini\" },\r\n    { value: \"modern\", label: \"Modern\" },\r\n    { value: \"overlay\", label: \"Overlay\" },\r\n    { value: \"icon-hover\", label: \"Icon-hover\" },\r\n  ];\r\n  const backgroundOption = [\r\n    { value: \"light\", label: \"Light\" },\r\n    { value: \"dark\", label: \"Dark\" },\r\n  ];\r\n  const sidebarpositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const headerPositions = [\r\n    { value: \"fixed\", label: \"Fixed\" },\r\n    { value: \"static\", label: \"Static\" },\r\n  ];\r\n  const containerPosition = [\r\n    { value: \"wide-boxed\", label: \"Wide Boxed\" },\r\n    { value: \"boxed\", label: \"Boxed\" },\r\n    { value: \"wide\", label: \"Wide\" },\r\n  ];\r\n  const colors = [\r\n    \"color_1\",\r\n    \"color_2\",\r\n    \"color_3\",\r\n    \"color_4\",\r\n    \"color_5\",\r\n    \"color_6\",\r\n    \"color_7\",\r\n    \"color_8\",\r\n    \"color_9\",\r\n    \"color_10\",\r\n    \"color_11\",\r\n    \"color_12\",\r\n    \"color_13\",\r\n    \"color_14\",\r\n    \"color_15\",\r\n  ];\r\n  const directionPosition = [\r\n    { value: \"ltr\", label: \"LTR\" },\r\n    { value: \"rtl\", label: \"RTL\" },\r\n  ];\r\n  const fontFamily = [\r\n    { value: \"poppins\", label: \"Poppins\" },\r\n    { value: \"roboto\", label: \"Roboto\" },\r\n    { value: \"cairo\", label: \"Cairo\" },\r\n    { value: \"opensans\", label: \"Open Sans\" },\r\n    { value: \"HelveticaNeue\", label: \"HelveticaNeue\" },\r\n  ];\r\n  const changePrimaryColor = (name) => {\r\n\tsetPrimaryColor(name);\r\n    body.setAttribute(\"data-primary\", name);\r\n  };\r\n  const changeNavigationHader = (name) => {\r\n    setNavigationHader(name);\r\n    body.setAttribute(\"data-nav-headerbg\", name);\r\n  };\r\n  const chnageHaderColor = (name) => {\r\n    setHaderColor(name);\r\n    body.setAttribute(\"data-headerbg\", name);\r\n  };\r\n  const chnageSidebarColor = (name) => {\r\n    setSidebarColor(name);\r\n    body.setAttribute(\"data-sibebarbg\", name);\r\n  };\r\n  const changeSideBarPostion = (name) => {\r\n    setSidebarposition(name);\r\n    body.setAttribute(\"data-sidebar-position\", name.value);\r\n  };\r\n  const changeDirectionLayout = (name) => {\r\n    setDirection(name);\r\n    body.setAttribute(\"direction\", name.value);\r\n    let html = document.querySelector(\"html\");\r\n    html.setAttribute(\"dir\", name.value);\r\n    html.className = name.value;\r\n  };\r\n  const changeSideBarLayout = (name) => {\r\n    if (name.value === \"horizontal\") {\r\n      if (sideBarStyle.value === \"overlay\") {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n        setSideBarStyle({ value: \"full\", label: \"Full\" });\r\n        body.setAttribute(\"data-sidebar-style\", \"full\");\r\n      } else {\r\n        setSidebarLayout(name);\r\n        body.setAttribute(\"data-layout\", name.value);\r\n      }\r\n    } else {\r\n      setSidebarLayout(name);\r\n      body.setAttribute(\"data-layout\", name.value);\r\n    }\r\n  };\r\n  const changeSideBarStyle = (name) => {\r\n    if (sidebarLayout.value === \"horizontal\") {\r\n      if (name.value === \"overlay\") {\r\n        alert(\"Sorry! Overlay is not possible in Horizontal layout.\");\r\n      } else {\r\n        setSideBarStyle(name);\r\n        setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n        body.setAttribute(\"data-sidebar-style\", name.value);\r\n      }\r\n    } else {\r\n      setSideBarStyle(name);\r\n      setIconHover(name.value === \"icon-hover\" ? \"_i-hover\" : \"\");\r\n      body.setAttribute(\"data-sidebar-style\", name.value);\r\n    }\r\n  };\r\n\r\n  const changeHeaderPostion = (name) => {\r\n    setHeaderposition(name);\r\n    body.setAttribute(\"data-header-position\", name.value);\r\n  };\r\n\r\n  const openMenuToggle = () => {\r\n    sideBarStyle.value === \"overly\"\r\n      ? setMenuToggle(true)\r\n      : setMenuToggle(false);\r\n  };\r\n\r\n  const changeBackground = (name) => {\r\n    body.setAttribute(\"data-theme-version\", name.value);\r\n    setBackground(name);\r\n  };\r\n\r\n  const changeContainerPosition = (name) => {\r\n    setcontainerPosition_(name);\r\n    body.setAttribute(\"data-container\", name.value);\r\n    name.value === \"boxed\" &&\r\n      changeSideBarStyle({ value: \"overlay\", label: \"Overlay\" });\r\n  };\r\n  \r\n  const setDemoTheme = (theme,direction) => {\r\n\r\n\tvar setAttr = {};\t\r\n\t\r\n\t\r\n\tvar themeSettings = dezThemeSet[theme];\t\r\n\t\t\r\n\tbody.setAttribute(\"data-typography\", themeSettings.typography);\r\n \r\n\tsetAttr.value = themeSettings.version;\r\n\tchangeBackground(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.layout;\r\n\tchangeSideBarLayout(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.primary;\r\n\tchangePrimaryColor(themeSettings.primary);\r\n\t\r\n//setAttr.value = themeSettings.navheaderBg;\r\n\tchangeNavigationHader(themeSettings.navheaderBg);\r\n\t\r\n//setAttr.value = themeSettings.headerBg;\r\n\tchnageHaderColor(themeSettings.headerBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarStyle;\r\n\tchangeSideBarStyle(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.sidebarBg;\r\n\tchnageSidebarColor(themeSettings.sidebarBg);\r\n\t\r\n\tsetAttr.value = themeSettings.sidebarPosition;\r\n\tchangeSideBarPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.headerPosition;\r\n\tchangeHeaderPostion(setAttr);\r\n\t\r\n\tsetAttr.value = themeSettings.containerLayout;\r\n\tchangeContainerPosition(setAttr);\r\n\t\r\n\t//setAttr.value = themeSettings.direction;\r\n\tsetAttr.value = direction;\r\n\tchangeDirectionLayout(setAttr); \r\n\t\r\n\t};\r\n\r\n  useEffect(() => {\r\n\tconst body = document.querySelector(\"body\");\r\n    body.setAttribute(\"data-typography\", \"poppins\");\r\n    body.setAttribute(\"data-theme-version\", \"light\");\r\n    body.setAttribute(\"data-layout\", \"vertical\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-nav-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-headerbg\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-style\", \"overlay\");\r\n    body.setAttribute(\"data-sibebarbg\", \"color_1\");\r\n    body.setAttribute(\"data-primary\", \"color_1\");\r\n    body.setAttribute(\"data-sidebar-position\", \"fixed\");\r\n    body.setAttribute(\"data-header-position\", \"fixed\");\r\n    body.setAttribute(\"data-container\", \"wide\");\r\n    body.setAttribute(\"direction\", \"ltr\");\r\n\t\tlet resizeWindow = () => {\r\n\t\t\tsetWindowWidth(window.innerWidth);\r\n\t\t\tsetWindowHeight(window.innerHeight);\r\n\t\t\twindow.innerWidth >= 768 && window.innerWidth < 1024\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"mini\")\r\n\t\t\t: window.innerWidth <= 768\r\n\t\t\t? body.setAttribute(\"data-sidebar-style\", \"overlay\")\r\n\t\t\t: body.setAttribute(\"data-sidebar-style\", \"full\");\r\n\t\t};\r\n    resizeWindow();\r\n    window.addEventListener(\"resize\", resizeWindow);\r\n    return () => window.removeEventListener(\"resize\", resizeWindow);\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        body,\r\n        sideBarOption,\r\n        layoutOption,\r\n        backgroundOption,\r\n        sidebarposition,\r\n        headerPositions,\r\n        containerPosition,\r\n        directionPosition,\r\n        fontFamily,\r\n\t\tprimaryColor,\r\n        navigationHader,\r\n\t\twindowWidth,\r\n\t\twindowHeight,\r\n        changePrimaryColor,\r\n        changeNavigationHader,\r\n        changeSideBarStyle,\r\n        sideBarStyle,\r\n        changeSideBarPostion,\r\n        sidebarpositions,\r\n        changeHeaderPostion,\r\n        headerposition,\r\n        changeSideBarLayout,\r\n        sidebarLayout,\r\n        changeDirectionLayout,\r\n        changeContainerPosition,\r\n        direction,\r\n        colors,\r\n        haderColor,\r\n        chnageHaderColor,\r\n        chnageSidebarColor,\r\n        sidebarColor,\r\n        iconHover,\r\n        menuToggle,\r\n        openMenuToggle,\r\n        changeBackground,\r\n        background,\r\n        containerPosition_,\r\n\t\tsetDemoTheme,\r\n\t}}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\"; \r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>  \r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}